📁 FIL- OG MAPPESTRUKTUR:
  .
  ./node_modules
  ./static
  ./static/data
  ./.svelte-kit
  ./.svelte-kit/generated
  ./.svelte-kit/generated/server
  ./.svelte-kit/generated/client
  ./.svelte-kit/generated/client/nodes
  ./.svelte-kit/types
  ./.svelte-kit/types/src
  ./.svelte-kit/types/src/routes
  ./.svelte-kit/types/src/routes/about
  ./.svelte-kit/types/src/routes/ps
  ./.svelte-kit/types/src/routes/radar
  ./.svelte-kit/types/src/routes/schools
  ./.git
  ./src
  ./src/lib
  ./src/lib/utils
  ./src/lib/components
  ./src/lib/data
  ./src/routes
  ./src/routes/about
  ./src/routes/ps
  ./src/routes/radar
  ./src/routes/schools

📄 VIKTIGE FILER MED INNHOLD:

===== START ./svelte.config.js =====
import adapter from '@sveltejs/adapter-auto';
import { vitePreprocess } from '@sveltejs/vite-plugin-svelte';

/** @type {import('@sveltejs/kit').Config} */
const config = {
	// Consult https://svelte.dev/docs/kit/integrations
	// for more information about preprocessors
	preprocess: vitePreprocess(),

	kit: {
		// adapter-auto only supports some environments, see https://svelte.dev/docs/kit/adapter-auto for a list.
		// If your environment is not supported, or you settled on a specific environment, switch out the adapter.
		// See https://svelte.dev/docs/kit/adapters for more information about adapters.
		adapter: adapter()
	}
};

export default config;
===== SLUTT ./svelte.config.js =====

===== START ./tailwind.config.js =====
import forms from '@tailwindcss/forms';
import typography from '@tailwindcss/typography';

/** @type {import('tailwindcss').Config} */
export default {
  content: ['./src/**/*.{html,js,svelte,ts}'],
  darkMode: 'class',
  theme: {
    extend: {
      colors: {
        background: 'hsl(var(--background))',
        foreground: 'hsl(var(--foreground))',
        muted: 'hsl(var(--muted))',
        'muted-foreground': 'hsl(var(--muted-foreground))',
        border: 'hsl(var(--border))',
        primary: 'hsl(var(--primary))',
        'primary-foreground': 'hsl(var(--primary-foreground))',
        secondary: 'hsl(var(--secondary))',
        'secondary-foreground': 'hsl(var(--secondary-foreground))',
        card: 'hsl(var(--card))',
        'card-foreground': 'hsl(var(--card-foreground))',
      },
    },
  },
  plugins: [forms, typography],
};===== SLUTT ./tailwind.config.js =====

===== START ./vitest-setup-client.ts =====
import '@testing-library/jest-dom/vitest';
import { vi } from 'vitest';

// required for svelte5 + jsdom as jsdom does not support matchMedia
Object.defineProperty(window, 'matchMedia', {
	writable: true,
	enumerable: true,
	value: vi.fn().mockImplementation((query) => ({
		matches: false,
		media: query,
		onchange: null,
		addEventListener: vi.fn(),
		removeEventListener: vi.fn(),
		dispatchEvent: vi.fn()
	}))
});

// add more mocks here if you need them
===== SLUTT ./vitest-setup-client.ts =====

===== START ./README.md =====
# 📊 Strategy Safari Visualizer

An interactive visualization tool built with **SvelteKit** and **Chart.js**, designed to illustrate how different strategy schools from Mintzberg's *Strategy Safari* emphasize the five P's of strategy: **Plan, Pattern, Position, Perspective, and Ploy**.

## ✨ Features

- 🕸️ Interactive radar chart
- 📚 Grouping of schools by type: *Prescriptive* and *Descriptive*
- ✅ Checkbox toggles to show/hide individual schools
- 📱 Responsive and mobile-friendly layout
- 🚀 Default display of “Design” and “Learning” schools on load

## 🧱 Project Structure

- `+page.svelte`: Main component containing logic and layout
- `static/schoolData.json`: JSON data file with school values and group labels

### Example `schoolData.json`

```json
{
  "Design": { "group": "Prescriptive", "values": [5, 2, 3, 2, 1] },
  "Planning": { "group": "Prescriptive", "values": [5, 1, 3, 2, 2] },
  "Positioning": { "group": "Prescriptive", "values": [4, 2, 5, 2, 4] },
  "Learning": { "group": "Descriptive", "values": [2, 5, 3, 4, 2] }
}
===== SLUTT ./README.md =====

===== START ./package-lock.json =====
{
	"name": "strategy-safari",
	"version": "0.0.1",
	"lockfileVersion": 3,
	"requires": true,
	"packages": {
		"": {
			"name": "strategy-safari",
			"version": "0.0.1",
			"dependencies": {
				"chart.js": "^4.4.9"
			},
			"devDependencies": {
				"@eslint/compat": "^1.2.5",
				"@eslint/js": "^9.18.0",
				"@sveltejs/adapter-auto": "^6.0.0",
				"@sveltejs/kit": "^2.16.0",
				"@sveltejs/vite-plugin-svelte": "^5.0.0",
				"@tailwindcss/forms": "^0.5.7",
				"@tailwindcss/typography": "^0.5.10",
				"@testing-library/jest-dom": "^6.6.3",
				"@testing-library/svelte": "^5.2.4",
				"autoprefixer": "^10.4.17",
				"eslint": "^9.18.0",
				"eslint-config-prettier": "^10.0.1",
				"eslint-plugin-svelte": "^3.0.0",
				"globals": "^16.0.0",
				"jsdom": "^26.0.0",
				"postcss": "^8.4.33",
				"prettier": "^3.4.2",
				"prettier-plugin-svelte": "^3.3.3",
				"prettier-plugin-tailwindcss": "^0.6.11",
				"svelte": "^5.0.0",
				"svelte-check": "^4.0.0",
				"tailwindcss": "^3.4.1",
				"typescript": "^5.0.0",
				"typescript-eslint": "^8.20.0",
				"vite": "^6.2.6",
				"vitest": "^3.0.0"
			}
		},
		"node_modules/@adobe/css-tools": {
			"version": "4.4.3",
			"resolved": "https://registry.npmjs.org/@adobe/css-tools/-/css-tools-4.4.3.tgz",
			"integrity": "sha512-VQKMkwriZbaOgVCby1UDY/LDk5fIjhQicCvVPFqfe+69fWaPWydbWJ3wRt59/YzIwda1I81loas3oCoHxnqvdA==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/@alloc/quick-lru": {
			"version": "5.2.0",
			"resolved": "https://registry.npmjs.org/@alloc/quick-lru/-/quick-lru-5.2.0.tgz",
			"integrity": "sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=10"
			},
			"funding": {
				"url": "https://github.com/sponsors/sindresorhus"
			}
		},
		"node_modules/@ampproject/remapping": {
			"version": "2.3.0",
			"resolved": "https://registry.npmjs.org/@ampproject/remapping/-/remapping-2.3.0.tgz",
			"integrity": "sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==",
			"dev": true,
			"license": "Apache-2.0",
			"dependencies": {
				"@jridgewell/gen-mapping": "^0.3.5",
				"@jridgewell/trace-mapping": "^0.3.24"
			},
			"engines": {
				"node": ">=6.0.0"
			}
		},
		"node_modules/@asamuzakjp/css-color": {
			"version": "3.2.0",
			"resolved": "https://registry.npmjs.org/@asamuzakjp/css-color/-/css-color-3.2.0.tgz",
			"integrity": "sha512-K1A6z8tS3XsmCMM86xoWdn7Fkdn9m6RSVtocUrJYIwZnFVkng/PvkEoWtOWmP+Scc6saYWHWZYbndEEXxl24jw==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@csstools/css-calc": "^2.1.3",
				"@csstools/css-color-parser": "^3.0.9",
				"@csstools/css-parser-algorithms": "^3.0.4",
				"@csstools/css-tokenizer": "^3.0.3",
				"lru-cache": "^10.4.3"
			}
		},
		"node_modules/@babel/code-frame": {
			"version": "7.27.1",
			"resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.27.1.tgz",
			"integrity": "sha512-cjQ7ZlQ0Mv3b47hABuTevyTuYN4i+loJKGeV9flcCgIK37cCXRh+L1bd3iBHlynerhQ7BhCkn2BPbQUL+rGqFg==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@babel/helper-validator-identifier": "^7.27.1",
				"js-tokens": "^4.0.0",
				"picocolors": "^1.1.1"
			},
			"engines": {
				"node": ">=6.9.0"
			}
		},
		"node_modules/@babel/helper-validator-identifier": {
			"version": "7.27.1",
			"resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.27.1.tgz",
			"integrity": "sha512-D2hP9eA+Sqx1kBZgzxZh0y1trbuU+JoDkiEwqhQ36nodYqJwyEIhPSdMNd7lOm/4io72luTPWH20Yda0xOuUow==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=6.9.0"
			}
		},
		"node_modules/@babel/runtime": {
			"version": "7.27.6",
			"resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.27.6.tgz",
			"integrity": "sha512-vbavdySgbTTrmFE+EsiqUTzlOr5bzlnJtUv9PynGCAKvfQqjIXbvFdumPM/GxMDfyuGMJaJAU6TO4zc1Jf1i8Q==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=6.9.0"
			}
		},
		"node_modules/@csstools/color-helpers": {
			"version": "5.0.2",
			"resolved": "https://registry.npmjs.org/@csstools/color-helpers/-/color-helpers-5.0.2.tgz",
			"integrity": "sha512-JqWH1vsgdGcw2RR6VliXXdA0/59LttzlU8UlRT/iUUsEeWfYq8I+K0yhihEUTTHLRm1EXvpsCx3083EU15ecsA==",
			"dev": true,
			"funding": [
				{
					"type": "github",
					"url": "https://github.com/sponsors/csstools"
				},
				{
					"type": "opencollective",
					"url": "https://opencollective.com/csstools"
				}
			],
			"license": "MIT-0",
			"engines": {
				"node": ">=18"
			}
		},
		"node_modules/@csstools/css-calc": {
			"version": "2.1.4",
			"resolved": "https://registry.npmjs.org/@csstools/css-calc/-/css-calc-2.1.4.tgz",
			"integrity": "sha512-3N8oaj+0juUw/1H3YwmDDJXCgTB1gKU6Hc/bB502u9zR0q2vd786XJH9QfrKIEgFlZmhZiq6epXl4rHqhzsIgQ==",
			"dev": true,
			"funding": [
				{
					"type": "github",
					"url": "https://github.com/sponsors/csstools"
				},
				{
					"type": "opencollective",
					"url": "https://opencollective.com/csstools"
				}
			],
			"license": "MIT",
			"engines": {
				"node": ">=18"
			},
			"peerDependencies": {
				"@csstools/css-parser-algorithms": "^3.0.5",
				"@csstools/css-tokenizer": "^3.0.4"
			}
		},
		"node_modules/@csstools/css-color-parser": {
			"version": "3.0.10",
			"resolved": "https://registry.npmjs.org/@csstools/css-color-parser/-/css-color-parser-3.0.10.tgz",
			"integrity": "sha512-TiJ5Ajr6WRd1r8HSiwJvZBiJOqtH86aHpUjq5aEKWHiII2Qfjqd/HCWKPOW8EP4vcspXbHnXrwIDlu5savQipg==",
			"dev": true,
			"funding": [
				{
					"type": "github",
					"url": "https://github.com/sponsors/csstools"
				},
				{
					"type": "opencollective",
					"url": "https://opencollective.com/csstools"
				}
			],
			"license": "MIT",
			"dependencies": {
				"@csstools/color-helpers": "^5.0.2",
				"@csstools/css-calc": "^2.1.4"
			},
			"engines": {
				"node": ">=18"
			},
			"peerDependencies": {
				"@csstools/css-parser-algorithms": "^3.0.5",
				"@csstools/css-tokenizer": "^3.0.4"
			}
		},
		"node_modules/@csstools/css-parser-algorithms": {
			"version": "3.0.5",
			"resolved": "https://registry.npmjs.org/@csstools/css-parser-algorithms/-/css-parser-algorithms-3.0.5.tgz",
			"integrity": "sha512-DaDeUkXZKjdGhgYaHNJTV9pV7Y9B3b644jCLs9Upc3VeNGg6LWARAT6O+Q+/COo+2gg/bM5rhpMAtf70WqfBdQ==",
			"dev": true,
			"funding": [
				{
					"type": "github",
					"url": "https://github.com/sponsors/csstools"
				},
				{
					"type": "opencollective",
					"url": "https://opencollective.com/csstools"
				}
			],
			"license": "MIT",
			"engines": {
				"node": ">=18"
			},
			"peerDependencies": {
				"@csstools/css-tokenizer": "^3.0.4"
			}
		},
		"node_modules/@csstools/css-tokenizer": {
			"version": "3.0.4",
			"resolved": "https://registry.npmjs.org/@csstools/css-tokenizer/-/css-tokenizer-3.0.4.tgz",
			"integrity": "sha512-Vd/9EVDiu6PPJt9yAh6roZP6El1xHrdvIVGjyBsHR0RYwNHgL7FJPyIIW4fANJNG6FtyZfvlRPpFI4ZM/lubvw==",
			"dev": true,
			"funding": [
				{
					"type": "github",
					"url": "https://github.com/sponsors/csstools"
				},
				{
					"type": "opencollective",
					"url": "https://opencollective.com/csstools"
				}
			],
			"license": "MIT",
			"engines": {
				"node": ">=18"
			}
		},
		"node_modules/@esbuild/aix-ppc64": {
			"version": "0.25.5",
			"resolved": "https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.25.5.tgz",
			"integrity": "sha512-9o3TMmpmftaCMepOdA5k/yDw8SfInyzWWTjYTFCX3kPSDJMROQTb8jg+h9Cnwnmm1vOzvxN7gIfB5V2ewpjtGA==",
			"cpu": [
				"ppc64"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"aix"
			],
			"engines": {
				"node": ">=18"
			}
		},
		"node_modules/@esbuild/android-arm": {
			"version": "0.25.5",
			"resolved": "https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.25.5.tgz",
			"integrity": "sha512-AdJKSPeEHgi7/ZhuIPtcQKr5RQdo6OO2IL87JkianiMYMPbCtot9fxPbrMiBADOWWm3T2si9stAiVsGbTQFkbA==",
			"cpu": [
				"arm"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"android"
			],
			"engines": {
				"node": ">=18"
			}
		},
		"node_modules/@esbuild/android-arm64": {
			"version": "0.25.5",
			"resolved": "https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.25.5.tgz",
			"integrity": "sha512-VGzGhj4lJO+TVGV1v8ntCZWJktV7SGCs3Pn1GRWI1SBFtRALoomm8k5E9Pmwg3HOAal2VDc2F9+PM/rEY6oIDg==",
			"cpu": [
				"arm64"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"android"
			],
			"engines": {
				"node": ">=18"
			}
		},
		"node_modules/@esbuild/android-x64": {
			"version": "0.25.5",
			"resolved": "https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.25.5.tgz",
			"integrity": "sha512-D2GyJT1kjvO//drbRT3Hib9XPwQeWd9vZoBJn+bu/lVsOZ13cqNdDeqIF/xQ5/VmWvMduP6AmXvylO/PIc2isw==",
			"cpu": [
				"x64"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"android"
			],
			"engines": {
				"node": ">=18"
			}
		},
		"node_modules/@esbuild/darwin-arm64": {
			"version": "0.25.5",
			"resolved": "https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.25.5.tgz",
			"integrity": "sha512-GtaBgammVvdF7aPIgH2jxMDdivezgFu6iKpmT+48+F8Hhg5J/sfnDieg0aeG/jfSvkYQU2/pceFPDKlqZzwnfQ==",
			"cpu": [
				"arm64"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"darwin"
			],
			"engines": {
				"node": ">=18"
			}
		},
		"node_modules/@esbuild/darwin-x64": {
			"version": "0.25.5",
			"resolved": "https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.25.5.tgz",
			"integrity": "sha512-1iT4FVL0dJ76/q1wd7XDsXrSW+oLoquptvh4CLR4kITDtqi2e/xwXwdCVH8hVHU43wgJdsq7Gxuzcs6Iq/7bxQ==",
			"cpu": [
				"x64"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"darwin"
			],
			"engines": {
				"node": ">=18"
			}
		},
		"node_modules/@esbuild/freebsd-arm64": {
			"version": "0.25.5",
			"resolved": "https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.25.5.tgz",
			"integrity": "sha512-nk4tGP3JThz4La38Uy/gzyXtpkPW8zSAmoUhK9xKKXdBCzKODMc2adkB2+8om9BDYugz+uGV7sLmpTYzvmz6Sw==",
			"cpu": [
				"arm64"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"freebsd"
			],
			"engines": {
				"node": ">=18"
			}
		},
		"node_modules/@esbuild/freebsd-x64": {
			"version": "0.25.5",
			"resolved": "https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.25.5.tgz",
			"integrity": "sha512-PrikaNjiXdR2laW6OIjlbeuCPrPaAl0IwPIaRv+SMV8CiM8i2LqVUHFC1+8eORgWyY7yhQY+2U2fA55mBzReaw==",
			"cpu": [
				"x64"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"freebsd"
			],
			"engines": {
				"node": ">=18"
			}
		},
		"node_modules/@esbuild/linux-arm": {
			"version": "0.25.5",
			"resolved": "https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.25.5.tgz",
			"integrity": "sha512-cPzojwW2okgh7ZlRpcBEtsX7WBuqbLrNXqLU89GxWbNt6uIg78ET82qifUy3W6OVww6ZWobWub5oqZOVtwolfw==",
			"cpu": [
				"arm"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"linux"
			],
			"engines": {
				"node": ">=18"
			}
		},
		"node_modules/@esbuild/linux-arm64": {
			"version": "0.25.5",
			"resolved": "https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.25.5.tgz",
			"integrity": "sha512-Z9kfb1v6ZlGbWj8EJk9T6czVEjjq2ntSYLY2cw6pAZl4oKtfgQuS4HOq41M/BcoLPzrUbNd+R4BXFyH//nHxVg==",
			"cpu": [
				"arm64"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"linux"
			],
			"engines": {
				"node": ">=18"
			}
		},
		"node_modules/@esbuild/linux-ia32": {
			"version": "0.25.5",
			"resolved": "https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.25.5.tgz",
			"integrity": "sha512-sQ7l00M8bSv36GLV95BVAdhJ2QsIbCuCjh/uYrWiMQSUuV+LpXwIqhgJDcvMTj+VsQmqAHL2yYaasENvJ7CDKA==",
			"cpu": [
				"ia32"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"linux"
			],
			"engines": {
				"node": ">=18"
			}
		},
		"node_modules/@esbuild/linux-loong64": {
			"version": "0.25.5",
			"resolved": "https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.25.5.tgz",
			"integrity": "sha512-0ur7ae16hDUC4OL5iEnDb0tZHDxYmuQyhKhsPBV8f99f6Z9KQM02g33f93rNH5A30agMS46u2HP6qTdEt6Q1kg==",
			"cpu": [
				"loong64"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"linux"
			],
			"engines": {
				"node": ">=18"
			}
		},
		"node_modules/@esbuild/linux-mips64el": {
			"version": "0.25.5",
			"resolved": "https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.25.5.tgz",
			"integrity": "sha512-kB/66P1OsHO5zLz0i6X0RxlQ+3cu0mkxS3TKFvkb5lin6uwZ/ttOkP3Z8lfR9mJOBk14ZwZ9182SIIWFGNmqmg==",
			"cpu": [
				"mips64el"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"linux"
			],
			"engines": {
				"node": ">=18"
			}
		},
		"node_modules/@esbuild/linux-ppc64": {
			"version": "0.25.5",
			"resolved": "https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.25.5.tgz",
			"integrity": "sha512-UZCmJ7r9X2fe2D6jBmkLBMQetXPXIsZjQJCjgwpVDz+YMcS6oFR27alkgGv3Oqkv07bxdvw7fyB71/olceJhkQ==",
			"cpu": [
				"ppc64"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"linux"
			],
			"engines": {
				"node": ">=18"
			}
		},
		"node_modules/@esbuild/linux-riscv64": {
			"version": "0.25.5",
			"resolved": "https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.25.5.tgz",
			"integrity": "sha512-kTxwu4mLyeOlsVIFPfQo+fQJAV9mh24xL+y+Bm6ej067sYANjyEw1dNHmvoqxJUCMnkBdKpvOn0Ahql6+4VyeA==",
			"cpu": [
				"riscv64"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"linux"
			],
			"engines": {
				"node": ">=18"
			}
		},
		"node_modules/@esbuild/linux-s390x": {
			"version": "0.25.5",
			"resolved": "https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.25.5.tgz",
			"integrity": "sha512-K2dSKTKfmdh78uJ3NcWFiqyRrimfdinS5ErLSn3vluHNeHVnBAFWC8a4X5N+7FgVE1EjXS1QDZbpqZBjfrqMTQ==",
			"cpu": [
				"s390x"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"linux"
			],
			"engines": {
				"node": ">=18"
			}
		},
		"node_modules/@esbuild/linux-x64": {
			"version": "0.25.5",
			"resolved": "https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.25.5.tgz",
			"integrity": "sha512-uhj8N2obKTE6pSZ+aMUbqq+1nXxNjZIIjCjGLfsWvVpy7gKCOL6rsY1MhRh9zLtUtAI7vpgLMK6DxjO8Qm9lJw==",
			"cpu": [
				"x64"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"linux"
			],
			"engines": {
				"node": ">=18"
			}
		},
		"node_modules/@esbuild/netbsd-arm64": {
			"version": "0.25.5",
			"resolved": "https://registry.npmjs.org/@esbuild/netbsd-arm64/-/netbsd-arm64-0.25.5.tgz",
			"integrity": "sha512-pwHtMP9viAy1oHPvgxtOv+OkduK5ugofNTVDilIzBLpoWAM16r7b/mxBvfpuQDpRQFMfuVr5aLcn4yveGvBZvw==",
			"cpu": [
				"arm64"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"netbsd"
			],
			"engines": {
				"node": ">=18"
			}
		},
		"node_modules/@esbuild/netbsd-x64": {
			"version": "0.25.5",
			"resolved": "https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.25.5.tgz",
			"integrity": "sha512-WOb5fKrvVTRMfWFNCroYWWklbnXH0Q5rZppjq0vQIdlsQKuw6mdSihwSo4RV/YdQ5UCKKvBy7/0ZZYLBZKIbwQ==",
			"cpu": [
				"x64"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"netbsd"
			],
			"engines": {
				"node": ">=18"
			}
		},
		"node_modules/@esbuild/openbsd-arm64": {
			"version": "0.25.5",
			"resolved": "https://registry.npmjs.org/@esbuild/openbsd-arm64/-/openbsd-arm64-0.25.5.tgz",
			"integrity": "sha512-7A208+uQKgTxHd0G0uqZO8UjK2R0DDb4fDmERtARjSHWxqMTye4Erz4zZafx7Di9Cv+lNHYuncAkiGFySoD+Mw==",
			"cpu": [
				"arm64"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"openbsd"
			],
			"engines": {
				"node": ">=18"
			}
		},
		"node_modules/@esbuild/openbsd-x64": {
			"version": "0.25.5",
			"resolved": "https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.25.5.tgz",
			"integrity": "sha512-G4hE405ErTWraiZ8UiSoesH8DaCsMm0Cay4fsFWOOUcz8b8rC6uCvnagr+gnioEjWn0wC+o1/TAHt+It+MpIMg==",
			"cpu": [
				"x64"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"openbsd"
			],
			"engines": {
				"node": ">=18"
			}
		},
		"node_modules/@esbuild/sunos-x64": {
			"version": "0.25.5",
			"resolved": "https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.25.5.tgz",
			"integrity": "sha512-l+azKShMy7FxzY0Rj4RCt5VD/q8mG/e+mDivgspo+yL8zW7qEwctQ6YqKX34DTEleFAvCIUviCFX1SDZRSyMQA==",
			"cpu": [
				"x64"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"sunos"
			],
			"engines": {
				"node": ">=18"
			}
		},
		"node_modules/@esbuild/win32-arm64": {
			"version": "0.25.5",
			"resolved": "https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.25.5.tgz",
			"integrity": "sha512-O2S7SNZzdcFG7eFKgvwUEZ2VG9D/sn/eIiz8XRZ1Q/DO5a3s76Xv0mdBzVM5j5R639lXQmPmSo0iRpHqUUrsxw==",
			"cpu": [
				"arm64"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"win32"
			],
			"engines": {
				"node": ">=18"
			}
		},
		"node_modules/@esbuild/win32-ia32": {
			"version": "0.25.5",
			"resolved": "https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.25.5.tgz",
			"integrity": "sha512-onOJ02pqs9h1iMJ1PQphR+VZv8qBMQ77Klcsqv9CNW2w6yLqoURLcgERAIurY6QE63bbLuqgP9ATqajFLK5AMQ==",
			"cpu": [
				"ia32"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"win32"
			],
			"engines": {
				"node": ">=18"
			}
		},
		"node_modules/@esbuild/win32-x64": {
			"version": "0.25.5",
			"resolved": "https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.25.5.tgz",
			"integrity": "sha512-TXv6YnJ8ZMVdX+SXWVBo/0p8LTcrUYngpWjvm91TMjjBQii7Oz11Lw5lbDV5Y0TzuhSJHwiH4hEtC1I42mMS0g==",
			"cpu": [
				"x64"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"win32"
			],
			"engines": {
				"node": ">=18"
			}
		},
		"node_modules/@eslint-community/eslint-utils": {
			"version": "4.7.0",
			"resolved": "https://registry.npmjs.org/@eslint-community/eslint-utils/-/eslint-utils-4.7.0.tgz",
			"integrity": "sha512-dyybb3AcajC7uha6CvhdVRJqaKyn7w2YKqKyAN37NKYgZT36w+iRb0Dymmc5qEJ549c/S31cMMSFd75bteCpCw==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"eslint-visitor-keys": "^3.4.3"
			},
			"engines": {
				"node": "^12.22.0 || ^14.17.0 || >=16.0.0"
			},
			"funding": {
				"url": "https://opencollective.com/eslint"
			},
			"peerDependencies": {
				"eslint": "^6.0.0 || ^7.0.0 || >=8.0.0"
			}
		},
		"node_modules/@eslint-community/eslint-utils/node_modules/eslint-visitor-keys": {
			"version": "3.4.3",
			"resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz",
			"integrity": "sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==",
			"dev": true,
			"license": "Apache-2.0",
			"engines": {
				"node": "^12.22.0 || ^14.17.0 || >=16.0.0"
			},
			"funding": {
				"url": "https://opencollective.com/eslint"
			}
		},
		"node_modules/@eslint-community/regexpp": {
			"version": "4.12.1",
			"resolved": "https://registry.npmjs.org/@eslint-community/regexpp/-/regexpp-4.12.1.tgz",
			"integrity": "sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": "^12.0.0 || ^14.0.0 || >=16.0.0"
			}
		},
		"node_modules/@eslint/compat": {
			"version": "1.2.9",
			"resolved": "https://registry.npmjs.org/@eslint/compat/-/compat-1.2.9.tgz",
			"integrity": "sha512-gCdSY54n7k+driCadyMNv8JSPzYLeDVM/ikZRtvtROBpRdFSkS8W9A82MqsaY7lZuwL0wiapgD0NT1xT0hyJsA==",
			"dev": true,
			"license": "Apache-2.0",
			"engines": {
				"node": "^18.18.0 || ^20.9.0 || >=21.1.0"
			},
			"peerDependencies": {
				"eslint": "^9.10.0"
			},
			"peerDependenciesMeta": {
				"eslint": {
					"optional": true
				}
			}
		},
		"node_modules/@eslint/config-array": {
			"version": "0.20.0",
			"resolved": "https://registry.npmjs.org/@eslint/config-array/-/config-array-0.20.0.tgz",
			"integrity": "sha512-fxlS1kkIjx8+vy2SjuCB94q3htSNrufYTXubwiBFeaQHbH6Ipi43gFJq2zCMt6PHhImH3Xmr0NksKDvchWlpQQ==",
			"dev": true,
			"license": "Apache-2.0",
			"dependencies": {
				"@eslint/object-schema": "^2.1.6",
				"debug": "^4.3.1",
				"minimatch": "^3.1.2"
			},
			"engines": {
				"node": "^18.18.0 || ^20.9.0 || >=21.1.0"
			}
		},
		"node_modules/@eslint/config-helpers": {
			"version": "0.2.2",
			"resolved": "https://registry.npmjs.org/@eslint/config-helpers/-/config-helpers-0.2.2.tgz",
			"integrity": "sha512-+GPzk8PlG0sPpzdU5ZvIRMPidzAnZDl/s9L+y13iodqvb8leL53bTannOrQ/Im7UkpsmFU5Ily5U60LWixnmLg==",
			"dev": true,
			"license": "Apache-2.0",
			"engines": {
				"node": "^18.18.0 || ^20.9.0 || >=21.1.0"
			}
		},
		"node_modules/@eslint/core": {
			"version": "0.14.0",
			"resolved": "https://registry.npmjs.org/@eslint/core/-/core-0.14.0.tgz",
			"integrity": "sha512-qIbV0/JZr7iSDjqAc60IqbLdsj9GDt16xQtWD+B78d/HAlvysGdZZ6rpJHGAc2T0FQx1X6thsSPdnoiGKdNtdg==",
			"dev": true,
			"license": "Apache-2.0",
			"dependencies": {
				"@types/json-schema": "^7.0.15"
			},
			"engines": {
				"node": "^18.18.0 || ^20.9.0 || >=21.1.0"
			}
		},
		"node_modules/@eslint/eslintrc": {
			"version": "3.3.1",
			"resolved": "https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-3.3.1.tgz",
			"integrity": "sha512-gtF186CXhIl1p4pJNGZw8Yc6RlshoePRvE0X91oPGb3vZ8pM3qOS9W9NGPat9LziaBV7XrJWGylNQXkGcnM3IQ==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"ajv": "^6.12.4",
				"debug": "^4.3.2",
				"espree": "^10.0.1",
				"globals": "^14.0.0",
				"ignore": "^5.2.0",
				"import-fresh": "^3.2.1",
				"js-yaml": "^4.1.0",
				"minimatch": "^3.1.2",
				"strip-json-comments": "^3.1.1"
			},
			"engines": {
				"node": "^18.18.0 || ^20.9.0 || >=21.1.0"
			},
			"funding": {
				"url": "https://opencollective.com/eslint"
			}
		},
		"node_modules/@eslint/eslintrc/node_modules/globals": {
			"version": "14.0.0",
			"resolved": "https://registry.npmjs.org/globals/-/globals-14.0.0.tgz",
			"integrity": "sha512-oahGvuMGQlPw/ivIYBjVSrWAfWLBeku5tpPE2fOPLi+WHffIWbuh2tCjhyQhTBPMf5E9jDEH4FOmTYgYwbKwtQ==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=18"
			},
			"funding": {
				"url": "https://github.com/sponsors/sindresorhus"
			}
		},
		"node_modules/@eslint/js": {
			"version": "9.28.0",
			"resolved": "https://registry.npmjs.org/@eslint/js/-/js-9.28.0.tgz",
			"integrity": "sha512-fnqSjGWd/CoIp4EXIxWVK/sHA6DOHN4+8Ix2cX5ycOY7LG0UY8nHCU5pIp2eaE1Mc7Qd8kHspYNzYXT2ojPLzg==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": "^18.18.0 || ^20.9.0 || >=21.1.0"
			},
			"funding": {
				"url": "https://eslint.org/donate"
			}
		},
		"node_modules/@eslint/object-schema": {
			"version": "2.1.6",
			"resolved": "https://registry.npmjs.org/@eslint/object-schema/-/object-schema-2.1.6.tgz",
			"integrity": "sha512-RBMg5FRL0I0gs51M/guSAj5/e14VQ4tpZnQNWwuDT66P14I43ItmPfIZRhO9fUVIPOAQXU47atlywZ/czoqFPA==",
			"dev": true,
			"license": "Apache-2.0",
			"engines": {
				"node": "^18.18.0 || ^20.9.0 || >=21.1.0"
			}
		},
		"node_modules/@eslint/plugin-kit": {
			"version": "0.3.1",
			"resolved": "https://registry.npmjs.org/@eslint/plugin-kit/-/plugin-kit-0.3.1.tgz",
			"integrity": "sha512-0J+zgWxHN+xXONWIyPWKFMgVuJoZuGiIFu8yxk7RJjxkzpGmyja5wRFqZIVtjDVOQpV+Rw0iOAjYPE2eQyjr0w==",
			"dev": true,
			"license": "Apache-2.0",
			"dependencies": {
				"@eslint/core": "^0.14.0",
				"levn": "^0.4.1"
			},
			"engines": {
				"node": "^18.18.0 || ^20.9.0 || >=21.1.0"
			}
		},
		"node_modules/@humanfs/core": {
			"version": "0.19.1",
			"resolved": "https://registry.npmjs.org/@humanfs/core/-/core-0.19.1.tgz",
			"integrity": "sha512-5DyQ4+1JEUzejeK1JGICcideyfUbGixgS9jNgex5nqkW+cY7WZhxBigmieN5Qnw9ZosSNVC9KQKyb+GUaGyKUA==",
			"dev": true,
			"license": "Apache-2.0",
			"engines": {
				"node": ">=18.18.0"
			}
		},
		"node_modules/@humanfs/node": {
			"version": "0.16.6",
			"resolved": "https://registry.npmjs.org/@humanfs/node/-/node-0.16.6.tgz",
			"integrity": "sha512-YuI2ZHQL78Q5HbhDiBA1X4LmYdXCKCMQIfw0pw7piHJwyREFebJUvrQN4cMssyES6x+vfUbx1CIpaQUKYdQZOw==",
			"dev": true,
			"license": "Apache-2.0",
			"dependencies": {
				"@humanfs/core": "^0.19.1",
				"@humanwhocodes/retry": "^0.3.0"
			},
			"engines": {
				"node": ">=18.18.0"
			}
		},
		"node_modules/@humanfs/node/node_modules/@humanwhocodes/retry": {
			"version": "0.3.1",
			"resolved": "https://registry.npmjs.org/@humanwhocodes/retry/-/retry-0.3.1.tgz",
			"integrity": "sha512-JBxkERygn7Bv/GbN5Rv8Ul6LVknS+5Bp6RgDC/O8gEBU/yeH5Ui5C/OlWrTb6qct7LjjfT6Re2NxB0ln0yYybA==",
			"dev": true,
			"license": "Apache-2.0",
			"engines": {
				"node": ">=18.18"
			},
			"funding": {
				"type": "github",
				"url": "https://github.com/sponsors/nzakas"
			}
		},
		"node_modules/@humanwhocodes/module-importer": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/@humanwhocodes/module-importer/-/module-importer-1.0.1.tgz",
			"integrity": "sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==",
			"dev": true,
			"license": "Apache-2.0",
			"engines": {
				"node": ">=12.22"
			},
			"funding": {
				"type": "github",
				"url": "https://github.com/sponsors/nzakas"
			}
		},
		"node_modules/@humanwhocodes/retry": {
			"version": "0.4.3",
			"resolved": "https://registry.npmjs.org/@humanwhocodes/retry/-/retry-0.4.3.tgz",
			"integrity": "sha512-bV0Tgo9K4hfPCek+aMAn81RppFKv2ySDQeMoSZuvTASywNTnVJCArCZE2FWqpvIatKu7VMRLWlR1EazvVhDyhQ==",
			"dev": true,
			"license": "Apache-2.0",
			"engines": {
				"node": ">=18.18"
			},
			"funding": {
				"type": "github",
				"url": "https://github.com/sponsors/nzakas"
			}
		},
		"node_modules/@isaacs/cliui": {
			"version": "8.0.2",
			"resolved": "https://registry.npmjs.org/@isaacs/cliui/-/cliui-8.0.2.tgz",
			"integrity": "sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==",
			"dev": true,
			"license": "ISC",
			"dependencies": {
				"string-width": "^5.1.2",
				"string-width-cjs": "npm:string-width@^4.2.0",
				"strip-ansi": "^7.0.1",
				"strip-ansi-cjs": "npm:strip-ansi@^6.0.1",
				"wrap-ansi": "^8.1.0",
				"wrap-ansi-cjs": "npm:wrap-ansi@^7.0.0"
			},
			"engines": {
				"node": ">=12"
			}
		},
		"node_modules/@jridgewell/gen-mapping": {
			"version": "0.3.8",
			"resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.8.tgz",
			"integrity": "sha512-imAbBGkb+ebQyxKgzv5Hu2nmROxoDOXHh80evxdoXNOrvAnVx7zimzc1Oo5h9RlfV4vPXaE2iM5pOFbvOCClWA==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@jridgewell/set-array": "^1.2.1",
				"@jridgewell/sourcemap-codec": "^1.4.10",
				"@jridgewell/trace-mapping": "^0.3.24"
			},
			"engines": {
				"node": ">=6.0.0"
			}
		},
		"node_modules/@jridgewell/resolve-uri": {
			"version": "3.1.2",
			"resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz",
			"integrity": "sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=6.0.0"
			}
		},
		"node_modules/@jridgewell/set-array": {
			"version": "1.2.1",
			"resolved": "https://registry.npmjs.org/@jridgewell/set-array/-/set-array-1.2.1.tgz",
			"integrity": "sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=6.0.0"
			}
		},
		"node_modules/@jridgewell/sourcemap-codec": {
			"version": "1.5.0",
			"resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.0.tgz",
			"integrity": "sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/@jridgewell/trace-mapping": {
			"version": "0.3.25",
			"resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.25.tgz",
			"integrity": "sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@jridgewell/resolve-uri": "^3.1.0",
				"@jridgewell/sourcemap-codec": "^1.4.14"
			}
		},
		"node_modules/@kurkle/color": {
			"version": "0.3.4",
			"resolved": "https://registry.npmjs.org/@kurkle/color/-/color-0.3.4.tgz",
			"integrity": "sha512-M5UknZPHRu3DEDWoipU6sE8PdkZ6Z/S+v4dD+Ke8IaNlpdSQah50lz1KtcFBa2vsdOnwbbnxJwVM4wty6udA5w==",
			"license": "MIT"
		},
		"node_modules/@nodelib/fs.scandir": {
			"version": "2.1.5",
			"resolved": "https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz",
			"integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@nodelib/fs.stat": "2.0.5",
				"run-parallel": "^1.1.9"
			},
			"engines": {
				"node": ">= 8"
			}
		},
		"node_modules/@nodelib/fs.stat": {
			"version": "2.0.5",
			"resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz",
			"integrity": "sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">= 8"
			}
		},
		"node_modules/@nodelib/fs.walk": {
			"version": "1.2.8",
			"resolved": "https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz",
			"integrity": "sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@nodelib/fs.scandir": "2.1.5",
				"fastq": "^1.6.0"
			},
			"engines": {
				"node": ">= 8"
			}
		},
		"node_modules/@pkgjs/parseargs": {
			"version": "0.11.0",
			"resolved": "https://registry.npmjs.org/@pkgjs/parseargs/-/parseargs-0.11.0.tgz",
			"integrity": "sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==",
			"dev": true,
			"license": "MIT",
			"optional": true,
			"engines": {
				"node": ">=14"
			}
		},
		"node_modules/@polka/url": {
			"version": "1.0.0-next.29",
			"resolved": "https://registry.npmjs.org/@polka/url/-/url-1.0.0-next.29.tgz",
			"integrity": "sha512-wwQAWhWSuHaag8c4q/KN/vCoeOJYshAIvMQwD4GpSb3OiZklFfvAgmj0VCBBImRpuF/aFgIRzllXlVX93Jevww==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/@rollup/rollup-android-arm-eabi": {
			"version": "4.41.1",
			"resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm-eabi/-/rollup-android-arm-eabi-4.41.1.tgz",
			"integrity": "sha512-NELNvyEWZ6R9QMkiytB4/L4zSEaBC03KIXEghptLGLZWJ6VPrL63ooZQCOnlx36aQPGhzuOMwDerC1Eb2VmrLw==",
			"cpu": [
				"arm"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"android"
			]
		},
		"node_modules/@rollup/rollup-android-arm64": {
			"version": "4.41.1",
			"resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm64/-/rollup-android-arm64-4.41.1.tgz",
			"integrity": "sha512-DXdQe1BJ6TK47ukAoZLehRHhfKnKg9BjnQYUu9gzhI8Mwa1d2fzxA1aw2JixHVl403bwp1+/o/NhhHtxWJBgEA==",
			"cpu": [
				"arm64"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"android"
			]
		},
		"node_modules/@rollup/rollup-darwin-arm64": {
			"version": "4.41.1",
			"resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-arm64/-/rollup-darwin-arm64-4.41.1.tgz",
			"integrity": "sha512-5afxvwszzdulsU2w8JKWwY8/sJOLPzf0e1bFuvcW5h9zsEg+RQAojdW0ux2zyYAz7R8HvvzKCjLNJhVq965U7w==",
			"cpu": [
				"arm64"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"darwin"
			]
		},
		"node_modules/@rollup/rollup-darwin-x64": {
			"version": "4.41.1",
			"resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-x64/-/rollup-darwin-x64-4.41.1.tgz",
			"integrity": "sha512-egpJACny8QOdHNNMZKf8xY0Is6gIMz+tuqXlusxquWu3F833DcMwmGM7WlvCO9sB3OsPjdC4U0wHw5FabzCGZg==",
			"cpu": [
				"x64"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"darwin"
			]
		},
		"node_modules/@rollup/rollup-freebsd-arm64": {
			"version": "4.41.1",
			"resolved": "https://registry.npmjs.org/@rollup/rollup-freebsd-arm64/-/rollup-freebsd-arm64-4.41.1.tgz",
			"integrity": "sha512-DBVMZH5vbjgRk3r0OzgjS38z+atlupJ7xfKIDJdZZL6sM6wjfDNo64aowcLPKIx7LMQi8vybB56uh1Ftck/Atg==",
			"cpu": [
				"arm64"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"freebsd"
			]
		},
		"node_modules/@rollup/rollup-freebsd-x64": {
			"version": "4.41.1",
			"resolved": "https://registry.npmjs.org/@rollup/rollup-freebsd-x64/-/rollup-freebsd-x64-4.41.1.tgz",
			"integrity": "sha512-3FkydeohozEskBxNWEIbPfOE0aqQgB6ttTkJ159uWOFn42VLyfAiyD9UK5mhu+ItWzft60DycIN1Xdgiy8o/SA==",
			"cpu": [
				"x64"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"freebsd"
			]
		},
		"node_modules/@rollup/rollup-linux-arm-gnueabihf": {
			"version": "4.41.1",
			"resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-gnueabihf/-/rollup-linux-arm-gnueabihf-4.41.1.tgz",
			"integrity": "sha512-wC53ZNDgt0pqx5xCAgNunkTzFE8GTgdZ9EwYGVcg+jEjJdZGtq9xPjDnFgfFozQI/Xm1mh+D9YlYtl+ueswNEg==",
			"cpu": [
				"arm"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"linux"
			]
		},
		"node_modules/@rollup/rollup-linux-arm-musleabihf": {
			"version": "4.41.1",
			"resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-musleabihf/-/rollup-linux-arm-musleabihf-4.41.1.tgz",
			"integrity": "sha512-jwKCca1gbZkZLhLRtsrka5N8sFAaxrGz/7wRJ8Wwvq3jug7toO21vWlViihG85ei7uJTpzbXZRcORotE+xyrLA==",
			"cpu": [
				"arm"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"linux"
			]
		},
		"node_modules/@rollup/rollup-linux-arm64-gnu": {
			"version": "4.41.1",
			"resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-gnu/-/rollup-linux-arm64-gnu-4.41.1.tgz",
			"integrity": "sha512-g0UBcNknsmmNQ8V2d/zD2P7WWfJKU0F1nu0k5pW4rvdb+BIqMm8ToluW/eeRmxCared5dD76lS04uL4UaNgpNA==",
			"cpu": [
				"arm64"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"linux"
			]
		},
		"node_modules/@rollup/rollup-linux-arm64-musl": {
			"version": "4.41.1",
			"resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-musl/-/rollup-linux-arm64-musl-4.41.1.tgz",
			"integrity": "sha512-XZpeGB5TKEZWzIrj7sXr+BEaSgo/ma/kCgrZgL0oo5qdB1JlTzIYQKel/RmhT6vMAvOdM2teYlAaOGJpJ9lahg==",
			"cpu": [
				"arm64"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"linux"
			]
		},
		"node_modules/@rollup/rollup-linux-loongarch64-gnu": {
			"version": "4.41.1",
			"resolved": "https://registry.npmjs.org/@rollup/rollup-linux-loongarch64-gnu/-/rollup-linux-loongarch64-gnu-4.41.1.tgz",
			"integrity": "sha512-bkCfDJ4qzWfFRCNt5RVV4DOw6KEgFTUZi2r2RuYhGWC8WhCA8lCAJhDeAmrM/fdiAH54m0mA0Vk2FGRPyzI+tw==",
			"cpu": [
				"loong64"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"linux"
			]
		},
		"node_modules/@rollup/rollup-linux-powerpc64le-gnu": {
			"version": "4.41.1",
			"resolved": "https://registry.npmjs.org/@rollup/rollup-linux-powerpc64le-gnu/-/rollup-linux-powerpc64le-gnu-4.41.1.tgz",
			"integrity": "sha512-3mr3Xm+gvMX+/8EKogIZSIEF0WUu0HL9di+YWlJpO8CQBnoLAEL/roTCxuLncEdgcfJcvA4UMOf+2dnjl4Ut1A==",
			"cpu": [
				"ppc64"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"linux"
			]
		},
		"node_modules/@rollup/rollup-linux-riscv64-gnu": {
			"version": "4.41.1",
			"resolved": "https://registry.npmjs.org/@rollup/rollup-linux-riscv64-gnu/-/rollup-linux-riscv64-gnu-4.41.1.tgz",
			"integrity": "sha512-3rwCIh6MQ1LGrvKJitQjZFuQnT2wxfU+ivhNBzmxXTXPllewOF7JR1s2vMX/tWtUYFgphygxjqMl76q4aMotGw==",
			"cpu": [
				"riscv64"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"linux"
			]
		},
		"node_modules/@rollup/rollup-linux-riscv64-musl": {
			"version": "4.41.1",
			"resolved": "https://registry.npmjs.org/@rollup/rollup-linux-riscv64-musl/-/rollup-linux-riscv64-musl-4.41.1.tgz",
			"integrity": "sha512-LdIUOb3gvfmpkgFZuccNa2uYiqtgZAz3PTzjuM5bH3nvuy9ty6RGc/Q0+HDFrHrizJGVpjnTZ1yS5TNNjFlklw==",
			"cpu": [
				"riscv64"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"linux"
			]
		},
		"node_modules/@rollup/rollup-linux-s390x-gnu": {
			"version": "4.41.1",
			"resolved": "https://registry.npmjs.org/@rollup/rollup-linux-s390x-gnu/-/rollup-linux-s390x-gnu-4.41.1.tgz",
			"integrity": "sha512-oIE6M8WC9ma6xYqjvPhzZYk6NbobIURvP/lEbh7FWplcMO6gn7MM2yHKA1eC/GvYwzNKK/1LYgqzdkZ8YFxR8g==",
			"cpu": [
				"s390x"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"linux"
			]
		},
		"node_modules/@rollup/rollup-linux-x64-gnu": {
			"version": "4.41.1",
			"resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-gnu/-/rollup-linux-x64-gnu-4.41.1.tgz",
			"integrity": "sha512-cWBOvayNvA+SyeQMp79BHPK8ws6sHSsYnK5zDcsC3Hsxr1dgTABKjMnMslPq1DvZIp6uO7kIWhiGwaTdR4Og9A==",
			"cpu": [
				"x64"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"linux"
			]
		},
		"node_modules/@rollup/rollup-linux-x64-musl": {
			"version": "4.41.1",
			"resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-musl/-/rollup-linux-x64-musl-4.41.1.tgz",
			"integrity": "sha512-y5CbN44M+pUCdGDlZFzGGBSKCA4A/J2ZH4edTYSSxFg7ce1Xt3GtydbVKWLlzL+INfFIZAEg1ZV6hh9+QQf9YQ==",
			"cpu": [
				"x64"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"linux"
			]
		},
		"node_modules/@rollup/rollup-win32-arm64-msvc": {
			"version": "4.41.1",
			"resolved": "https://registry.npmjs.org/@rollup/rollup-win32-arm64-msvc/-/rollup-win32-arm64-msvc-4.41.1.tgz",
			"integrity": "sha512-lZkCxIrjlJlMt1dLO/FbpZbzt6J/A8p4DnqzSa4PWqPEUUUnzXLeki/iyPLfV0BmHItlYgHUqJe+3KiyydmiNQ==",
			"cpu": [
				"arm64"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"win32"
			]
		},
		"node_modules/@rollup/rollup-win32-ia32-msvc": {
			"version": "4.41.1",
			"resolved": "https://registry.npmjs.org/@rollup/rollup-win32-ia32-msvc/-/rollup-win32-ia32-msvc-4.41.1.tgz",
			"integrity": "sha512-+psFT9+pIh2iuGsxFYYa/LhS5MFKmuivRsx9iPJWNSGbh2XVEjk90fmpUEjCnILPEPJnikAU6SFDiEUyOv90Pg==",
			"cpu": [
				"ia32"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"win32"
			]
		},
		"node_modules/@rollup/rollup-win32-x64-msvc": {
			"version": "4.41.1",
			"resolved": "https://registry.npmjs.org/@rollup/rollup-win32-x64-msvc/-/rollup-win32-x64-msvc-4.41.1.tgz",
			"integrity": "sha512-Wq2zpapRYLfi4aKxf2Xff0tN+7slj2d4R87WEzqw7ZLsVvO5zwYCIuEGSZYiK41+GlwUo1HiR+GdkLEJnCKTCw==",
			"cpu": [
				"x64"
			],
			"dev": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"win32"
			]
		},
		"node_modules/@sveltejs/acorn-typescript": {
			"version": "1.0.5",
			"resolved": "https://registry.npmjs.org/@sveltejs/acorn-typescript/-/acorn-typescript-1.0.5.tgz",
			"integrity": "sha512-IwQk4yfwLdibDlrXVE04jTZYlLnwsTT2PIOQQGNLWfjavGifnk1JD1LcZjZaBTRcxZu2FfPfNLOE04DSu9lqtQ==",
			"dev": true,
			"license": "MIT",
			"peerDependencies": {
				"acorn": "^8.9.0"
			}
		},
		"node_modules/@sveltejs/adapter-auto": {
			"version": "6.0.1",
			"resolved": "https://registry.npmjs.org/@sveltejs/adapter-auto/-/adapter-auto-6.0.1.tgz",
			"integrity": "sha512-mcWud3pYGPWM2Pphdj8G9Qiq24nZ8L4LB7coCUckUEy5Y7wOWGJ/enaZ4AtJTcSm5dNK1rIkBRoqt+ae4zlxcQ==",
			"dev": true,
			"license": "MIT",
			"peerDependencies": {
				"@sveltejs/kit": "^2.0.0"
			}
		},
		"node_modules/@sveltejs/kit": {
			"version": "2.21.2",
			"resolved": "https://registry.npmjs.org/@sveltejs/kit/-/kit-2.21.2.tgz",
			"integrity": "sha512-EMYTY4+rNa7TaRZYzCqhQslEkACEZzWc363jOYuc90oJrgvlWTcgqTxcGSIJim48hPaXwYlHyatRnnMmTFf5tA==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@sveltejs/acorn-typescript": "^1.0.5",
				"@types/cookie": "^0.6.0",
				"acorn": "^8.14.1",
				"cookie": "^0.6.0",
				"devalue": "^5.1.0",
				"esm-env": "^1.2.2",
				"kleur": "^4.1.5",
				"magic-string": "^0.30.5",
				"mrmime": "^2.0.0",
				"sade": "^1.8.1",
				"set-cookie-parser": "^2.6.0",
				"sirv": "^3.0.0"
			},
			"bin": {
				"svelte-kit": "svelte-kit.js"
			},
			"engines": {
				"node": ">=18.13"
			},
			"peerDependencies": {
				"@sveltejs/vite-plugin-svelte": "^3.0.0 || ^4.0.0-next.1 || ^5.0.0",
				"svelte": "^4.0.0 || ^5.0.0-next.0",
				"vite": "^5.0.3 || ^6.0.0"
			}
		},
		"node_modules/@sveltejs/vite-plugin-svelte": {
			"version": "5.1.0",
			"resolved": "https://registry.npmjs.org/@sveltejs/vite-plugin-svelte/-/vite-plugin-svelte-5.1.0.tgz",
			"integrity": "sha512-wojIS/7GYnJDYIg1higWj2ROA6sSRWvcR1PO/bqEyFr/5UZah26c8Cz4u0NaqjPeVltzsVpt2Tm8d2io0V+4Tw==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@sveltejs/vite-plugin-svelte-inspector": "^4.0.1",
				"debug": "^4.4.1",
				"deepmerge": "^4.3.1",
				"kleur": "^4.1.5",
				"magic-string": "^0.30.17",
				"vitefu": "^1.0.6"
			},
			"engines": {
				"node": "^18.0.0 || ^20.0.0 || >=22"
			},
			"peerDependencies": {
				"svelte": "^5.0.0",
				"vite": "^6.0.0"
			}
		},
		"node_modules/@sveltejs/vite-plugin-svelte-inspector": {
			"version": "4.0.1",
			"resolved": "https://registry.npmjs.org/@sveltejs/vite-plugin-svelte-inspector/-/vite-plugin-svelte-inspector-4.0.1.tgz",
			"integrity": "sha512-J/Nmb2Q2y7mck2hyCX4ckVHcR5tu2J+MtBEQqpDrrgELZ2uvraQcK/ioCV61AqkdXFgriksOKIceDcQmqnGhVw==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"debug": "^4.3.7"
			},
			"engines": {
				"node": "^18.0.0 || ^20.0.0 || >=22"
			},
			"peerDependencies": {
				"@sveltejs/vite-plugin-svelte": "^5.0.0",
				"svelte": "^5.0.0",
				"vite": "^6.0.0"
			}
		},
		"node_modules/@tailwindcss/forms": {
			"version": "0.5.7",
			"resolved": "https://registry.npmjs.org/@tailwindcss/forms/-/forms-0.5.7.tgz",
			"integrity": "sha512-QE7X69iQI+ZXwldE+rzasvbJiyV/ju1FGHH0Qn2W3FKbuYtqp8LKcy6iSw79fVUT5/Vvf+0XgLCeYVG+UV6hOw==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"mini-svg-data-uri": "^1.2.3"
			},
			"peerDependencies": {
				"tailwindcss": ">=3.0.0 || >= 3.0.0-alpha.1"
			}
		},
		"node_modules/@tailwindcss/typography": {
			"version": "0.5.10",
			"resolved": "https://registry.npmjs.org/@tailwindcss/typography/-/typography-0.5.10.tgz",
			"integrity": "sha512-Pe8BuPJQJd3FfRnm6H0ulKIGoMEQS+Vq01R6M5aCrFB/ccR/shT+0kXLjouGC1gFLm9hopTFN+DMP0pfwRWzPw==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"lodash.castarray": "^4.4.0",
				"lodash.isplainobject": "^4.0.6",
				"lodash.merge": "^4.6.2",
				"postcss-selector-parser": "6.0.10"
			},
			"peerDependencies": {
				"tailwindcss": ">=3.0.0 || insiders"
			}
		},
		"node_modules/@testing-library/dom": {
			"version": "10.4.0",
			"resolved": "https://registry.npmjs.org/@testing-library/dom/-/dom-10.4.0.tgz",
			"integrity": "sha512-pemlzrSESWbdAloYml3bAJMEfNh1Z7EduzqPKprCH5S341frlpYnUEW0H72dLxa6IsYr+mPno20GiSm+h9dEdQ==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@babel/code-frame": "^7.10.4",
				"@babel/runtime": "^7.12.5",
				"@types/aria-query": "^5.0.1",
				"aria-query": "5.3.0",
				"chalk": "^4.1.0",
				"dom-accessibility-api": "^0.5.9",
				"lz-string": "^1.5.0",
				"pretty-format": "^27.0.2"
			},
			"engines": {
				"node": ">=18"
			}
		},
		"node_modules/@testing-library/dom/node_modules/aria-query": {
			"version": "5.3.0",
			"resolved": "https://registry.npmjs.org/aria-query/-/aria-query-5.3.0.tgz",
			"integrity": "sha512-b0P0sZPKtyu8HkeRAfCq0IfURZK+SuwMjY1UXGBU27wpAiTwQAIlq56IbIO+ytk/JjS1fMR14ee5WBBfKi5J6A==",
			"dev": true,
			"license": "Apache-2.0",
			"dependencies": {
				"dequal": "^2.0.3"
			}
		},
		"node_modules/@testing-library/dom/node_modules/chalk": {
			"version": "4.1.2",
			"resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
			"integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"ansi-styles": "^4.1.0",
				"supports-color": "^7.1.0"
			},
			"engines": {
				"node": ">=10"
			},
			"funding": {
				"url": "https://github.com/chalk/chalk?sponsor=1"
			}
		},
		"node_modules/@testing-library/dom/node_modules/dom-accessibility-api": {
			"version": "0.5.16",
			"resolved": "https://registry.npmjs.org/dom-accessibility-api/-/dom-accessibility-api-0.5.16.tgz",
			"integrity": "sha512-X7BJ2yElsnOJ30pZF4uIIDfBEVgF4XEBxL9Bxhy6dnrm5hkzqmsWHGTiHqRiITNhMyFLyAiWndIJP7Z1NTteDg==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/@testing-library/jest-dom": {
			"version": "6.6.3",
			"resolved": "https://registry.npmjs.org/@testing-library/jest-dom/-/jest-dom-6.6.3.tgz",
			"integrity": "sha512-IteBhl4XqYNkM54f4ejhLRJiZNqcSCoXUOG2CPK7qbD322KjQozM4kHQOfkG2oln9b9HTYqs+Sae8vBATubxxA==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@adobe/css-tools": "^4.4.0",
				"aria-query": "^5.0.0",
				"chalk": "^3.0.0",
				"css.escape": "^1.5.1",
				"dom-accessibility-api": "^0.6.3",
				"lodash": "^4.17.21",
				"redent": "^3.0.0"
			},
			"engines": {
				"node": ">=14",
				"npm": ">=6",
				"yarn": ">=1"
			}
		},
		"node_modules/@testing-library/svelte": {
			"version": "5.2.8",
			"resolved": "https://registry.npmjs.org/@testing-library/svelte/-/svelte-5.2.8.tgz",
			"integrity": "sha512-ucQOtGsJhtawOEtUmbR4rRh53e6RbM1KUluJIXRmh6D4UzxR847iIqqjRtg9mHNFmGQ8Vkam9yVcR5d1mhIHKA==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@testing-library/dom": "9.x.x || 10.x.x"
			},
			"engines": {
				"node": ">= 10"
			},
			"peerDependencies": {
				"svelte": "^3 || ^4 || ^5 || ^5.0.0-next.0",
				"vite": "*",
				"vitest": "*"
			},
			"peerDependenciesMeta": {
				"vite": {
					"optional": true
				},
				"vitest": {
					"optional": true
				}
			}
		},
		"node_modules/@types/aria-query": {
			"version": "5.0.4",
			"resolved": "https://registry.npmjs.org/@types/aria-query/-/aria-query-5.0.4.tgz",
			"integrity": "sha512-rfT93uj5s0PRL7EzccGMs3brplhcrghnDoV26NqKhCAS1hVo+WdNsPvE/yb6ilfr5hi2MEk6d5EWJTKdxg8jVw==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/@types/chai": {
			"version": "5.2.2",
			"resolved": "https://registry.npmjs.org/@types/chai/-/chai-5.2.2.tgz",
			"integrity": "sha512-8kB30R7Hwqf40JPiKhVzodJs2Qc1ZJ5zuT3uzw5Hq/dhNCl3G3l83jfpdI1e20BP348+fV7VIL/+FxaXkqBmWg==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@types/deep-eql": "*"
			}
		},
		"node_modules/@types/cookie": {
			"version": "0.6.0",
			"resolved": "https://registry.npmjs.org/@types/cookie/-/cookie-0.6.0.tgz",
			"integrity": "sha512-4Kh9a6B2bQciAhf7FSuMRRkUWecJgJu9nPnx3yzpsfXX/c50REIqpHY4C82bXP90qrLtXtkDxTZosYO3UpOwlA==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/@types/deep-eql": {
			"version": "4.0.2",
			"resolved": "https://registry.npmjs.org/@types/deep-eql/-/deep-eql-4.0.2.tgz",
			"integrity": "sha512-c9h9dVVMigMPc4bwTvC5dxqtqJZwQPePsWjPlpSOnojbor6pGqdk541lfA7AqFQr5pB1BRdq0juY9db81BwyFw==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/@types/estree": {
			"version": "1.0.8",
			"resolved": "https://registry.npmjs.org/@types/estree/-/estree-1.0.8.tgz",
			"integrity": "sha512-dWHzHa2WqEXI/O1E9OjrocMTKJl2mSrEolh1Iomrv6U+JuNwaHXsXx9bLu5gG7BUWFIN0skIQJQ/L1rIex4X6w==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/@types/json-schema": {
			"version": "7.0.15",
			"resolved": "https://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.15.tgz",
			"integrity": "sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/@typescript-eslint/eslint-plugin": {
			"version": "8.33.1",
			"resolved": "https://registry.npmjs.org/@typescript-eslint/eslint-plugin/-/eslint-plugin-8.33.1.tgz",
			"integrity": "sha512-TDCXj+YxLgtvxvFlAvpoRv9MAncDLBV2oT9Bd7YBGC/b/sEURoOYuIwLI99rjWOfY3QtDzO+mk0n4AmdFExW8A==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@eslint-community/regexpp": "^4.10.0",
				"@typescript-eslint/scope-manager": "8.33.1",
				"@typescript-eslint/type-utils": "8.33.1",
				"@typescript-eslint/utils": "8.33.1",
				"@typescript-eslint/visitor-keys": "8.33.1",
				"graphemer": "^1.4.0",
				"ignore": "^7.0.0",
				"natural-compare": "^1.4.0",
				"ts-api-utils": "^2.1.0"
			},
			"engines": {
				"node": "^18.18.0 || ^20.9.0 || >=21.1.0"
			},
			"funding": {
				"type": "opencollective",
				"url": "https://opencollective.com/typescript-eslint"
			},
			"peerDependencies": {
				"@typescript-eslint/parser": "^8.33.1",
				"eslint": "^8.57.0 || ^9.0.0",
				"typescript": ">=4.8.4 <5.9.0"
			}
		},
		"node_modules/@typescript-eslint/eslint-plugin/node_modules/ignore": {
			"version": "7.0.5",
			"resolved": "https://registry.npmjs.org/ignore/-/ignore-7.0.5.tgz",
			"integrity": "sha512-Hs59xBNfUIunMFgWAbGX5cq6893IbWg4KnrjbYwX3tx0ztorVgTDA6B2sxf8ejHJ4wz8BqGUMYlnzNBer5NvGg==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">= 4"
			}
		},
		"node_modules/@typescript-eslint/parser": {
			"version": "8.33.1",
			"resolved": "https://registry.npmjs.org/@typescript-eslint/parser/-/parser-8.33.1.tgz",
			"integrity": "sha512-qwxv6dq682yVvgKKp2qWwLgRbscDAYktPptK4JPojCwwi3R9cwrvIxS4lvBpzmcqzR4bdn54Z0IG1uHFskW4dA==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@typescript-eslint/scope-manager": "8.33.1",
				"@typescript-eslint/types": "8.33.1",
				"@typescript-eslint/typescript-estree": "8.33.1",
				"@typescript-eslint/visitor-keys": "8.33.1",
				"debug": "^4.3.4"
			},
			"engines": {
				"node": "^18.18.0 || ^20.9.0 || >=21.1.0"
			},
			"funding": {
				"type": "opencollective",
				"url": "https://opencollective.com/typescript-eslint"
			},
			"peerDependencies": {
				"eslint": "^8.57.0 || ^9.0.0",
				"typescript": ">=4.8.4 <5.9.0"
			}
		},
		"node_modules/@typescript-eslint/project-service": {
			"version": "8.33.1",
			"resolved": "https://registry.npmjs.org/@typescript-eslint/project-service/-/project-service-8.33.1.tgz",
			"integrity": "sha512-DZR0efeNklDIHHGRpMpR5gJITQpu6tLr9lDJnKdONTC7vvzOlLAG/wcfxcdxEWrbiZApcoBCzXqU/Z458Za5Iw==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@typescript-eslint/tsconfig-utils": "^8.33.1",
				"@typescript-eslint/types": "^8.33.1",
				"debug": "^4.3.4"
			},
			"engines": {
				"node": "^18.18.0 || ^20.9.0 || >=21.1.0"
			},
			"funding": {
				"type": "opencollective",
				"url": "https://opencollective.com/typescript-eslint"
			},
			"peerDependencies": {
				"typescript": ">=4.8.4 <5.9.0"
			}
		},
		"node_modules/@typescript-eslint/scope-manager": {
			"version": "8.33.1",
			"resolved": "https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-8.33.1.tgz",
			"integrity": "sha512-dM4UBtgmzHR9bS0Rv09JST0RcHYearoEoo3pG5B6GoTR9XcyeqX87FEhPo+5kTvVfKCvfHaHrcgeJQc6mrDKrA==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@typescript-eslint/types": "8.33.1",
				"@typescript-eslint/visitor-keys": "8.33.1"
			},
			"engines": {
				"node": "^18.18.0 || ^20.9.0 || >=21.1.0"
			},
			"funding": {
				"type": "opencollective",
				"url": "https://opencollective.com/typescript-eslint"
			}
		},
		"node_modules/@typescript-eslint/tsconfig-utils": {
			"version": "8.33.1",
			"resolved": "https://registry.npmjs.org/@typescript-eslint/tsconfig-utils/-/tsconfig-utils-8.33.1.tgz",
			"integrity": "sha512-STAQsGYbHCF0/e+ShUQ4EatXQ7ceh3fBCXkNU7/MZVKulrlq1usH7t2FhxvCpuCi5O5oi1vmVaAjrGeL71OK1g==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": "^18.18.0 || ^20.9.0 || >=21.1.0"
			},
			"funding": {
				"type": "opencollective",
				"url": "https://opencollective.com/typescript-eslint"
			},
			"peerDependencies": {
				"typescript": ">=4.8.4 <5.9.0"
			}
		},
		"node_modules/@typescript-eslint/type-utils": {
			"version": "8.33.1",
			"resolved": "https://registry.npmjs.org/@typescript-eslint/type-utils/-/type-utils-8.33.1.tgz",
			"integrity": "sha512-1cG37d9xOkhlykom55WVwG2QRNC7YXlxMaMzqw2uPeJixBFfKWZgaP/hjAObqMN/u3fr5BrTwTnc31/L9jQ2ww==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@typescript-eslint/typescript-estree": "8.33.1",
				"@typescript-eslint/utils": "8.33.1",
				"debug": "^4.3.4",
				"ts-api-utils": "^2.1.0"
			},
			"engines": {
				"node": "^18.18.0 || ^20.9.0 || >=21.1.0"
			},
			"funding": {
				"type": "opencollective",
				"url": "https://opencollective.com/typescript-eslint"
			},
			"peerDependencies": {
				"eslint": "^8.57.0 || ^9.0.0",
				"typescript": ">=4.8.4 <5.9.0"
			}
		},
		"node_modules/@typescript-eslint/types": {
			"version": "8.33.1",
			"resolved": "https://registry.npmjs.org/@typescript-eslint/types/-/types-8.33.1.tgz",
			"integrity": "sha512-xid1WfizGhy/TKMTwhtVOgalHwPtV8T32MS9MaH50Cwvz6x6YqRIPdD2WvW0XaqOzTV9p5xdLY0h/ZusU5Lokg==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": "^18.18.0 || ^20.9.0 || >=21.1.0"
			},
			"funding": {
				"type": "opencollective",
				"url": "https://opencollective.com/typescript-eslint"
			}
		},
		"node_modules/@typescript-eslint/typescript-estree": {
			"version": "8.33.1",
			"resolved": "https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-8.33.1.tgz",
			"integrity": "sha512-+s9LYcT8LWjdYWu7IWs7FvUxpQ/DGkdjZeE/GGulHvv8rvYwQvVaUZ6DE+j5x/prADUgSbbCWZ2nPI3usuVeOA==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@typescript-eslint/project-service": "8.33.1",
				"@typescript-eslint/tsconfig-utils": "8.33.1",
				"@typescript-eslint/types": "8.33.1",
				"@typescript-eslint/visitor-keys": "8.33.1",
				"debug": "^4.3.4",
				"fast-glob": "^3.3.2",
				"is-glob": "^4.0.3",
				"minimatch": "^9.0.4",
				"semver": "^7.6.0",
				"ts-api-utils": "^2.1.0"
			},
			"engines": {
				"node": "^18.18.0 || ^20.9.0 || >=21.1.0"
			},
			"funding": {
				"type": "opencollective",
				"url": "https://opencollective.com/typescript-eslint"
			},
			"peerDependencies": {
				"typescript": ">=4.8.4 <5.9.0"
			}
		},
		"node_modules/@typescript-eslint/typescript-estree/node_modules/brace-expansion": {
			"version": "2.0.1",
			"resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz",
			"integrity": "sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"balanced-match": "^1.0.0"
			}
		},
		"node_modules/@typescript-eslint/typescript-estree/node_modules/minimatch": {
			"version": "9.0.5",
			"resolved": "https://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgz",
			"integrity": "sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==",
			"dev": true,
			"license": "ISC",
			"dependencies": {
				"brace-expansion": "^2.0.1"
			},
			"engines": {
				"node": ">=16 || 14 >=14.17"
			},
			"funding": {
				"url": "https://github.com/sponsors/isaacs"
			}
		},
		"node_modules/@typescript-eslint/utils": {
			"version": "8.33.1",
			"resolved": "https://registry.npmjs.org/@typescript-eslint/utils/-/utils-8.33.1.tgz",
			"integrity": "sha512-52HaBiEQUaRYqAXpfzWSR2U3gxk92Kw006+xZpElaPMg3C4PgM+A5LqwoQI1f9E5aZ/qlxAZxzm42WX+vn92SQ==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@eslint-community/eslint-utils": "^4.7.0",
				"@typescript-eslint/scope-manager": "8.33.1",
				"@typescript-eslint/types": "8.33.1",
				"@typescript-eslint/typescript-estree": "8.33.1"
			},
			"engines": {
				"node": "^18.18.0 || ^20.9.0 || >=21.1.0"
			},
			"funding": {
				"type": "opencollective",
				"url": "https://opencollective.com/typescript-eslint"
			},
			"peerDependencies": {
				"eslint": "^8.57.0 || ^9.0.0",
				"typescript": ">=4.8.4 <5.9.0"
			}
		},
		"node_modules/@typescript-eslint/visitor-keys": {
			"version": "8.33.1",
			"resolved": "https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-8.33.1.tgz",
			"integrity": "sha512-3i8NrFcZeeDHJ+7ZUuDkGT+UHq+XoFGsymNK2jZCOHcfEzRQ0BdpRtdpSx/Iyf3MHLWIcLS0COuOPibKQboIiQ==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@typescript-eslint/types": "8.33.1",
				"eslint-visitor-keys": "^4.2.0"
			},
			"engines": {
				"node": "^18.18.0 || ^20.9.0 || >=21.1.0"
			},
			"funding": {
				"type": "opencollective",
				"url": "https://opencollective.com/typescript-eslint"
			}
		},
		"node_modules/@vitest/expect": {
			"version": "3.2.2",
			"resolved": "https://registry.npmjs.org/@vitest/expect/-/expect-3.2.2.tgz",
			"integrity": "sha512-ipHw0z669vEMjzz3xQE8nJX1s0rQIb7oEl4jjl35qWTwm/KIHERIg/p/zORrjAaZKXfsv7IybcNGHwhOOAPMwQ==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@types/chai": "^5.2.2",
				"@vitest/spy": "3.2.2",
				"@vitest/utils": "3.2.2",
				"chai": "^5.2.0",
				"tinyrainbow": "^2.0.0"
			},
			"funding": {
				"url": "https://opencollective.com/vitest"
			}
		},
		"node_modules/@vitest/mocker": {
			"version": "3.2.2",
			"resolved": "https://registry.npmjs.org/@vitest/mocker/-/mocker-3.2.2.tgz",
			"integrity": "sha512-jKojcaRyIYpDEf+s7/dD3LJt53c0dPfp5zCPXz9H/kcGrSlovU/t1yEaNzM9oFME3dcd4ULwRI/x0Po1Zf+LTw==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@vitest/spy": "3.2.2",
				"estree-walker": "^3.0.3",
				"magic-string": "^0.30.17"
			},
			"funding": {
				"url": "https://opencollective.com/vitest"
			},
			"peerDependencies": {
				"msw": "^2.4.9",
				"vite": "^5.0.0 || ^6.0.0 || ^7.0.0-0"
			},
			"peerDependenciesMeta": {
				"msw": {
					"optional": true
				},
				"vite": {
					"optional": true
				}
			}
		},
		"node_modules/@vitest/pretty-format": {
			"version": "3.2.2",
			"resolved": "https://registry.npmjs.org/@vitest/pretty-format/-/pretty-format-3.2.2.tgz",
			"integrity": "sha512-FY4o4U1UDhO9KMd2Wee5vumwcaHw7Vg4V7yR4Oq6uK34nhEJOmdRYrk3ClburPRUA09lXD/oXWZ8y/Sdma0aUQ==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"tinyrainbow": "^2.0.0"
			},
			"funding": {
				"url": "https://opencollective.com/vitest"
			}
		},
		"node_modules/@vitest/runner": {
			"version": "3.2.2",
			"resolved": "https://registry.npmjs.org/@vitest/runner/-/runner-3.2.2.tgz",
			"integrity": "sha512-GYcHcaS3ejGRZYed2GAkvsjBeXIEerDKdX3orQrBJqLRiea4NSS9qvn9Nxmuy1IwIB+EjFOaxXnX79l8HFaBwg==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@vitest/utils": "3.2.2",
				"pathe": "^2.0.3"
			},
			"funding": {
				"url": "https://opencollective.com/vitest"
			}
		},
		"node_modules/@vitest/snapshot": {
			"version": "3.2.2",
			"resolved": "https://registry.npmjs.org/@vitest/snapshot/-/snapshot-3.2.2.tgz",
			"integrity": "sha512-aMEI2XFlR1aNECbBs5C5IZopfi5Lb8QJZGGpzS8ZUHML5La5wCbrbhLOVSME68qwpT05ROEEOAZPRXFpxZV2wA==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@vitest/pretty-format": "3.2.2",
				"magic-string": "^0.30.17",
				"pathe": "^2.0.3"
			},
			"funding": {
				"url": "https://opencollective.com/vitest"
			}
		},
		"node_modules/@vitest/spy": {
			"version": "3.2.2",
			"resolved": "https://registry.npmjs.org/@vitest/spy/-/spy-3.2.2.tgz",
			"integrity": "sha512-6Utxlx3o7pcTxvp0u8kUiXtRFScMrUg28KjB3R2hon7w4YqOFAEA9QwzPVVS1QNL3smo4xRNOpNZClRVfpMcYg==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"tinyspy": "^4.0.3"
			},
			"funding": {
				"url": "https://opencollective.com/vitest"
			}
		},
		"node_modules/@vitest/utils": {
			"version": "3.2.2",
			"resolved": "https://registry.npmjs.org/@vitest/utils/-/utils-3.2.2.tgz",
			"integrity": "sha512-qJYMllrWpF/OYfWHP32T31QCaLa3BAzT/n/8mNGhPdVcjY+JYazQFO1nsJvXU12Kp1xMpNY4AGuljPTNjQve6A==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@vitest/pretty-format": "3.2.2",
				"loupe": "^3.1.3",
				"tinyrainbow": "^2.0.0"
			},
			"funding": {
				"url": "https://opencollective.com/vitest"
			}
		},
		"node_modules/acorn": {
			"version": "8.14.1",
			"resolved": "https://registry.npmjs.org/acorn/-/acorn-8.14.1.tgz",
			"integrity": "sha512-OvQ/2pUDKmgfCg++xsTX1wGxfTaszcHVcTctW4UJB4hibJx2HXxxO5UmVgyjMa+ZDsiaf5wWLXYpRWMmBI0QHg==",
			"dev": true,
			"license": "MIT",
			"bin": {
				"acorn": "bin/acorn"
			},
			"engines": {
				"node": ">=0.4.0"
			}
		},
		"node_modules/acorn-jsx": {
			"version": "5.3.2",
			"resolved": "https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz",
			"integrity": "sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==",
			"dev": true,
			"license": "MIT",
			"peerDependencies": {
				"acorn": "^6.0.0 || ^7.0.0 || ^8.0.0"
			}
		},
		"node_modules/agent-base": {
			"version": "7.1.3",
			"resolved": "https://registry.npmjs.org/agent-base/-/agent-base-7.1.3.tgz",
			"integrity": "sha512-jRR5wdylq8CkOe6hei19GGZnxM6rBGwFl3Bg0YItGDimvjGtAvdZk4Pu6Cl4u4Igsws4a1fd1Vq3ezrhn4KmFw==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">= 14"
			}
		},
		"node_modules/ajv": {
			"version": "6.12.6",
			"resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
			"integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"fast-deep-equal": "^3.1.1",
				"fast-json-stable-stringify": "^2.0.0",
				"json-schema-traverse": "^0.4.1",
				"uri-js": "^4.2.2"
			},
			"funding": {
				"type": "github",
				"url": "https://github.com/sponsors/epoberezkin"
			}
		},
		"node_modules/ansi-regex": {
			"version": "5.0.1",
			"resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
			"integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=8"
			}
		},
		"node_modules/ansi-styles": {
			"version": "4.3.0",
			"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
			"integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"color-convert": "^2.0.1"
			},
			"engines": {
				"node": ">=8"
			},
			"funding": {
				"url": "https://github.com/chalk/ansi-styles?sponsor=1"
			}
		},
		"node_modules/any-promise": {
			"version": "1.3.0",
			"resolved": "https://registry.npmjs.org/any-promise/-/any-promise-1.3.0.tgz",
			"integrity": "sha512-7UvmKalWRt1wgjL1RrGxoSJW/0QZFIegpeGvZG9kjp8vrRu55XTHbwnqq2GpXm9uLbcuhxm3IqX9OB4MZR1b2A==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/anymatch": {
			"version": "3.1.3",
			"resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz",
			"integrity": "sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==",
			"dev": true,
			"license": "ISC",
			"dependencies": {
				"normalize-path": "^3.0.0",
				"picomatch": "^2.0.4"
			},
			"engines": {
				"node": ">= 8"
			}
		},
		"node_modules/anymatch/node_modules/picomatch": {
			"version": "2.3.1",
			"resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
			"integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=8.6"
			},
			"funding": {
				"url": "https://github.com/sponsors/jonschlinkert"
			}
		},
		"node_modules/arg": {
			"version": "5.0.2",
			"resolved": "https://registry.npmjs.org/arg/-/arg-5.0.2.tgz",
			"integrity": "sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/argparse": {
			"version": "2.0.1",
			"resolved": "https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz",
			"integrity": "sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==",
			"dev": true,
			"license": "Python-2.0"
		},
		"node_modules/aria-query": {
			"version": "5.3.2",
			"resolved": "https://registry.npmjs.org/aria-query/-/aria-query-5.3.2.tgz",
			"integrity": "sha512-COROpnaoap1E2F000S62r6A60uHZnmlvomhfyT2DlTcrY1OrBKn2UhH7qn5wTC9zMvD0AY7csdPSNwKP+7WiQw==",
			"dev": true,
			"license": "Apache-2.0",
			"engines": {
				"node": ">= 0.4"
			}
		},
		"node_modules/assertion-error": {
			"version": "2.0.1",
			"resolved": "https://registry.npmjs.org/assertion-error/-/assertion-error-2.0.1.tgz",
			"integrity": "sha512-Izi8RQcffqCeNVgFigKli1ssklIbpHnCYc6AknXGYoB6grJqyeby7jv12JUQgmTAnIDnbck1uxksT4dzN3PWBA==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=12"
			}
		},
		"node_modules/autoprefixer": {
			"version": "10.4.17",
			"resolved": "https://registry.npmjs.org/autoprefixer/-/autoprefixer-10.4.17.tgz",
			"integrity": "sha512-/cpVNRLSfhOtcGflT13P2794gVSgmPgTR+erw5ifnMLZb0UnSlkK4tquLmkd3BhA+nLo5tX8Cu0upUsGKvKbmg==",
			"dev": true,
			"funding": [
				{
					"type": "opencollective",
					"url": "https://opencollective.com/postcss/"
				},
				{
					"type": "tidelift",
					"url": "https://tidelift.com/funding/github/npm/autoprefixer"
				},
				{
					"type": "github",
					"url": "https://github.com/sponsors/ai"
				}
			],
			"license": "MIT",
			"dependencies": {
				"browserslist": "^4.22.2",
				"caniuse-lite": "^1.0.30001578",
				"fraction.js": "^4.3.7",
				"normalize-range": "^0.1.2",
				"picocolors": "^1.0.0",
				"postcss-value-parser": "^4.2.0"
			},
			"bin": {
				"autoprefixer": "bin/autoprefixer"
			},
			"engines": {
				"node": "^10 || ^12 || >=14"
			},
			"peerDependencies": {
				"postcss": "^8.1.0"
			}
		},
		"node_modules/axobject-query": {
			"version": "4.1.0",
			"resolved": "https://registry.npmjs.org/axobject-query/-/axobject-query-4.1.0.tgz",
			"integrity": "sha512-qIj0G9wZbMGNLjLmg1PT6v2mE9AH2zlnADJD/2tC6E00hgmhUOfEB6greHPAfLRSufHqROIUTkw6E+M3lH0PTQ==",
			"dev": true,
			"license": "Apache-2.0",
			"engines": {
				"node": ">= 0.4"
			}
		},
		"node_modules/balanced-match": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
			"integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/binary-extensions": {
			"version": "2.3.0",
			"resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.3.0.tgz",
			"integrity": "sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=8"
			},
			"funding": {
				"url": "https://github.com/sponsors/sindresorhus"
			}
		},
		"node_modules/brace-expansion": {
			"version": "1.1.11",
			"resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
			"integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"balanced-match": "^1.0.0",
				"concat-map": "0.0.1"
			}
		},
		"node_modules/braces": {
			"version": "3.0.3",
			"resolved": "https://registry.npmjs.org/braces/-/braces-3.0.3.tgz",
			"integrity": "sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"fill-range": "^7.1.1"
			},
			"engines": {
				"node": ">=8"
			}
		},
		"node_modules/browserslist": {
			"version": "4.25.0",
			"resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.25.0.tgz",
			"integrity": "sha512-PJ8gYKeS5e/whHBh8xrwYK+dAvEj7JXtz6uTucnMRB8OiGTsKccFekoRrjajPBHV8oOY+2tI4uxeceSimKwMFA==",
			"dev": true,
			"funding": [
				{
					"type": "opencollective",
					"url": "https://opencollective.com/browserslist"
				},
				{
					"type": "tidelift",
					"url": "https://tidelift.com/funding/github/npm/browserslist"
				},
				{
					"type": "github",
					"url": "https://github.com/sponsors/ai"
				}
			],
			"license": "MIT",
			"dependencies": {
				"caniuse-lite": "^1.0.30001718",
				"electron-to-chromium": "^1.5.160",
				"node-releases": "^2.0.19",
				"update-browserslist-db": "^1.1.3"
			},
			"bin": {
				"browserslist": "cli.js"
			},
			"engines": {
				"node": "^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7"
			}
		},
		"node_modules/cac": {
			"version": "6.7.14",
			"resolved": "https://registry.npmjs.org/cac/-/cac-6.7.14.tgz",
			"integrity": "sha512-b6Ilus+c3RrdDk+JhLKUAQfzzgLEPy6wcXqS7f/xe1EETvsDP6GORG7SFuOs6cID5YkqchW/LXZbX5bc8j7ZcQ==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=8"
			}
		},
		"node_modules/callsites": {
			"version": "3.1.0",
			"resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
			"integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=6"
			}
		},
		"node_modules/camelcase-css": {
			"version": "2.0.1",
			"resolved": "https://registry.npmjs.org/camelcase-css/-/camelcase-css-2.0.1.tgz",
			"integrity": "sha512-QOSvevhslijgYwRx6Rv7zKdMF8lbRmx+uQGx2+vDc+KI/eBnsy9kit5aj23AgGu3pa4t9AgwbnXWqS+iOY+2aA==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">= 6"
			}
		},
		"node_modules/caniuse-lite": {
			"version": "1.0.30001721",
			"resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001721.tgz",
			"integrity": "sha512-cOuvmUVtKrtEaoKiO0rSc29jcjwMwX5tOHDy4MgVFEWiUXj4uBMJkwI8MDySkgXidpMiHUcviogAvFi4pA2hDQ==",
			"dev": true,
			"funding": [
				{
					"type": "opencollective",
					"url": "https://opencollective.com/browserslist"
				},
				{
					"type": "tidelift",
					"url": "https://tidelift.com/funding/github/npm/caniuse-lite"
				},
				{
					"type": "github",
					"url": "https://github.com/sponsors/ai"
				}
			],
			"license": "CC-BY-4.0"
		},
		"node_modules/chai": {
			"version": "5.2.0",
			"resolved": "https://registry.npmjs.org/chai/-/chai-5.2.0.tgz",
			"integrity": "sha512-mCuXncKXk5iCLhfhwTc0izo0gtEmpz5CtG2y8GiOINBlMVS6v8TMRc5TaLWKS6692m9+dVVfzgeVxR5UxWHTYw==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"assertion-error": "^2.0.1",
				"check-error": "^2.1.1",
				"deep-eql": "^5.0.1",
				"loupe": "^3.1.0",
				"pathval": "^2.0.0"
			},
			"engines": {
				"node": ">=12"
			}
		},
		"node_modules/chalk": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz",
			"integrity": "sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"ansi-styles": "^4.1.0",
				"supports-color": "^7.1.0"
			},
			"engines": {
				"node": ">=8"
			}
		},
		"node_modules/chart.js": {
			"version": "4.4.9",
			"resolved": "https://registry.npmjs.org/chart.js/-/chart.js-4.4.9.tgz",
			"integrity": "sha512-EyZ9wWKgpAU0fLJ43YAEIF8sr5F2W3LqbS40ZJyHIner2lY14ufqv2VMp69MAiZ2rpwxEUxEhIH/0U3xyRynxg==",
			"license": "MIT",
			"dependencies": {
				"@kurkle/color": "^0.3.0"
			},
			"engines": {
				"pnpm": ">=8"
			}
		},
		"node_modules/check-error": {
			"version": "2.1.1",
			"resolved": "https://registry.npmjs.org/check-error/-/check-error-2.1.1.tgz",
			"integrity": "sha512-OAlb+T7V4Op9OwdkjmguYRqncdlx5JiofwOAUkmTF+jNdHwzTaTs4sRAGpzLF3oOz5xAyDGrPgeIDFQmDOTiJw==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">= 16"
			}
		},
		"node_modules/chokidar": {
			"version": "4.0.3",
			"resolved": "https://registry.npmjs.org/chokidar/-/chokidar-4.0.3.tgz",
			"integrity": "sha512-Qgzu8kfBvo+cA4962jnP1KkS6Dop5NS6g7R5LFYJr4b8Ub94PPQXUksCw9PvXoeXPRRddRNC5C1JQUR2SMGtnA==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"readdirp": "^4.0.1"
			},
			"engines": {
				"node": ">= 14.16.0"
			},
			"funding": {
				"url": "https://paulmillr.com/funding/"
			}
		},
		"node_modules/clsx": {
			"version": "2.1.1",
			"resolved": "https://registry.npmjs.org/clsx/-/clsx-2.1.1.tgz",
			"integrity": "sha512-eYm0QWBtUrBWZWG0d386OGAw16Z995PiOVo2B7bjWSbHedGl5e0ZWaq65kOGgUSNesEIDkB9ISbTg/JK9dhCZA==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=6"
			}
		},
		"node_modules/color-convert": {
			"version": "2.0.1",
			"resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
			"integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"color-name": "~1.1.4"
			},
			"engines": {
				"node": ">=7.0.0"
			}
		},
		"node_modules/color-name": {
			"version": "1.1.4",
			"resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
			"integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/commander": {
			"version": "4.1.1",
			"resolved": "https://registry.npmjs.org/commander/-/commander-4.1.1.tgz",
			"integrity": "sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">= 6"
			}
		},
		"node_modules/concat-map": {
			"version": "0.0.1",
			"resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
			"integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/cookie": {
			"version": "0.6.0",
			"resolved": "https://registry.npmjs.org/cookie/-/cookie-0.6.0.tgz",
			"integrity": "sha512-U71cyTamuh1CRNCfpGY6to28lxvNwPG4Guz/EVjgf3Jmzv0vlDp1atT9eS5dDjMYHucpHbWns6Lwf3BKz6svdw==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">= 0.6"
			}
		},
		"node_modules/cross-spawn": {
			"version": "7.0.6",
			"resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz",
			"integrity": "sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"path-key": "^3.1.0",
				"shebang-command": "^2.0.0",
				"which": "^2.0.1"
			},
			"engines": {
				"node": ">= 8"
			}
		},
		"node_modules/css.escape": {
			"version": "1.5.1",
			"resolved": "https://registry.npmjs.org/css.escape/-/css.escape-1.5.1.tgz",
			"integrity": "sha512-YUifsXXuknHlUsmlgyY0PKzgPOr7/FjCePfHNt0jxm83wHZi44VDMQ7/fGNkjY3/jV1MC+1CmZbaHzugyeRtpg==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/cssesc": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/cssesc/-/cssesc-3.0.0.tgz",
			"integrity": "sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==",
			"dev": true,
			"license": "MIT",
			"bin": {
				"cssesc": "bin/cssesc"
			},
			"engines": {
				"node": ">=4"
			}
		},
		"node_modules/cssstyle": {
			"version": "4.3.1",
			"resolved": "https://registry.npmjs.org/cssstyle/-/cssstyle-4.3.1.tgz",
			"integrity": "sha512-ZgW+Jgdd7i52AaLYCriF8Mxqft0gD/R9i9wi6RWBhs1pqdPEzPjym7rvRKi397WmQFf3SlyUsszhw+VVCbx79Q==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@asamuzakjp/css-color": "^3.1.2",
				"rrweb-cssom": "^0.8.0"
			},
			"engines": {
				"node": ">=18"
			}
		},
		"node_modules/data-urls": {
			"version": "5.0.0",
			"resolved": "https://registry.npmjs.org/data-urls/-/data-urls-5.0.0.tgz",
			"integrity": "sha512-ZYP5VBHshaDAiVZxjbRVcFJpc+4xGgT0bK3vzy1HLN8jTO975HEbuYzZJcHoQEY5K1a0z8YayJkyVETa08eNTg==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"whatwg-mimetype": "^4.0.0",
				"whatwg-url": "^14.0.0"
			},
			"engines": {
				"node": ">=18"
			}
		},
		"node_modules/debug": {
			"version": "4.4.1",
			"resolved": "https://registry.npmjs.org/debug/-/debug-4.4.1.tgz",
			"integrity": "sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"ms": "^2.1.3"
			},
			"engines": {
				"node": ">=6.0"
			},
			"peerDependenciesMeta": {
				"supports-color": {
					"optional": true
				}
			}
		},
		"node_modules/decimal.js": {
			"version": "10.5.0",
			"resolved": "https://registry.npmjs.org/decimal.js/-/decimal.js-10.5.0.tgz",
			"integrity": "sha512-8vDa8Qxvr/+d94hSh5P3IJwI5t8/c0KsMp+g8bNw9cY2icONa5aPfvKeieW1WlG0WQYwwhJ7mjui2xtiePQSXw==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/deep-eql": {
			"version": "5.0.2",
			"resolved": "https://registry.npmjs.org/deep-eql/-/deep-eql-5.0.2.tgz",
			"integrity": "sha512-h5k/5U50IJJFpzfL6nO9jaaumfjO/f2NjK/oYB2Djzm4p9L+3T9qWpZqZ2hAbLPuuYq9wrU08WQyBTL5GbPk5Q==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=6"
			}
		},
		"node_modules/deep-is": {
			"version": "0.1.4",
			"resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz",
			"integrity": "sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/deepmerge": {
			"version": "4.3.1",
			"resolved": "https://registry.npmjs.org/deepmerge/-/deepmerge-4.3.1.tgz",
			"integrity": "sha512-3sUqbMEc77XqpdNO7FRyRog+eW3ph+GYCbj+rK+uYyRMuwsVy0rMiVtPn+QJlKFvWP/1PYpapqYn0Me2knFn+A==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/dequal": {
			"version": "2.0.3",
			"resolved": "https://registry.npmjs.org/dequal/-/dequal-2.0.3.tgz",
			"integrity": "sha512-0je+qPKHEMohvfRTCEo3CrPG6cAzAYgmzKyxRiYSSDkS6eGJdyVJm7WaYA5ECaAD9wLB2T4EEeymA5aFVcYXCA==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=6"
			}
		},
		"node_modules/detect-libc": {
			"version": "2.0.4",
			"resolved": "https://registry.npmjs.org/detect-libc/-/detect-libc-2.0.4.tgz",
			"integrity": "sha512-3UDv+G9CsCKO1WKMGw9fwq/SWJYbI0c5Y7LU1AXYoDdbhE2AHQ6N6Nb34sG8Fj7T5APy8qXDCKuuIHd1BR0tVA==",
			"dev": true,
			"license": "Apache-2.0",
			"optional": true,
			"peer": true,
			"engines": {
				"node": ">=8"
			}
		},
		"node_modules/devalue": {
			"version": "5.1.1",
			"resolved": "https://registry.npmjs.org/devalue/-/devalue-5.1.1.tgz",
			"integrity": "sha512-maua5KUiapvEwiEAe+XnlZ3Rh0GD+qI1J/nb9vrJc3muPXvcF/8gXYTWF76+5DAqHyDUtOIImEuo0YKE9mshVw==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/didyoumean": {
			"version": "1.2.2",
			"resolved": "https://registry.npmjs.org/didyoumean/-/didyoumean-1.2.2.tgz",
			"integrity": "sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw==",
			"dev": true,
			"license": "Apache-2.0"
		},
		"node_modules/dlv": {
			"version": "1.1.3",
			"resolved": "https://registry.npmjs.org/dlv/-/dlv-1.1.3.tgz",
			"integrity": "sha512-+HlytyjlPKnIG8XuRG8WvmBP8xs8P71y+SKKS6ZXWoEgLuePxtDoUEiH7WkdePWrQ5JBpE6aoVqfZfJUQkjXwA==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/dom-accessibility-api": {
			"version": "0.6.3",
			"resolved": "https://registry.npmjs.org/dom-accessibility-api/-/dom-accessibility-api-0.6.3.tgz",
			"integrity": "sha512-7ZgogeTnjuHbo+ct10G9Ffp0mif17idi0IyWNVA/wcwcm7NPOD/WEHVP3n7n3MhXqxoIYm8d6MuZohYWIZ4T3w==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/eastasianwidth": {
			"version": "0.2.0",
			"resolved": "https://registry.npmjs.org/eastasianwidth/-/eastasianwidth-0.2.0.tgz",
			"integrity": "sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/electron-to-chromium": {
			"version": "1.5.165",
			"resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.165.tgz",
			"integrity": "sha512-naiMx1Z6Nb2TxPU6fiFrUrDTjyPMLdTtaOd2oLmG8zVSg2hCWGkhPyxwk+qRmZ1ytwVqUv0u7ZcDA5+ALhaUtw==",
			"dev": true,
			"license": "ISC"
		},
		"node_modules/emoji-regex": {
			"version": "9.2.2",
			"resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz",
			"integrity": "sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/entities": {
			"version": "6.0.0",
			"resolved": "https://registry.npmjs.org/entities/-/entities-6.0.0.tgz",
			"integrity": "sha512-aKstq2TDOndCn4diEyp9Uq/Flu2i1GlLkc6XIDQSDMuaFE3OPW5OphLCyQ5SpSJZTb4reN+kTcYru5yIfXoRPw==",
			"dev": true,
			"license": "BSD-2-Clause",
			"engines": {
				"node": ">=0.12"
			},
			"funding": {
				"url": "https://github.com/fb55/entities?sponsor=1"
			}
		},
		"node_modules/es-module-lexer": {
			"version": "1.7.0",
			"resolved": "https://registry.npmjs.org/es-module-lexer/-/es-module-lexer-1.7.0.tgz",
			"integrity": "sha512-jEQoCwk8hyb2AZziIOLhDqpm5+2ww5uIE6lkO/6jcOCusfk6LhMHpXXfBLXTZ7Ydyt0j4VoUQv6uGNYbdW+kBA==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/esbuild": {
			"version": "0.25.5",
			"resolved": "https://registry.npmjs.org/esbuild/-/esbuild-0.25.5.tgz",
			"integrity": "sha512-P8OtKZRv/5J5hhz0cUAdu/cLuPIKXpQl1R9pZtvmHWQvrAUVd0UNIPT4IB4W3rNOqVO0rlqHmCIbSwxh/c9yUQ==",
			"dev": true,
			"hasInstallScript": true,
			"license": "MIT",
			"bin": {
				"esbuild": "bin/esbuild"
			},
			"engines": {
				"node": ">=18"
			},
			"optionalDependencies": {
				"@esbuild/aix-ppc64": "0.25.5",
				"@esbuild/android-arm": "0.25.5",
				"@esbuild/android-arm64": "0.25.5",
				"@esbuild/android-x64": "0.25.5",
				"@esbuild/darwin-arm64": "0.25.5",
				"@esbuild/darwin-x64": "0.25.5",
				"@esbuild/freebsd-arm64": "0.25.5",
				"@esbuild/freebsd-x64": "0.25.5",
				"@esbuild/linux-arm": "0.25.5",
				"@esbuild/linux-arm64": "0.25.5",
				"@esbuild/linux-ia32": "0.25.5",
				"@esbuild/linux-loong64": "0.25.5",
				"@esbuild/linux-mips64el": "0.25.5",
				"@esbuild/linux-ppc64": "0.25.5",
				"@esbuild/linux-riscv64": "0.25.5",
				"@esbuild/linux-s390x": "0.25.5",
				"@esbuild/linux-x64": "0.25.5",
				"@esbuild/netbsd-arm64": "0.25.5",
				"@esbuild/netbsd-x64": "0.25.5",
				"@esbuild/openbsd-arm64": "0.25.5",
				"@esbuild/openbsd-x64": "0.25.5",
				"@esbuild/sunos-x64": "0.25.5",
				"@esbuild/win32-arm64": "0.25.5",
				"@esbuild/win32-ia32": "0.25.5",
				"@esbuild/win32-x64": "0.25.5"
			}
		},
		"node_modules/escalade": {
			"version": "3.2.0",
			"resolved": "https://registry.npmjs.org/escalade/-/escalade-3.2.0.tgz",
			"integrity": "sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=6"
			}
		},
		"node_modules/escape-string-regexp": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz",
			"integrity": "sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=10"
			},
			"funding": {
				"url": "https://github.com/sponsors/sindresorhus"
			}
		},
		"node_modules/eslint": {
			"version": "9.28.0",
			"resolved": "https://registry.npmjs.org/eslint/-/eslint-9.28.0.tgz",
			"integrity": "sha512-ocgh41VhRlf9+fVpe7QKzwLj9c92fDiqOj8Y3Sd4/ZmVA4Btx4PlUYPq4pp9JDyupkf1upbEXecxL2mwNV7jPQ==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@eslint-community/eslint-utils": "^4.2.0",
				"@eslint-community/regexpp": "^4.12.1",
				"@eslint/config-array": "^0.20.0",
				"@eslint/config-helpers": "^0.2.1",
				"@eslint/core": "^0.14.0",
				"@eslint/eslintrc": "^3.3.1",
				"@eslint/js": "9.28.0",
				"@eslint/plugin-kit": "^0.3.1",
				"@humanfs/node": "^0.16.6",
				"@humanwhocodes/module-importer": "^1.0.1",
				"@humanwhocodes/retry": "^0.4.2",
				"@types/estree": "^1.0.6",
				"@types/json-schema": "^7.0.15",
				"ajv": "^6.12.4",
				"chalk": "^4.0.0",
				"cross-spawn": "^7.0.6",
				"debug": "^4.3.2",
				"escape-string-regexp": "^4.0.0",
				"eslint-scope": "^8.3.0",
				"eslint-visitor-keys": "^4.2.0",
				"espree": "^10.3.0",
				"esquery": "^1.5.0",
				"esutils": "^2.0.2",
				"fast-deep-equal": "^3.1.3",
				"file-entry-cache": "^8.0.0",
				"find-up": "^5.0.0",
				"glob-parent": "^6.0.2",
				"ignore": "^5.2.0",
				"imurmurhash": "^0.1.4",
				"is-glob": "^4.0.0",
				"json-stable-stringify-without-jsonify": "^1.0.1",
				"lodash.merge": "^4.6.2",
				"minimatch": "^3.1.2",
				"natural-compare": "^1.4.0",
				"optionator": "^0.9.3"
			},
			"bin": {
				"eslint": "bin/eslint.js"
			},
			"engines": {
				"node": "^18.18.0 || ^20.9.0 || >=21.1.0"
			},
			"funding": {
				"url": "https://eslint.org/donate"
			},
			"peerDependencies": {
				"jiti": "*"
			},
			"peerDependenciesMeta": {
				"jiti": {
					"optional": true
				}
			}
		},
		"node_modules/eslint-config-prettier": {
			"version": "10.1.5",
			"resolved": "https://registry.npmjs.org/eslint-config-prettier/-/eslint-config-prettier-10.1.5.tgz",
			"integrity": "sha512-zc1UmCpNltmVY34vuLRV61r1K27sWuX39E+uyUnY8xS2Bex88VV9cugG+UZbRSRGtGyFboj+D8JODyme1plMpw==",
			"dev": true,
			"license": "MIT",
			"bin": {
				"eslint-config-prettier": "bin/cli.js"
			},
			"funding": {
				"url": "https://opencollective.com/eslint-config-prettier"
			},
			"peerDependencies": {
				"eslint": ">=7.0.0"
			}
		},
		"node_modules/eslint-plugin-svelte": {
			"version": "3.9.1",
			"resolved": "https://registry.npmjs.org/eslint-plugin-svelte/-/eslint-plugin-svelte-3.9.1.tgz",
			"integrity": "sha512-mXFulSdD/0/p+zwENjPNsiVwAqmSRp90sy5zvVQBX1yAXhJbdhIn6C/tn8BZYjU94Ia7Y87d1Xdbvi49DeWyHQ==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@eslint-community/eslint-utils": "^4.6.1",
				"@jridgewell/sourcemap-codec": "^1.5.0",
				"esutils": "^2.0.3",
				"globals": "^16.0.0",
				"known-css-properties": "^0.36.0",
				"postcss": "^8.4.49",
				"postcss-load-config": "^3.1.4",
				"postcss-safe-parser": "^7.0.0",
				"semver": "^7.6.3",
				"svelte-eslint-parser": "^1.2.0"
			},
			"engines": {
				"node": "^18.18.0 || ^20.9.0 || >=21.1.0"
			},
			"funding": {
				"url": "https://github.com/sponsors/ota-meshi"
			},
			"peerDependencies": {
				"eslint": "^8.57.1 || ^9.0.0",
				"svelte": "^3.37.0 || ^4.0.0 || ^5.0.0"
			},
			"peerDependenciesMeta": {
				"svelte": {
					"optional": true
				}
			}
		},
		"node_modules/eslint-plugin-svelte/node_modules/postcss": {
			"version": "8.5.4",
			"resolved": "https://registry.npmjs.org/postcss/-/postcss-8.5.4.tgz",
			"integrity": "sha512-QSa9EBe+uwlGTFmHsPKokv3B/oEMQZxfqW0QqNCyhpa6mB1afzulwn8hihglqAb2pOw+BJgNlmXQ8la2VeHB7w==",
			"dev": true,
			"funding": [
				{
					"type": "opencollective",
					"url": "https://opencollective.com/postcss/"
				},
				{
					"type": "tidelift",
					"url": "https://tidelift.com/funding/github/npm/postcss"
				},
				{
					"type": "github",
					"url": "https://github.com/sponsors/ai"
				}
			],
			"license": "MIT",
			"dependencies": {
				"nanoid": "^3.3.11",
				"picocolors": "^1.1.1",
				"source-map-js": "^1.2.1"
			},
			"engines": {
				"node": "^10 || ^12 || >=14"
			}
		},
		"node_modules/eslint-scope": {
			"version": "8.3.0",
			"resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-8.3.0.tgz",
			"integrity": "sha512-pUNxi75F8MJ/GdeKtVLSbYg4ZI34J6C0C7sbL4YOp2exGwen7ZsuBqKzUhXd0qMQ362yET3z+uPwKeg/0C2XCQ==",
			"dev": true,
			"license": "BSD-2-Clause",
			"dependencies": {
				"esrecurse": "^4.3.0",
				"estraverse": "^5.2.0"
			},
			"engines": {
				"node": "^18.18.0 || ^20.9.0 || >=21.1.0"
			},
			"funding": {
				"url": "https://opencollective.com/eslint"
			}
		},
		"node_modules/eslint-visitor-keys": {
			"version": "4.2.0",
			"resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-4.2.0.tgz",
			"integrity": "sha512-UyLnSehNt62FFhSwjZlHmeokpRK59rcz29j+F1/aDgbkbRTk7wIc9XzdoasMUbRNKDM0qQt/+BJ4BrpFeABemw==",
			"dev": true,
			"license": "Apache-2.0",
			"engines": {
				"node": "^18.18.0 || ^20.9.0 || >=21.1.0"
			},
			"funding": {
				"url": "https://opencollective.com/eslint"
			}
		},
		"node_modules/eslint/node_modules/chalk": {
			"version": "4.1.2",
			"resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
			"integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"ansi-styles": "^4.1.0",
				"supports-color": "^7.1.0"
			},
			"engines": {
				"node": ">=10"
			},
			"funding": {
				"url": "https://github.com/chalk/chalk?sponsor=1"
			}
		},
		"node_modules/esm-env": {
			"version": "1.2.2",
			"resolved": "https://registry.npmjs.org/esm-env/-/esm-env-1.2.2.tgz",
			"integrity": "sha512-Epxrv+Nr/CaL4ZcFGPJIYLWFom+YeV1DqMLHJoEd9SYRxNbaFruBwfEX/kkHUJf55j2+TUbmDcmuilbP1TmXHA==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/espree": {
			"version": "10.3.0",
			"resolved": "https://registry.npmjs.org/espree/-/espree-10.3.0.tgz",
			"integrity": "sha512-0QYC8b24HWY8zjRnDTL6RiHfDbAWn63qb4LMj1Z4b076A4une81+z03Kg7l7mn/48PUTqoLptSXez8oknU8Clg==",
			"dev": true,
			"license": "BSD-2-Clause",
			"dependencies": {
				"acorn": "^8.14.0",
				"acorn-jsx": "^5.3.2",
				"eslint-visitor-keys": "^4.2.0"
			},
			"engines": {
				"node": "^18.18.0 || ^20.9.0 || >=21.1.0"
			},
			"funding": {
				"url": "https://opencollective.com/eslint"
			}
		},
		"node_modules/esquery": {
			"version": "1.6.0",
			"resolved": "https://registry.npmjs.org/esquery/-/esquery-1.6.0.tgz",
			"integrity": "sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==",
			"dev": true,
			"license": "BSD-3-Clause",
			"dependencies": {
				"estraverse": "^5.1.0"
			},
			"engines": {
				"node": ">=0.10"
			}
		},
		"node_modules/esrap": {
			"version": "1.4.7",
			"resolved": "https://registry.npmjs.org/esrap/-/esrap-1.4.7.tgz",
			"integrity": "sha512-0ZxW6guTF/AeKeKi7he93lmgv7Hx7giD1tBrOeVqkqsZGQJd2/kfnL7LdIsr9FT/AtkBK9XeDTov+gxprBqdEg==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@jridgewell/sourcemap-codec": "^1.4.15"
			}
		},
		"node_modules/esrecurse": {
			"version": "4.3.0",
			"resolved": "https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz",
			"integrity": "sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==",
			"dev": true,
			"license": "BSD-2-Clause",
			"dependencies": {
				"estraverse": "^5.2.0"
			},
			"engines": {
				"node": ">=4.0"
			}
		},
		"node_modules/estraverse": {
			"version": "5.3.0",
			"resolved": "https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz",
			"integrity": "sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==",
			"dev": true,
			"license": "BSD-2-Clause",
			"engines": {
				"node": ">=4.0"
			}
		},
		"node_modules/estree-walker": {
			"version": "3.0.3",
			"resolved": "https://registry.npmjs.org/estree-walker/-/estree-walker-3.0.3.tgz",
			"integrity": "sha512-7RUKfXgSMMkzt6ZuXmqapOurLGPPfgj6l9uRZ7lRGolvk0y2yocc35LdcxKC5PQZdn2DMqioAQ2NoWcrTKmm6g==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@types/estree": "^1.0.0"
			}
		},
		"node_modules/esutils": {
			"version": "2.0.3",
			"resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
			"integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==",
			"dev": true,
			"license": "BSD-2-Clause",
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/expect-type": {
			"version": "1.2.1",
			"resolved": "https://registry.npmjs.org/expect-type/-/expect-type-1.2.1.tgz",
			"integrity": "sha512-/kP8CAwxzLVEeFrMm4kMmy4CCDlpipyA7MYLVrdJIkV0fYF0UaigQHRsxHiuY/GEea+bh4KSv3TIlgr+2UL6bw==",
			"dev": true,
			"license": "Apache-2.0",
			"engines": {
				"node": ">=12.0.0"
			}
		},
		"node_modules/fast-deep-equal": {
			"version": "3.1.3",
			"resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
			"integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/fast-glob": {
			"version": "3.3.3",
			"resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.3.tgz",
			"integrity": "sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@nodelib/fs.stat": "^2.0.2",
				"@nodelib/fs.walk": "^1.2.3",
				"glob-parent": "^5.1.2",
				"merge2": "^1.3.0",
				"micromatch": "^4.0.8"
			},
			"engines": {
				"node": ">=8.6.0"
			}
		},
		"node_modules/fast-glob/node_modules/glob-parent": {
			"version": "5.1.2",
			"resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
			"integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
			"dev": true,
			"license": "ISC",
			"dependencies": {
				"is-glob": "^4.0.1"
			},
			"engines": {
				"node": ">= 6"
			}
		},
		"node_modules/fast-json-stable-stringify": {
			"version": "2.1.0",
			"resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
			"integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/fast-levenshtein": {
			"version": "2.0.6",
			"resolved": "https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz",
			"integrity": "sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/fastq": {
			"version": "1.19.1",
			"resolved": "https://registry.npmjs.org/fastq/-/fastq-1.19.1.tgz",
			"integrity": "sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==",
			"dev": true,
			"license": "ISC",
			"dependencies": {
				"reusify": "^1.0.4"
			}
		},
		"node_modules/fdir": {
			"version": "6.4.5",
			"resolved": "https://registry.npmjs.org/fdir/-/fdir-6.4.5.tgz",
			"integrity": "sha512-4BG7puHpVsIYxZUbiUE3RqGloLaSSwzYie5jvasC4LWuBWzZawynvYouhjbQKw2JuIGYdm0DzIxl8iVidKlUEw==",
			"dev": true,
			"license": "MIT",
			"peerDependencies": {
				"picomatch": "^3 || ^4"
			},
			"peerDependenciesMeta": {
				"picomatch": {
					"optional": true
				}
			}
		},
		"node_modules/file-entry-cache": {
			"version": "8.0.0",
			"resolved": "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-8.0.0.tgz",
			"integrity": "sha512-XXTUwCvisa5oacNGRP9SfNtYBNAMi+RPwBFmblZEF7N7swHYQS6/Zfk7SRwx4D5j3CH211YNRco1DEMNVfZCnQ==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"flat-cache": "^4.0.0"
			},
			"engines": {
				"node": ">=16.0.0"
			}
		},
		"node_modules/fill-range": {
			"version": "7.1.1",
			"resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz",
			"integrity": "sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"to-regex-range": "^5.0.1"
			},
			"engines": {
				"node": ">=8"
			}
		},
		"node_modules/find-up": {
			"version": "5.0.0",
			"resolved": "https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz",
			"integrity": "sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"locate-path": "^6.0.0",
				"path-exists": "^4.0.0"
			},
			"engines": {
				"node": ">=10"
			},
			"funding": {
				"url": "https://github.com/sponsors/sindresorhus"
			}
		},
		"node_modules/flat-cache": {
			"version": "4.0.1",
			"resolved": "https://registry.npmjs.org/flat-cache/-/flat-cache-4.0.1.tgz",
			"integrity": "sha512-f7ccFPK3SXFHpx15UIGyRJ/FJQctuKZ0zVuN3frBo4HnK3cay9VEW0R6yPYFHC0AgqhukPzKjq22t5DmAyqGyw==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"flatted": "^3.2.9",
				"keyv": "^4.5.4"
			},
			"engines": {
				"node": ">=16"
			}
		},
		"node_modules/flatted": {
			"version": "3.3.3",
			"resolved": "https://registry.npmjs.org/flatted/-/flatted-3.3.3.tgz",
			"integrity": "sha512-GX+ysw4PBCz0PzosHDepZGANEuFCMLrnRTiEy9McGjmkCQYwRq4A/X786G/fjM/+OjsWSU1ZrY5qyARZmO/uwg==",
			"dev": true,
			"license": "ISC"
		},
		"node_modules/foreground-child": {
			"version": "3.3.1",
			"resolved": "https://registry.npmjs.org/foreground-child/-/foreground-child-3.3.1.tgz",
			"integrity": "sha512-gIXjKqtFuWEgzFRJA9WCQeSJLZDjgJUOMCMzxtvFq/37KojM1BFGufqsCy0r4qSQmYLsZYMeyRqzIWOMup03sw==",
			"dev": true,
			"license": "ISC",
			"dependencies": {
				"cross-spawn": "^7.0.6",
				"signal-exit": "^4.0.1"
			},
			"engines": {
				"node": ">=14"
			},
			"funding": {
				"url": "https://github.com/sponsors/isaacs"
			}
		},
		"node_modules/fraction.js": {
			"version": "4.3.7",
			"resolved": "https://registry.npmjs.org/fraction.js/-/fraction.js-4.3.7.tgz",
			"integrity": "sha512-ZsDfxO51wGAXREY55a7la9LScWpwv9RxIrYABrlvOFBlH/ShPnrtsXeuUIfXKKOVicNxQ+o8JTbJvjS4M89yew==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": "*"
			},
			"funding": {
				"type": "patreon",
				"url": "https://github.com/sponsors/rawify"
			}
		},
		"node_modules/fsevents": {
			"version": "2.3.3",
			"resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",
			"integrity": "sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==",
			"dev": true,
			"hasInstallScript": true,
			"license": "MIT",
			"optional": true,
			"os": [
				"darwin"
			],
			"engines": {
				"node": "^8.16.0 || ^10.6.0 || >=11.0.0"
			}
		},
		"node_modules/function-bind": {
			"version": "1.1.2",
			"resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
			"integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
			"dev": true,
			"license": "MIT",
			"funding": {
				"url": "https://github.com/sponsors/ljharb"
			}
		},
		"node_modules/glob": {
			"version": "10.4.5",
			"resolved": "https://registry.npmjs.org/glob/-/glob-10.4.5.tgz",
			"integrity": "sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==",
			"dev": true,
			"license": "ISC",
			"dependencies": {
				"foreground-child": "^3.1.0",
				"jackspeak": "^3.1.2",
				"minimatch": "^9.0.4",
				"minipass": "^7.1.2",
				"package-json-from-dist": "^1.0.0",
				"path-scurry": "^1.11.1"
			},
			"bin": {
				"glob": "dist/esm/bin.mjs"
			},
			"funding": {
				"url": "https://github.com/sponsors/isaacs"
			}
		},
		"node_modules/glob-parent": {
			"version": "6.0.2",
			"resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz",
			"integrity": "sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==",
			"dev": true,
			"license": "ISC",
			"dependencies": {
				"is-glob": "^4.0.3"
			},
			"engines": {
				"node": ">=10.13.0"
			}
		},
		"node_modules/glob/node_modules/brace-expansion": {
			"version": "2.0.1",
			"resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz",
			"integrity": "sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"balanced-match": "^1.0.0"
			}
		},
		"node_modules/glob/node_modules/minimatch": {
			"version": "9.0.5",
			"resolved": "https://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgz",
			"integrity": "sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==",
			"dev": true,
			"license": "ISC",
			"dependencies": {
				"brace-expansion": "^2.0.1"
			},
			"engines": {
				"node": ">=16 || 14 >=14.17"
			},
			"funding": {
				"url": "https://github.com/sponsors/isaacs"
			}
		},
		"node_modules/globals": {
			"version": "16.2.0",
			"resolved": "https://registry.npmjs.org/globals/-/globals-16.2.0.tgz",
			"integrity": "sha512-O+7l9tPdHCU320IigZZPj5zmRCFG9xHmx9cU8FqU2Rp+JN714seHV+2S9+JslCpY4gJwU2vOGox0wzgae/MCEg==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=18"
			},
			"funding": {
				"url": "https://github.com/sponsors/sindresorhus"
			}
		},
		"node_modules/graphemer": {
			"version": "1.4.0",
			"resolved": "https://registry.npmjs.org/graphemer/-/graphemer-1.4.0.tgz",
			"integrity": "sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/has-flag": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
			"integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=8"
			}
		},
		"node_modules/hasown": {
			"version": "2.0.2",
			"resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
			"integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"function-bind": "^1.1.2"
			},
			"engines": {
				"node": ">= 0.4"
			}
		},
		"node_modules/html-encoding-sniffer": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/html-encoding-sniffer/-/html-encoding-sniffer-4.0.0.tgz",
			"integrity": "sha512-Y22oTqIU4uuPgEemfz7NDJz6OeKf12Lsu+QC+s3BVpda64lTiMYCyGwg5ki4vFxkMwQdeZDl2adZoqUgdFuTgQ==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"whatwg-encoding": "^3.1.1"
			},
			"engines": {
				"node": ">=18"
			}
		},
		"node_modules/http-proxy-agent": {
			"version": "7.0.2",
			"resolved": "https://registry.npmjs.org/http-proxy-agent/-/http-proxy-agent-7.0.2.tgz",
			"integrity": "sha512-T1gkAiYYDWYx3V5Bmyu7HcfcvL7mUrTWiM6yOfa3PIphViJ/gFPbvidQ+veqSOHci/PxBcDabeUNCzpOODJZig==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"agent-base": "^7.1.0",
				"debug": "^4.3.4"
			},
			"engines": {
				"node": ">= 14"
			}
		},
		"node_modules/https-proxy-agent": {
			"version": "7.0.6",
			"resolved": "https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-7.0.6.tgz",
			"integrity": "sha512-vK9P5/iUfdl95AI+JVyUuIcVtd4ofvtrOr3HNtM2yxC9bnMbEdp3x01OhQNnjb8IJYi38VlTE3mBXwcfvywuSw==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"agent-base": "^7.1.2",
				"debug": "4"
			},
			"engines": {
				"node": ">= 14"
			}
		},
		"node_modules/iconv-lite": {
			"version": "0.6.3",
			"resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.6.3.tgz",
			"integrity": "sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"safer-buffer": ">= 2.1.2 < 3.0.0"
			},
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/ignore": {
			"version": "5.3.2",
			"resolved": "https://registry.npmjs.org/ignore/-/ignore-5.3.2.tgz",
			"integrity": "sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">= 4"
			}
		},
		"node_modules/import-fresh": {
			"version": "3.3.1",
			"resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.1.tgz",
			"integrity": "sha512-TR3KfrTZTYLPB6jUjfx6MF9WcWrHL9su5TObK4ZkYgBdWKPOFoSoQIdEuTuR82pmtxH2spWG9h6etwfr1pLBqQ==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"parent-module": "^1.0.0",
				"resolve-from": "^4.0.0"
			},
			"engines": {
				"node": ">=6"
			},
			"funding": {
				"url": "https://github.com/sponsors/sindresorhus"
			}
		},
		"node_modules/imurmurhash": {
			"version": "0.1.4",
			"resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
			"integrity": "sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=0.8.19"
			}
		},
		"node_modules/indent-string": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/indent-string/-/indent-string-4.0.0.tgz",
			"integrity": "sha512-EdDDZu4A2OyIK7Lr/2zG+w5jmbuk1DVBnEwREQvBzspBJkCEbRa8GxU1lghYcaGJCnRWibjDXlq779X1/y5xwg==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=8"
			}
		},
		"node_modules/is-binary-path": {
			"version": "2.1.0",
			"resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz",
			"integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"binary-extensions": "^2.0.0"
			},
			"engines": {
				"node": ">=8"
			}
		},
		"node_modules/is-core-module": {
			"version": "2.16.1",
			"resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.16.1.tgz",
			"integrity": "sha512-UfoeMA6fIJ8wTYFEUjelnaGI67v6+N7qXJEvQuIGa99l4xsCruSYOVSQ0uPANn4dAzm8lkYPaKLrrijLq7x23w==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"hasown": "^2.0.2"
			},
			"engines": {
				"node": ">= 0.4"
			},
			"funding": {
				"url": "https://github.com/sponsors/ljharb"
			}
		},
		"node_modules/is-extglob": {
			"version": "2.1.1",
			"resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
			"integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/is-fullwidth-code-point": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
			"integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=8"
			}
		},
		"node_modules/is-glob": {
			"version": "4.0.3",
			"resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
			"integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"is-extglob": "^2.1.1"
			},
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/is-number": {
			"version": "7.0.0",
			"resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
			"integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=0.12.0"
			}
		},
		"node_modules/is-potential-custom-element-name": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/is-potential-custom-element-name/-/is-potential-custom-element-name-1.0.1.tgz",
			"integrity": "sha512-bCYeRA2rVibKZd+s2625gGnGF/t7DSqDs4dP7CrLA1m7jKWz6pps0LpYLJN8Q64HtmPKJ1hrN3nzPNKFEKOUiQ==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/is-reference": {
			"version": "3.0.3",
			"resolved": "https://registry.npmjs.org/is-reference/-/is-reference-3.0.3.tgz",
			"integrity": "sha512-ixkJoqQvAP88E6wLydLGGqCJsrFUnqoH6HnaczB8XmDH1oaWU+xxdptvikTgaEhtZ53Ky6YXiBuUI2WXLMCwjw==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@types/estree": "^1.0.6"
			}
		},
		"node_modules/isexe": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
			"integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
			"dev": true,
			"license": "ISC"
		},
		"node_modules/jackspeak": {
			"version": "3.4.3",
			"resolved": "https://registry.npmjs.org/jackspeak/-/jackspeak-3.4.3.tgz",
			"integrity": "sha512-OGlZQpz2yfahA/Rd1Y8Cd9SIEsqvXkLVoSw/cgwhnhFMDbsQFeZYoJJ7bIZBS9BcamUW96asq/npPWugM+RQBw==",
			"dev": true,
			"license": "BlueOak-1.0.0",
			"dependencies": {
				"@isaacs/cliui": "^8.0.2"
			},
			"funding": {
				"url": "https://github.com/sponsors/isaacs"
			},
			"optionalDependencies": {
				"@pkgjs/parseargs": "^0.11.0"
			}
		},
		"node_modules/jiti": {
			"version": "2.4.2",
			"resolved": "https://registry.npmjs.org/jiti/-/jiti-2.4.2.tgz",
			"integrity": "sha512-rg9zJN+G4n2nfJl5MW3BMygZX56zKPNVEYYqq7adpmMh4Jn2QNEwhvQlFy6jPVdcod7txZtKHWnyZiA3a0zP7A==",
			"dev": true,
			"license": "MIT",
			"optional": true,
			"peer": true,
			"bin": {
				"jiti": "lib/jiti-cli.mjs"
			}
		},
		"node_modules/js-tokens": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
			"integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/js-yaml": {
			"version": "4.1.0",
			"resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz",
			"integrity": "sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"argparse": "^2.0.1"
			},
			"bin": {
				"js-yaml": "bin/js-yaml.js"
			}
		},
		"node_modules/jsdom": {
			"version": "26.1.0",
			"resolved": "https://registry.npmjs.org/jsdom/-/jsdom-26.1.0.tgz",
			"integrity": "sha512-Cvc9WUhxSMEo4McES3P7oK3QaXldCfNWp7pl2NNeiIFlCoLr3kfq9kb1fxftiwk1FLV7CvpvDfonxtzUDeSOPg==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"cssstyle": "^4.2.1",
				"data-urls": "^5.0.0",
				"decimal.js": "^10.5.0",
				"html-encoding-sniffer": "^4.0.0",
				"http-proxy-agent": "^7.0.2",
				"https-proxy-agent": "^7.0.6",
				"is-potential-custom-element-name": "^1.0.1",
				"nwsapi": "^2.2.16",
				"parse5": "^7.2.1",
				"rrweb-cssom": "^0.8.0",
				"saxes": "^6.0.0",
				"symbol-tree": "^3.2.4",
				"tough-cookie": "^5.1.1",
				"w3c-xmlserializer": "^5.0.0",
				"webidl-conversions": "^7.0.0",
				"whatwg-encoding": "^3.1.1",
				"whatwg-mimetype": "^4.0.0",
				"whatwg-url": "^14.1.1",
				"ws": "^8.18.0",
				"xml-name-validator": "^5.0.0"
			},
			"engines": {
				"node": ">=18"
			},
			"peerDependencies": {
				"canvas": "^3.0.0"
			},
			"peerDependenciesMeta": {
				"canvas": {
					"optional": true
				}
			}
		},
		"node_modules/json-buffer": {
			"version": "3.0.1",
			"resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz",
			"integrity": "sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/json-schema-traverse": {
			"version": "0.4.1",
			"resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
			"integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/json-stable-stringify-without-jsonify": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz",
			"integrity": "sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/keyv": {
			"version": "4.5.4",
			"resolved": "https://registry.npmjs.org/keyv/-/keyv-4.5.4.tgz",
			"integrity": "sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"json-buffer": "3.0.1"
			}
		},
		"node_modules/kleur": {
			"version": "4.1.5",
			"resolved": "https://registry.npmjs.org/kleur/-/kleur-4.1.5.tgz",
			"integrity": "sha512-o+NO+8WrRiQEE4/7nwRJhN1HWpVmJm511pBHUxPLtp0BUISzlBplORYSmTclCnJvQq2tKu/sgl3xVpkc7ZWuQQ==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=6"
			}
		},
		"node_modules/known-css-properties": {
			"version": "0.36.0",
			"resolved": "https://registry.npmjs.org/known-css-properties/-/known-css-properties-0.36.0.tgz",
			"integrity": "sha512-A+9jP+IUmuQsNdsLdcg6Yt7voiMF/D4K83ew0OpJtpu+l34ef7LaohWV0Rc6KNvzw6ZDizkqfyB5JznZnzuKQA==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/levn": {
			"version": "0.4.1",
			"resolved": "https://registry.npmjs.org/levn/-/levn-0.4.1.tgz",
			"integrity": "sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"prelude-ls": "^1.2.1",
				"type-check": "~0.4.0"
			},
			"engines": {
				"node": ">= 0.8.0"
			}
		},
		"node_modules/lightningcss": {
			"version": "1.30.1",
			"resolved": "https://registry.npmjs.org/lightningcss/-/lightningcss-1.30.1.tgz",
			"integrity": "sha512-xi6IyHML+c9+Q3W0S4fCQJOym42pyurFiJUHEcEyHS0CeKzia4yZDEsLlqOFykxOdHpNy0NmvVO31vcSqAxJCg==",
			"dev": true,
			"license": "MPL-2.0",
			"optional": true,
			"peer": true,
			"dependencies": {
				"detect-libc": "^2.0.3"
			},
			"engines": {
				"node": ">= 12.0.0"
			},
			"funding": {
				"type": "opencollective",
				"url": "https://opencollective.com/parcel"
			},
			"optionalDependencies": {
				"lightningcss-darwin-arm64": "1.30.1",
				"lightningcss-darwin-x64": "1.30.1",
				"lightningcss-freebsd-x64": "1.30.1",
				"lightningcss-linux-arm-gnueabihf": "1.30.1",
				"lightningcss-linux-arm64-gnu": "1.30.1",
				"lightningcss-linux-arm64-musl": "1.30.1",
				"lightningcss-linux-x64-gnu": "1.30.1",
				"lightningcss-linux-x64-musl": "1.30.1",
				"lightningcss-win32-arm64-msvc": "1.30.1",
				"lightningcss-win32-x64-msvc": "1.30.1"
			}
		},
		"node_modules/lightningcss-darwin-arm64": {
			"version": "1.30.1",
			"resolved": "https://registry.npmjs.org/lightningcss-darwin-arm64/-/lightningcss-darwin-arm64-1.30.1.tgz",
			"integrity": "sha512-c8JK7hyE65X1MHMN+Viq9n11RRC7hgin3HhYKhrMyaXflk5GVplZ60IxyoVtzILeKr+xAJwg6zK6sjTBJ0FKYQ==",
			"cpu": [
				"arm64"
			],
			"dev": true,
			"license": "MPL-2.0",
			"optional": true,
			"os": [
				"darwin"
			],
			"peer": true,
			"engines": {
				"node": ">= 12.0.0"
			},
			"funding": {
				"type": "opencollective",
				"url": "https://opencollective.com/parcel"
			}
		},
		"node_modules/lightningcss-darwin-x64": {
			"version": "1.30.1",
			"resolved": "https://registry.npmjs.org/lightningcss-darwin-x64/-/lightningcss-darwin-x64-1.30.1.tgz",
			"integrity": "sha512-k1EvjakfumAQoTfcXUcHQZhSpLlkAuEkdMBsI/ivWw9hL+7FtilQc0Cy3hrx0AAQrVtQAbMI7YjCgYgvn37PzA==",
			"cpu": [
				"x64"
			],
			"dev": true,
			"license": "MPL-2.0",
			"optional": true,
			"os": [
				"darwin"
			],
			"peer": true,
			"engines": {
				"node": ">= 12.0.0"
			},
			"funding": {
				"type": "opencollective",
				"url": "https://opencollective.com/parcel"
			}
		},
		"node_modules/lightningcss-freebsd-x64": {
			"version": "1.30.1",
			"resolved": "https://registry.npmjs.org/lightningcss-freebsd-x64/-/lightningcss-freebsd-x64-1.30.1.tgz",
			"integrity": "sha512-kmW6UGCGg2PcyUE59K5r0kWfKPAVy4SltVeut+umLCFoJ53RdCUWxcRDzO1eTaxf/7Q2H7LTquFHPL5R+Gjyig==",
			"cpu": [
				"x64"
			],
			"dev": true,
			"license": "MPL-2.0",
			"optional": true,
			"os": [
				"freebsd"
			],
			"peer": true,
			"engines": {
				"node": ">= 12.0.0"
			},
			"funding": {
				"type": "opencollective",
				"url": "https://opencollective.com/parcel"
			}
		},
		"node_modules/lightningcss-linux-arm-gnueabihf": {
			"version": "1.30.1",
			"resolved": "https://registry.npmjs.org/lightningcss-linux-arm-gnueabihf/-/lightningcss-linux-arm-gnueabihf-1.30.1.tgz",
			"integrity": "sha512-MjxUShl1v8pit+6D/zSPq9S9dQ2NPFSQwGvxBCYaBYLPlCWuPh9/t1MRS8iUaR8i+a6w7aps+B4N0S1TYP/R+Q==",
			"cpu": [
				"arm"
			],
			"dev": true,
			"license": "MPL-2.0",
			"optional": true,
			"os": [
				"linux"
			],
			"peer": true,
			"engines": {
				"node": ">= 12.0.0"
			},
			"funding": {
				"type": "opencollective",
				"url": "https://opencollective.com/parcel"
			}
		},
		"node_modules/lightningcss-linux-arm64-gnu": {
			"version": "1.30.1",
			"resolved": "https://registry.npmjs.org/lightningcss-linux-arm64-gnu/-/lightningcss-linux-arm64-gnu-1.30.1.tgz",
			"integrity": "sha512-gB72maP8rmrKsnKYy8XUuXi/4OctJiuQjcuqWNlJQ6jZiWqtPvqFziskH3hnajfvKB27ynbVCucKSm2rkQp4Bw==",
			"cpu": [
				"arm64"
			],
			"dev": true,
			"license": "MPL-2.0",
			"optional": true,
			"os": [
				"linux"
			],
			"peer": true,
			"engines": {
				"node": ">= 12.0.0"
			},
			"funding": {
				"type": "opencollective",
				"url": "https://opencollective.com/parcel"
			}
		},
		"node_modules/lightningcss-linux-arm64-musl": {
			"version": "1.30.1",
			"resolved": "https://registry.npmjs.org/lightningcss-linux-arm64-musl/-/lightningcss-linux-arm64-musl-1.30.1.tgz",
			"integrity": "sha512-jmUQVx4331m6LIX+0wUhBbmMX7TCfjF5FoOH6SD1CttzuYlGNVpA7QnrmLxrsub43ClTINfGSYyHe2HWeLl5CQ==",
			"cpu": [
				"arm64"
			],
			"dev": true,
			"license": "MPL-2.0",
			"optional": true,
			"os": [
				"linux"
			],
			"peer": true,
			"engines": {
				"node": ">= 12.0.0"
			},
			"funding": {
				"type": "opencollective",
				"url": "https://opencollective.com/parcel"
			}
		},
		"node_modules/lightningcss-linux-x64-gnu": {
			"version": "1.30.1",
			"resolved": "https://registry.npmjs.org/lightningcss-linux-x64-gnu/-/lightningcss-linux-x64-gnu-1.30.1.tgz",
			"integrity": "sha512-piWx3z4wN8J8z3+O5kO74+yr6ze/dKmPnI7vLqfSqI8bccaTGY5xiSGVIJBDd5K5BHlvVLpUB3S2YCfelyJ1bw==",
			"cpu": [
				"x64"
			],
			"dev": true,
			"license": "MPL-2.0",
			"optional": true,
			"os": [
				"linux"
			],
			"peer": true,
			"engines": {
				"node": ">= 12.0.0"
			},
			"funding": {
				"type": "opencollective",
				"url": "https://opencollective.com/parcel"
			}
		},
		"node_modules/lightningcss-linux-x64-musl": {
			"version": "1.30.1",
			"resolved": "https://registry.npmjs.org/lightningcss-linux-x64-musl/-/lightningcss-linux-x64-musl-1.30.1.tgz",
			"integrity": "sha512-rRomAK7eIkL+tHY0YPxbc5Dra2gXlI63HL+v1Pdi1a3sC+tJTcFrHX+E86sulgAXeI7rSzDYhPSeHHjqFhqfeQ==",
			"cpu": [
				"x64"
			],
			"dev": true,
			"license": "MPL-2.0",
			"optional": true,
			"os": [
				"linux"
			],
			"peer": true,
			"engines": {
				"node": ">= 12.0.0"
			},
			"funding": {
				"type": "opencollective",
				"url": "https://opencollective.com/parcel"
			}
		},
		"node_modules/lightningcss-win32-arm64-msvc": {
			"version": "1.30.1",
			"resolved": "https://registry.npmjs.org/lightningcss-win32-arm64-msvc/-/lightningcss-win32-arm64-msvc-1.30.1.tgz",
			"integrity": "sha512-mSL4rqPi4iXq5YVqzSsJgMVFENoa4nGTT/GjO2c0Yl9OuQfPsIfncvLrEW6RbbB24WtZ3xP/2CCmI3tNkNV4oA==",
			"cpu": [
				"arm64"
			],
			"dev": true,
			"license": "MPL-2.0",
			"optional": true,
			"os": [
				"win32"
			],
			"peer": true,
			"engines": {
				"node": ">= 12.0.0"
			},
			"funding": {
				"type": "opencollective",
				"url": "https://opencollective.com/parcel"
			}
		},
		"node_modules/lightningcss-win32-x64-msvc": {
			"version": "1.30.1",
			"resolved": "https://registry.npmjs.org/lightningcss-win32-x64-msvc/-/lightningcss-win32-x64-msvc-1.30.1.tgz",
			"integrity": "sha512-PVqXh48wh4T53F/1CCu8PIPCxLzWyCnn/9T5W1Jpmdy5h9Cwd+0YQS6/LwhHXSafuc61/xg9Lv5OrCby6a++jg==",
			"cpu": [
				"x64"
			],
			"dev": true,
			"license": "MPL-2.0",
			"optional": true,
			"os": [
				"win32"
			],
			"peer": true,
			"engines": {
				"node": ">= 12.0.0"
			},
			"funding": {
				"type": "opencollective",
				"url": "https://opencollective.com/parcel"
			}
		},
		"node_modules/lilconfig": {
			"version": "2.1.0",
			"resolved": "https://registry.npmjs.org/lilconfig/-/lilconfig-2.1.0.tgz",
			"integrity": "sha512-utWOt/GHzuUxnLKxB6dk81RoOeoNeHgbrXiuGk4yyF5qlRz+iIVWu56E2fqGHFrXz0QNUhLB/8nKqvRH66JKGQ==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=10"
			}
		},
		"node_modules/lines-and-columns": {
			"version": "1.2.4",
			"resolved": "https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.2.4.tgz",
			"integrity": "sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/locate-character": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/locate-character/-/locate-character-3.0.0.tgz",
			"integrity": "sha512-SW13ws7BjaeJ6p7Q6CO2nchbYEc3X3J6WrmTTDto7yMPqVSZTUyY5Tjbid+Ab8gLnATtygYtiDIJGQRRn2ZOiA==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/locate-path": {
			"version": "6.0.0",
			"resolved": "https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz",
			"integrity": "sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"p-locate": "^5.0.0"
			},
			"engines": {
				"node": ">=10"
			},
			"funding": {
				"url": "https://github.com/sponsors/sindresorhus"
			}
		},
		"node_modules/lodash": {
			"version": "4.17.21",
			"resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz",
			"integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/lodash.castarray": {
			"version": "4.4.0",
			"resolved": "https://registry.npmjs.org/lodash.castarray/-/lodash.castarray-4.4.0.tgz",
			"integrity": "sha512-aVx8ztPv7/2ULbArGJ2Y42bG1mEQ5mGjpdvrbJcJFU3TbYybe+QlLS4pst9zV52ymy2in1KpFPiZnAOATxD4+Q==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/lodash.isplainobject": {
			"version": "4.0.6",
			"resolved": "https://registry.npmjs.org/lodash.isplainobject/-/lodash.isplainobject-4.0.6.tgz",
			"integrity": "sha512-oSXzaWypCMHkPC3NvBEaPHf0KsA5mvPrOPgQWDsbg8n7orZ290M0BmC/jgRZ4vcJ6DTAhjrsSYgdsW/F+MFOBA==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/lodash.merge": {
			"version": "4.6.2",
			"resolved": "https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz",
			"integrity": "sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/loupe": {
			"version": "3.1.3",
			"resolved": "https://registry.npmjs.org/loupe/-/loupe-3.1.3.tgz",
			"integrity": "sha512-kkIp7XSkP78ZxJEsSxW3712C6teJVoeHHwgo9zJ380de7IYyJ2ISlxojcH2pC5OFLewESmnRi/+XCDIEEVyoug==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/lru-cache": {
			"version": "10.4.3",
			"resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-10.4.3.tgz",
			"integrity": "sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==",
			"dev": true,
			"license": "ISC"
		},
		"node_modules/lz-string": {
			"version": "1.5.0",
			"resolved": "https://registry.npmjs.org/lz-string/-/lz-string-1.5.0.tgz",
			"integrity": "sha512-h5bgJWpxJNswbU7qCrV0tIKQCaS3blPDrqKWx+QxzuzL1zGUzij9XCWLrSLsJPu5t+eWA/ycetzYAO5IOMcWAQ==",
			"dev": true,
			"license": "MIT",
			"bin": {
				"lz-string": "bin/bin.js"
			}
		},
		"node_modules/magic-string": {
			"version": "0.30.17",
			"resolved": "https://registry.npmjs.org/magic-string/-/magic-string-0.30.17.tgz",
			"integrity": "sha512-sNPKHvyjVf7gyjwS4xGTaW/mCnF8wnjtifKBEhxfZ7E/S8tQ0rssrwGNn6q8JH/ohItJfSQp9mBtQYuTlH5QnA==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@jridgewell/sourcemap-codec": "^1.5.0"
			}
		},
		"node_modules/merge2": {
			"version": "1.4.1",
			"resolved": "https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz",
			"integrity": "sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">= 8"
			}
		},
		"node_modules/micromatch": {
			"version": "4.0.8",
			"resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz",
			"integrity": "sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"braces": "^3.0.3",
				"picomatch": "^2.3.1"
			},
			"engines": {
				"node": ">=8.6"
			}
		},
		"node_modules/micromatch/node_modules/picomatch": {
			"version": "2.3.1",
			"resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
			"integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=8.6"
			},
			"funding": {
				"url": "https://github.com/sponsors/jonschlinkert"
			}
		},
		"node_modules/min-indent": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/min-indent/-/min-indent-1.0.1.tgz",
			"integrity": "sha512-I9jwMn07Sy/IwOj3zVkVik2JTvgpaykDZEigL6Rx6N9LbMywwUSMtxET+7lVoDLLd3O3IXwJwvuuns8UB/HeAg==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=4"
			}
		},
		"node_modules/mini-svg-data-uri": {
			"version": "1.4.4",
			"resolved": "https://registry.npmjs.org/mini-svg-data-uri/-/mini-svg-data-uri-1.4.4.tgz",
			"integrity": "sha512-r9deDe9p5FJUPZAk3A59wGH7Ii9YrjjWw0jmw/liSbHl2CHiyXj6FcDXDu2K3TjVAXqiJdaw3xxwlZZr9E6nHg==",
			"dev": true,
			"license": "MIT",
			"bin": {
				"mini-svg-data-uri": "cli.js"
			}
		},
		"node_modules/minimatch": {
			"version": "3.1.2",
			"resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
			"integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
			"dev": true,
			"license": "ISC",
			"dependencies": {
				"brace-expansion": "^1.1.7"
			},
			"engines": {
				"node": "*"
			}
		},
		"node_modules/minipass": {
			"version": "7.1.2",
			"resolved": "https://registry.npmjs.org/minipass/-/minipass-7.1.2.tgz",
			"integrity": "sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==",
			"dev": true,
			"license": "ISC",
			"engines": {
				"node": ">=16 || 14 >=14.17"
			}
		},
		"node_modules/mri": {
			"version": "1.2.0",
			"resolved": "https://registry.npmjs.org/mri/-/mri-1.2.0.tgz",
			"integrity": "sha512-tzzskb3bG8LvYGFF/mDTpq3jpI6Q9wc3LEmBaghu+DdCssd1FakN7Bc0hVNmEyGq1bq3RgfkCb3cmQLpNPOroA==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=4"
			}
		},
		"node_modules/mrmime": {
			"version": "2.0.1",
			"resolved": "https://registry.npmjs.org/mrmime/-/mrmime-2.0.1.tgz",
			"integrity": "sha512-Y3wQdFg2Va6etvQ5I82yUhGdsKrcYox6p7FfL1LbK2J4V01F9TGlepTIhnK24t7koZibmg82KGglhA1XK5IsLQ==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=10"
			}
		},
		"node_modules/ms": {
			"version": "2.1.3",
			"resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
			"integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/mz": {
			"version": "2.7.0",
			"resolved": "https://registry.npmjs.org/mz/-/mz-2.7.0.tgz",
			"integrity": "sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"any-promise": "^1.0.0",
				"object-assign": "^4.0.1",
				"thenify-all": "^1.0.0"
			}
		},
		"node_modules/nanoid": {
			"version": "3.3.11",
			"resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.11.tgz",
			"integrity": "sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==",
			"dev": true,
			"funding": [
				{
					"type": "github",
					"url": "https://github.com/sponsors/ai"
				}
			],
			"license": "MIT",
			"bin": {
				"nanoid": "bin/nanoid.cjs"
			},
			"engines": {
				"node": "^10 || ^12 || ^13.7 || ^14 || >=15.0.1"
			}
		},
		"node_modules/natural-compare": {
			"version": "1.4.0",
			"resolved": "https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz",
			"integrity": "sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/node-releases": {
			"version": "2.0.19",
			"resolved": "https://registry.npmjs.org/node-releases/-/node-releases-2.0.19.tgz",
			"integrity": "sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/normalize-path": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
			"integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/normalize-range": {
			"version": "0.1.2",
			"resolved": "https://registry.npmjs.org/normalize-range/-/normalize-range-0.1.2.tgz",
			"integrity": "sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/nwsapi": {
			"version": "2.2.20",
			"resolved": "https://registry.npmjs.org/nwsapi/-/nwsapi-2.2.20.tgz",
			"integrity": "sha512-/ieB+mDe4MrrKMT8z+mQL8klXydZWGR5Dowt4RAGKbJ3kIGEx3X4ljUo+6V73IXtUPWgfOlU5B9MlGxFO5T+cA==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/object-assign": {
			"version": "4.1.1",
			"resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
			"integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/object-hash": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/object-hash/-/object-hash-3.0.0.tgz",
			"integrity": "sha512-RSn9F68PjH9HqtltsSnqYC1XXoWe9Bju5+213R98cNGttag9q9yAOTzdbsqvIa7aNm5WffBZFpWYr2aWrklWAw==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">= 6"
			}
		},
		"node_modules/optionator": {
			"version": "0.9.4",
			"resolved": "https://registry.npmjs.org/optionator/-/optionator-0.9.4.tgz",
			"integrity": "sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"deep-is": "^0.1.3",
				"fast-levenshtein": "^2.0.6",
				"levn": "^0.4.1",
				"prelude-ls": "^1.2.1",
				"type-check": "^0.4.0",
				"word-wrap": "^1.2.5"
			},
			"engines": {
				"node": ">= 0.8.0"
			}
		},
		"node_modules/p-limit": {
			"version": "3.1.0",
			"resolved": "https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz",
			"integrity": "sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"yocto-queue": "^0.1.0"
			},
			"engines": {
				"node": ">=10"
			},
			"funding": {
				"url": "https://github.com/sponsors/sindresorhus"
			}
		},
		"node_modules/p-locate": {
			"version": "5.0.0",
			"resolved": "https://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgz",
			"integrity": "sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"p-limit": "^3.0.2"
			},
			"engines": {
				"node": ">=10"
			},
			"funding": {
				"url": "https://github.com/sponsors/sindresorhus"
			}
		},
		"node_modules/package-json-from-dist": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/package-json-from-dist/-/package-json-from-dist-1.0.1.tgz",
			"integrity": "sha512-UEZIS3/by4OC8vL3P2dTXRETpebLI2NiI5vIrjaD/5UtrkFX/tNbwjTSRAGC/+7CAo2pIcBaRgWmcBBHcsaCIw==",
			"dev": true,
			"license": "BlueOak-1.0.0"
		},
		"node_modules/parent-module": {
			"version": "1.0.1",
			"resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",
			"integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"callsites": "^3.0.0"
			},
			"engines": {
				"node": ">=6"
			}
		},
		"node_modules/parse5": {
			"version": "7.3.0",
			"resolved": "https://registry.npmjs.org/parse5/-/parse5-7.3.0.tgz",
			"integrity": "sha512-IInvU7fabl34qmi9gY8XOVxhYyMyuH2xUNpb2q8/Y+7552KlejkRvqvD19nMoUW/uQGGbqNpA6Tufu5FL5BZgw==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"entities": "^6.0.0"
			},
			"funding": {
				"url": "https://github.com/inikulin/parse5?sponsor=1"
			}
		},
		"node_modules/path-exists": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
			"integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=8"
			}
		},
		"node_modules/path-key": {
			"version": "3.1.1",
			"resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
			"integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=8"
			}
		},
		"node_modules/path-parse": {
			"version": "1.0.7",
			"resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
			"integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/path-scurry": {
			"version": "1.11.1",
			"resolved": "https://registry.npmjs.org/path-scurry/-/path-scurry-1.11.1.tgz",
			"integrity": "sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==",
			"dev": true,
			"license": "BlueOak-1.0.0",
			"dependencies": {
				"lru-cache": "^10.2.0",
				"minipass": "^5.0.0 || ^6.0.2 || ^7.0.0"
			},
			"engines": {
				"node": ">=16 || 14 >=14.18"
			},
			"funding": {
				"url": "https://github.com/sponsors/isaacs"
			}
		},
		"node_modules/pathe": {
			"version": "2.0.3",
			"resolved": "https://registry.npmjs.org/pathe/-/pathe-2.0.3.tgz",
			"integrity": "sha512-WUjGcAqP1gQacoQe+OBJsFA7Ld4DyXuUIjZ5cc75cLHvJ7dtNsTugphxIADwspS+AraAUePCKrSVtPLFj/F88w==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/pathval": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/pathval/-/pathval-2.0.0.tgz",
			"integrity": "sha512-vE7JKRyES09KiunauX7nd2Q9/L7lhok4smP9RZTDeD4MVs72Dp2qNFVz39Nz5a0FVEW0BJR6C0DYrq6unoziZA==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">= 14.16"
			}
		},
		"node_modules/picocolors": {
			"version": "1.1.1",
			"resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz",
			"integrity": "sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==",
			"dev": true,
			"license": "ISC"
		},
		"node_modules/picomatch": {
			"version": "4.0.2",
			"resolved": "https://registry.npmjs.org/picomatch/-/picomatch-4.0.2.tgz",
			"integrity": "sha512-M7BAV6Rlcy5u+m6oPhAPFgJTzAioX/6B0DxyvDlo9l8+T3nLKbrczg2WLUyzd45L8RqfUMyGPzekbMvX2Ldkwg==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=12"
			},
			"funding": {
				"url": "https://github.com/sponsors/jonschlinkert"
			}
		},
		"node_modules/pify": {
			"version": "2.3.0",
			"resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
			"integrity": "sha512-udgsAY+fTnvv7kI7aaxbqwWNb0AHiB0qBO89PZKPkoTmGOgdbrHDKD+0B2X4uTfJ/FT1R09r9gTsjUjNJotuog==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/pirates": {
			"version": "4.0.7",
			"resolved": "https://registry.npmjs.org/pirates/-/pirates-4.0.7.tgz",
			"integrity": "sha512-TfySrs/5nm8fQJDcBDuUng3VOUKsd7S+zqvbOTiGXHfxX4wK31ard+hoNuvkicM/2YFzlpDgABOevKSsB4G/FA==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">= 6"
			}
		},
		"node_modules/postcss": {
			"version": "8.4.33",
			"resolved": "https://registry.npmjs.org/postcss/-/postcss-8.4.33.tgz",
			"integrity": "sha512-Kkpbhhdjw2qQs2O2DGX+8m5OVqEcbB9HRBvuYM9pgrjEFUg30A9LmXNlTAUj4S9kgtGyrMbTzVjH7E+s5Re2yg==",
			"dev": true,
			"funding": [
				{
					"type": "opencollective",
					"url": "https://opencollective.com/postcss/"
				},
				{
					"type": "tidelift",
					"url": "https://tidelift.com/funding/github/npm/postcss"
				},
				{
					"type": "github",
					"url": "https://github.com/sponsors/ai"
				}
			],
			"license": "MIT",
			"dependencies": {
				"nanoid": "^3.3.7",
				"picocolors": "^1.0.0",
				"source-map-js": "^1.0.2"
			},
			"engines": {
				"node": "^10 || ^12 || >=14"
			}
		},
		"node_modules/postcss-import": {
			"version": "15.1.0",
			"resolved": "https://registry.npmjs.org/postcss-import/-/postcss-import-15.1.0.tgz",
			"integrity": "sha512-hpr+J05B2FVYUAXHeK1YyI267J/dDDhMU6B6civm8hSY1jYJnBXxzKDKDswzJmtLHryrjhnDjqqp/49t8FALew==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"postcss-value-parser": "^4.0.0",
				"read-cache": "^1.0.0",
				"resolve": "^1.1.7"
			},
			"engines": {
				"node": ">=14.0.0"
			},
			"peerDependencies": {
				"postcss": "^8.0.0"
			}
		},
		"node_modules/postcss-js": {
			"version": "4.0.1",
			"resolved": "https://registry.npmjs.org/postcss-js/-/postcss-js-4.0.1.tgz",
			"integrity": "sha512-dDLF8pEO191hJMtlHFPRa8xsizHaM82MLfNkUHdUtVEV3tgTp5oj+8qbEqYM57SLfc74KSbw//4SeJma2LRVIw==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"camelcase-css": "^2.0.1"
			},
			"engines": {
				"node": "^12 || ^14 || >= 16"
			},
			"funding": {
				"type": "opencollective",
				"url": "https://opencollective.com/postcss/"
			},
			"peerDependencies": {
				"postcss": "^8.4.21"
			}
		},
		"node_modules/postcss-load-config": {
			"version": "3.1.4",
			"resolved": "https://registry.npmjs.org/postcss-load-config/-/postcss-load-config-3.1.4.tgz",
			"integrity": "sha512-6DiM4E7v4coTE4uzA8U//WhtPwyhiim3eyjEMFCnUpzbrkK9wJHgKDT2mR+HbtSrd/NubVaYTOpSpjUl8NQeRg==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"lilconfig": "^2.0.5",
				"yaml": "^1.10.2"
			},
			"engines": {
				"node": ">= 10"
			},
			"funding": {
				"type": "opencollective",
				"url": "https://opencollective.com/postcss/"
			},
			"peerDependencies": {
				"postcss": ">=8.0.9",
				"ts-node": ">=9.0.0"
			},
			"peerDependenciesMeta": {
				"postcss": {
					"optional": true
				},
				"ts-node": {
					"optional": true
				}
			}
		},
		"node_modules/postcss-load-config/node_modules/yaml": {
			"version": "1.10.2",
			"resolved": "https://registry.npmjs.org/yaml/-/yaml-1.10.2.tgz",
			"integrity": "sha512-r3vXyErRCYJ7wg28yvBY5VSoAF8ZvlcW9/BwUzEtUsjvX/DKs24dIkuwjtuprwJJHsbyUbLApepYTR1BN4uHrg==",
			"dev": true,
			"license": "ISC",
			"engines": {
				"node": ">= 6"
			}
		},
		"node_modules/postcss-nested": {
			"version": "6.2.0",
			"resolved": "https://registry.npmjs.org/postcss-nested/-/postcss-nested-6.2.0.tgz",
			"integrity": "sha512-HQbt28KulC5AJzG+cZtj9kvKB93CFCdLvog1WFLf1D+xmMvPGlBstkpTEZfK5+AN9hfJocyBFCNiqyS48bpgzQ==",
			"dev": true,
			"funding": [
				{
					"type": "opencollective",
					"url": "https://opencollective.com/postcss/"
				},
				{
					"type": "github",
					"url": "https://github.com/sponsors/ai"
				}
			],
			"license": "MIT",
			"dependencies": {
				"postcss-selector-parser": "^6.1.1"
			},
			"engines": {
				"node": ">=12.0"
			},
			"peerDependencies": {
				"postcss": "^8.2.14"
			}
		},
		"node_modules/postcss-nested/node_modules/postcss-selector-parser": {
			"version": "6.1.2",
			"resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.1.2.tgz",
			"integrity": "sha512-Q8qQfPiZ+THO/3ZrOrO0cJJKfpYCagtMUkXbnEfmgUjwXg6z/WBeOyS9APBBPCTSiDV+s4SwQGu8yFsiMRIudg==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"cssesc": "^3.0.0",
				"util-deprecate": "^1.0.2"
			},
			"engines": {
				"node": ">=4"
			}
		},
		"node_modules/postcss-safe-parser": {
			"version": "7.0.1",
			"resolved": "https://registry.npmjs.org/postcss-safe-parser/-/postcss-safe-parser-7.0.1.tgz",
			"integrity": "sha512-0AioNCJZ2DPYz5ABT6bddIqlhgwhpHZ/l65YAYo0BCIn0xiDpsnTHz0gnoTGk0OXZW0JRs+cDwL8u/teRdz+8A==",
			"dev": true,
			"funding": [
				{
					"type": "opencollective",
					"url": "https://opencollective.com/postcss/"
				},
				{
					"type": "tidelift",
					"url": "https://tidelift.com/funding/github/npm/postcss-safe-parser"
				},
				{
					"type": "github",
					"url": "https://github.com/sponsors/ai"
				}
			],
			"license": "MIT",
			"engines": {
				"node": ">=18.0"
			},
			"peerDependencies": {
				"postcss": "^8.4.31"
			}
		},
		"node_modules/postcss-scss": {
			"version": "4.0.9",
			"resolved": "https://registry.npmjs.org/postcss-scss/-/postcss-scss-4.0.9.tgz",
			"integrity": "sha512-AjKOeiwAitL/MXxQW2DliT28EKukvvbEWx3LBmJIRN8KfBGZbRTxNYW0kSqi1COiTZ57nZ9NW06S6ux//N1c9A==",
			"dev": true,
			"funding": [
				{
					"type": "opencollective",
					"url": "https://opencollective.com/postcss/"
				},
				{
					"type": "tidelift",
					"url": "https://tidelift.com/funding/github/npm/postcss-scss"
				},
				{
					"type": "github",
					"url": "https://github.com/sponsors/ai"
				}
			],
			"license": "MIT",
			"engines": {
				"node": ">=12.0"
			},
			"peerDependencies": {
				"postcss": "^8.4.29"
			}
		},
		"node_modules/postcss-selector-parser": {
			"version": "6.0.10",
			"resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.0.10.tgz",
			"integrity": "sha512-IQ7TZdoaqbT+LCpShg46jnZVlhWD2w6iQYAcYXfHARZ7X1t/UGhhceQDs5X0cGqKvYlHNOuv7Oa1xmb0oQuA3w==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"cssesc": "^3.0.0",
				"util-deprecate": "^1.0.2"
			},
			"engines": {
				"node": ">=4"
			}
		},
		"node_modules/postcss-value-parser": {
			"version": "4.2.0",
			"resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-4.2.0.tgz",
			"integrity": "sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/prelude-ls": {
			"version": "1.2.1",
			"resolved": "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz",
			"integrity": "sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">= 0.8.0"
			}
		},
		"node_modules/prettier": {
			"version": "3.5.3",
			"resolved": "https://registry.npmjs.org/prettier/-/prettier-3.5.3.tgz",
			"integrity": "sha512-QQtaxnoDJeAkDvDKWCLiwIXkTgRhwYDEQCghU9Z6q03iyek/rxRh/2lC3HB7P8sWT2xC/y5JDctPLBIGzHKbhw==",
			"dev": true,
			"license": "MIT",
			"bin": {
				"prettier": "bin/prettier.cjs"
			},
			"engines": {
				"node": ">=14"
			},
			"funding": {
				"url": "https://github.com/prettier/prettier?sponsor=1"
			}
		},
		"node_modules/prettier-plugin-svelte": {
			"version": "3.4.0",
			"resolved": "https://registry.npmjs.org/prettier-plugin-svelte/-/prettier-plugin-svelte-3.4.0.tgz",
			"integrity": "sha512-pn1ra/0mPObzqoIQn/vUTR3ZZI6UuZ0sHqMK5x2jMLGrs53h0sXhkVuDcrlssHwIMk7FYrMjHBPoUSyyEEDlBQ==",
			"dev": true,
			"license": "MIT",
			"peerDependencies": {
				"prettier": "^3.0.0",
				"svelte": "^3.2.0 || ^4.0.0-next.0 || ^5.0.0-next.0"
			}
		},
		"node_modules/prettier-plugin-tailwindcss": {
			"version": "0.6.12",
			"resolved": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.6.12.tgz",
			"integrity": "sha512-OuTQKoqNwV7RnxTPwXWzOFXy6Jc4z8oeRZYGuMpRyG3WbuR3jjXdQFK8qFBMBx8UHWdHrddARz2fgUenild6aw==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=14.21.3"
			},
			"peerDependencies": {
				"@ianvs/prettier-plugin-sort-imports": "*",
				"@prettier/plugin-pug": "*",
				"@shopify/prettier-plugin-liquid": "*",
				"@trivago/prettier-plugin-sort-imports": "*",
				"@zackad/prettier-plugin-twig": "*",
				"prettier": "^3.0",
				"prettier-plugin-astro": "*",
				"prettier-plugin-css-order": "*",
				"prettier-plugin-import-sort": "*",
				"prettier-plugin-jsdoc": "*",
				"prettier-plugin-marko": "*",
				"prettier-plugin-multiline-arrays": "*",
				"prettier-plugin-organize-attributes": "*",
				"prettier-plugin-organize-imports": "*",
				"prettier-plugin-sort-imports": "*",
				"prettier-plugin-style-order": "*",
				"prettier-plugin-svelte": "*"
			},
			"peerDependenciesMeta": {
				"@ianvs/prettier-plugin-sort-imports": {
					"optional": true
				},
				"@prettier/plugin-pug": {
					"optional": true
				},
				"@shopify/prettier-plugin-liquid": {
					"optional": true
				},
				"@trivago/prettier-plugin-sort-imports": {
					"optional": true
				},
				"@zackad/prettier-plugin-twig": {
					"optional": true
				},
				"prettier-plugin-astro": {
					"optional": true
				},
				"prettier-plugin-css-order": {
					"optional": true
				},
				"prettier-plugin-import-sort": {
					"optional": true
				},
				"prettier-plugin-jsdoc": {
					"optional": true
				},
				"prettier-plugin-marko": {
					"optional": true
				},
				"prettier-plugin-multiline-arrays": {
					"optional": true
				},
				"prettier-plugin-organize-attributes": {
					"optional": true
				},
				"prettier-plugin-organize-imports": {
					"optional": true
				},
				"prettier-plugin-sort-imports": {
					"optional": true
				},
				"prettier-plugin-style-order": {
					"optional": true
				},
				"prettier-plugin-svelte": {
					"optional": true
				}
			}
		},
		"node_modules/pretty-format": {
			"version": "27.5.1",
			"resolved": "https://registry.npmjs.org/pretty-format/-/pretty-format-27.5.1.tgz",
			"integrity": "sha512-Qb1gy5OrP5+zDf2Bvnzdl3jsTf1qXVMazbvCoKhtKqVs4/YK4ozX4gKQJJVyNe+cajNPn0KoC0MC3FUmaHWEmQ==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"ansi-regex": "^5.0.1",
				"ansi-styles": "^5.0.0",
				"react-is": "^17.0.1"
			},
			"engines": {
				"node": "^10.13.0 || ^12.13.0 || ^14.15.0 || >=15.0.0"
			}
		},
		"node_modules/pretty-format/node_modules/ansi-styles": {
			"version": "5.2.0",
			"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz",
			"integrity": "sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=10"
			},
			"funding": {
				"url": "https://github.com/chalk/ansi-styles?sponsor=1"
			}
		},
		"node_modules/punycode": {
			"version": "2.3.1",
			"resolved": "https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz",
			"integrity": "sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=6"
			}
		},
		"node_modules/queue-microtask": {
			"version": "1.2.3",
			"resolved": "https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz",
			"integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==",
			"dev": true,
			"funding": [
				{
					"type": "github",
					"url": "https://github.com/sponsors/feross"
				},
				{
					"type": "patreon",
					"url": "https://www.patreon.com/feross"
				},
				{
					"type": "consulting",
					"url": "https://feross.org/support"
				}
			],
			"license": "MIT"
		},
		"node_modules/react-is": {
			"version": "17.0.2",
			"resolved": "https://registry.npmjs.org/react-is/-/react-is-17.0.2.tgz",
			"integrity": "sha512-w2GsyukL62IJnlaff/nRegPQR94C/XXamvMWmSHRJ4y7Ts/4ocGRmTHvOs8PSE6pB3dWOrD/nueuU5sduBsQ4w==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/read-cache": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/read-cache/-/read-cache-1.0.0.tgz",
			"integrity": "sha512-Owdv/Ft7IjOgm/i0xvNDZ1LrRANRfew4b2prF3OWMQLxLfu3bS8FVhCsrSCMK4lR56Y9ya+AThoTpDCTxCmpRA==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"pify": "^2.3.0"
			}
		},
		"node_modules/readdirp": {
			"version": "4.1.2",
			"resolved": "https://registry.npmjs.org/readdirp/-/readdirp-4.1.2.tgz",
			"integrity": "sha512-GDhwkLfywWL2s6vEjyhri+eXmfH6j1L7JE27WhqLeYzoh/A3DBaYGEj2H/HFZCn/kMfim73FXxEJTw06WtxQwg==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">= 14.18.0"
			},
			"funding": {
				"type": "individual",
				"url": "https://paulmillr.com/funding/"
			}
		},
		"node_modules/redent": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/redent/-/redent-3.0.0.tgz",
			"integrity": "sha512-6tDA8g98We0zd0GvVeMT9arEOnTw9qM03L9cJXaCjrip1OO764RDBLBfrB4cwzNGDj5OA5ioymC9GkizgWJDUg==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"indent-string": "^4.0.0",
				"strip-indent": "^3.0.0"
			},
			"engines": {
				"node": ">=8"
			}
		},
		"node_modules/resolve": {
			"version": "1.22.10",
			"resolved": "https://registry.npmjs.org/resolve/-/resolve-1.22.10.tgz",
			"integrity": "sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"is-core-module": "^2.16.0",
				"path-parse": "^1.0.7",
				"supports-preserve-symlinks-flag": "^1.0.0"
			},
			"bin": {
				"resolve": "bin/resolve"
			},
			"engines": {
				"node": ">= 0.4"
			},
			"funding": {
				"url": "https://github.com/sponsors/ljharb"
			}
		},
		"node_modules/resolve-from": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
			"integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=4"
			}
		},
		"node_modules/reusify": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/reusify/-/reusify-1.1.0.tgz",
			"integrity": "sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"iojs": ">=1.0.0",
				"node": ">=0.10.0"
			}
		},
		"node_modules/rollup": {
			"version": "4.41.1",
			"resolved": "https://registry.npmjs.org/rollup/-/rollup-4.41.1.tgz",
			"integrity": "sha512-cPmwD3FnFv8rKMBc1MxWCwVQFxwf1JEmSX3iQXrRVVG15zerAIXRjMFVWnd5Q5QvgKF7Aj+5ykXFhUl+QGnyOw==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@types/estree": "1.0.7"
			},
			"bin": {
				"rollup": "dist/bin/rollup"
			},
			"engines": {
				"node": ">=18.0.0",
				"npm": ">=8.0.0"
			},
			"optionalDependencies": {
				"@rollup/rollup-android-arm-eabi": "4.41.1",
				"@rollup/rollup-android-arm64": "4.41.1",
				"@rollup/rollup-darwin-arm64": "4.41.1",
				"@rollup/rollup-darwin-x64": "4.41.1",
				"@rollup/rollup-freebsd-arm64": "4.41.1",
				"@rollup/rollup-freebsd-x64": "4.41.1",
				"@rollup/rollup-linux-arm-gnueabihf": "4.41.1",
				"@rollup/rollup-linux-arm-musleabihf": "4.41.1",
				"@rollup/rollup-linux-arm64-gnu": "4.41.1",
				"@rollup/rollup-linux-arm64-musl": "4.41.1",
				"@rollup/rollup-linux-loongarch64-gnu": "4.41.1",
				"@rollup/rollup-linux-powerpc64le-gnu": "4.41.1",
				"@rollup/rollup-linux-riscv64-gnu": "4.41.1",
				"@rollup/rollup-linux-riscv64-musl": "4.41.1",
				"@rollup/rollup-linux-s390x-gnu": "4.41.1",
				"@rollup/rollup-linux-x64-gnu": "4.41.1",
				"@rollup/rollup-linux-x64-musl": "4.41.1",
				"@rollup/rollup-win32-arm64-msvc": "4.41.1",
				"@rollup/rollup-win32-ia32-msvc": "4.41.1",
				"@rollup/rollup-win32-x64-msvc": "4.41.1",
				"fsevents": "~2.3.2"
			}
		},
		"node_modules/rollup/node_modules/@types/estree": {
			"version": "1.0.7",
			"resolved": "https://registry.npmjs.org/@types/estree/-/estree-1.0.7.tgz",
			"integrity": "sha512-w28IoSUCJpidD/TGviZwwMJckNESJZXFu7NBZ5YJ4mEUnNraUn9Pm8HSZm/jDF1pDWYKspWE7oVphigUPRakIQ==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/rrweb-cssom": {
			"version": "0.8.0",
			"resolved": "https://registry.npmjs.org/rrweb-cssom/-/rrweb-cssom-0.8.0.tgz",
			"integrity": "sha512-guoltQEx+9aMf2gDZ0s62EcV8lsXR+0w8915TC3ITdn2YueuNjdAYh/levpU9nFaoChh9RUS5ZdQMrKfVEN9tw==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/run-parallel": {
			"version": "1.2.0",
			"resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz",
			"integrity": "sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==",
			"dev": true,
			"funding": [
				{
					"type": "github",
					"url": "https://github.com/sponsors/feross"
				},
				{
					"type": "patreon",
					"url": "https://www.patreon.com/feross"
				},
				{
					"type": "consulting",
					"url": "https://feross.org/support"
				}
			],
			"license": "MIT",
			"dependencies": {
				"queue-microtask": "^1.2.2"
			}
		},
		"node_modules/sade": {
			"version": "1.8.1",
			"resolved": "https://registry.npmjs.org/sade/-/sade-1.8.1.tgz",
			"integrity": "sha512-xal3CZX1Xlo/k4ApwCFrHVACi9fBqJ7V+mwhBsuf/1IOKbBy098Fex+Wa/5QMubw09pSZ/u8EY8PWgevJsXp1A==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"mri": "^1.1.0"
			},
			"engines": {
				"node": ">=6"
			}
		},
		"node_modules/safer-buffer": {
			"version": "2.1.2",
			"resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
			"integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/saxes": {
			"version": "6.0.0",
			"resolved": "https://registry.npmjs.org/saxes/-/saxes-6.0.0.tgz",
			"integrity": "sha512-xAg7SOnEhrm5zI3puOOKyy1OMcMlIJZYNJY7xLBwSze0UjhPLnWfj2GF2EpT0jmzaJKIWKHLsaSSajf35bcYnA==",
			"dev": true,
			"license": "ISC",
			"dependencies": {
				"xmlchars": "^2.2.0"
			},
			"engines": {
				"node": ">=v12.22.7"
			}
		},
		"node_modules/semver": {
			"version": "7.7.2",
			"resolved": "https://registry.npmjs.org/semver/-/semver-7.7.2.tgz",
			"integrity": "sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==",
			"dev": true,
			"license": "ISC",
			"bin": {
				"semver": "bin/semver.js"
			},
			"engines": {
				"node": ">=10"
			}
		},
		"node_modules/set-cookie-parser": {
			"version": "2.7.1",
			"resolved": "https://registry.npmjs.org/set-cookie-parser/-/set-cookie-parser-2.7.1.tgz",
			"integrity": "sha512-IOc8uWeOZgnb3ptbCURJWNjWUPcO3ZnTTdzsurqERrP6nPyv+paC55vJM0LpOlT2ne+Ix+9+CRG1MNLlyZ4GjQ==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/shebang-command": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
			"integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"shebang-regex": "^3.0.0"
			},
			"engines": {
				"node": ">=8"
			}
		},
		"node_modules/shebang-regex": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
			"integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=8"
			}
		},
		"node_modules/siginfo": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/siginfo/-/siginfo-2.0.0.tgz",
			"integrity": "sha512-ybx0WO1/8bSBLEWXZvEd7gMW3Sn3JFlW3TvX1nREbDLRNQNaeNN8WK0meBwPdAaOI7TtRRRJn/Es1zhrrCHu7g==",
			"dev": true,
			"license": "ISC"
		},
		"node_modules/signal-exit": {
			"version": "4.1.0",
			"resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-4.1.0.tgz",
			"integrity": "sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==",
			"dev": true,
			"license": "ISC",
			"engines": {
				"node": ">=14"
			},
			"funding": {
				"url": "https://github.com/sponsors/isaacs"
			}
		},
		"node_modules/sirv": {
			"version": "3.0.1",
			"resolved": "https://registry.npmjs.org/sirv/-/sirv-3.0.1.tgz",
			"integrity": "sha512-FoqMu0NCGBLCcAkS1qA+XJIQTR6/JHfQXl+uGteNCQ76T91DMUjPa9xfmeqMY3z80nLSg9yQmNjK0Px6RWsH/A==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@polka/url": "^1.0.0-next.24",
				"mrmime": "^2.0.0",
				"totalist": "^3.0.0"
			},
			"engines": {
				"node": ">=18"
			}
		},
		"node_modules/source-map-js": {
			"version": "1.2.1",
			"resolved": "https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.1.tgz",
			"integrity": "sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==",
			"dev": true,
			"license": "BSD-3-Clause",
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/stackback": {
			"version": "0.0.2",
			"resolved": "https://registry.npmjs.org/stackback/-/stackback-0.0.2.tgz",
			"integrity": "sha512-1XMJE5fQo1jGH6Y/7ebnwPOBEkIEnT4QF32d5R1+VXdXveM0IBMJt8zfaxX1P3QhVwrYe+576+jkANtSS2mBbw==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/std-env": {
			"version": "3.9.0",
			"resolved": "https://registry.npmjs.org/std-env/-/std-env-3.9.0.tgz",
			"integrity": "sha512-UGvjygr6F6tpH7o2qyqR6QYpwraIjKSdtzyBdyytFOHmPZY917kwdwLG0RbOjWOnKmnm3PeHjaoLLMie7kPLQw==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/string-width": {
			"version": "5.1.2",
			"resolved": "https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz",
			"integrity": "sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"eastasianwidth": "^0.2.0",
				"emoji-regex": "^9.2.2",
				"strip-ansi": "^7.0.1"
			},
			"engines": {
				"node": ">=12"
			},
			"funding": {
				"url": "https://github.com/sponsors/sindresorhus"
			}
		},
		"node_modules/string-width-cjs": {
			"name": "string-width",
			"version": "4.2.3",
			"resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
			"integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"emoji-regex": "^8.0.0",
				"is-fullwidth-code-point": "^3.0.0",
				"strip-ansi": "^6.0.1"
			},
			"engines": {
				"node": ">=8"
			}
		},
		"node_modules/string-width-cjs/node_modules/emoji-regex": {
			"version": "8.0.0",
			"resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
			"integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/string-width-cjs/node_modules/strip-ansi": {
			"version": "6.0.1",
			"resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
			"integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"ansi-regex": "^5.0.1"
			},
			"engines": {
				"node": ">=8"
			}
		},
		"node_modules/strip-ansi": {
			"version": "7.1.0",
			"resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz",
			"integrity": "sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"ansi-regex": "^6.0.1"
			},
			"engines": {
				"node": ">=12"
			},
			"funding": {
				"url": "https://github.com/chalk/strip-ansi?sponsor=1"
			}
		},
		"node_modules/strip-ansi-cjs": {
			"name": "strip-ansi",
			"version": "6.0.1",
			"resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
			"integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"ansi-regex": "^5.0.1"
			},
			"engines": {
				"node": ">=8"
			}
		},
		"node_modules/strip-ansi/node_modules/ansi-regex": {
			"version": "6.1.0",
			"resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.1.0.tgz",
			"integrity": "sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=12"
			},
			"funding": {
				"url": "https://github.com/chalk/ansi-regex?sponsor=1"
			}
		},
		"node_modules/strip-indent": {
			"version": "3.0.0",
			"resolved": "https://registry.npmjs.org/strip-indent/-/strip-indent-3.0.0.tgz",
			"integrity": "sha512-laJTa3Jb+VQpaC6DseHhF7dXVqHTfJPCRDaEbid/drOhgitgYku/letMUqOXFoWV0zIIUbjpdH2t+tYj4bQMRQ==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"min-indent": "^1.0.0"
			},
			"engines": {
				"node": ">=8"
			}
		},
		"node_modules/strip-json-comments": {
			"version": "3.1.1",
			"resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz",
			"integrity": "sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=8"
			},
			"funding": {
				"url": "https://github.com/sponsors/sindresorhus"
			}
		},
		"node_modules/sucrase": {
			"version": "3.35.0",
			"resolved": "https://registry.npmjs.org/sucrase/-/sucrase-3.35.0.tgz",
			"integrity": "sha512-8EbVDiu9iN/nESwxeSxDKe0dunta1GOlHufmSSXxMD2z2/tMZpDMpvXQGsc+ajGo8y2uYUmixaSRUc/QPoQ0GA==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@jridgewell/gen-mapping": "^0.3.2",
				"commander": "^4.0.0",
				"glob": "^10.3.10",
				"lines-and-columns": "^1.1.6",
				"mz": "^2.7.0",
				"pirates": "^4.0.1",
				"ts-interface-checker": "^0.1.9"
			},
			"bin": {
				"sucrase": "bin/sucrase",
				"sucrase-node": "bin/sucrase-node"
			},
			"engines": {
				"node": ">=16 || 14 >=14.17"
			}
		},
		"node_modules/supports-color": {
			"version": "7.2.0",
			"resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
			"integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"has-flag": "^4.0.0"
			},
			"engines": {
				"node": ">=8"
			}
		},
		"node_modules/supports-preserve-symlinks-flag": {
			"version": "1.0.0",
			"resolved": "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
			"integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">= 0.4"
			},
			"funding": {
				"url": "https://github.com/sponsors/ljharb"
			}
		},
		"node_modules/svelte": {
			"version": "5.33.14",
			"resolved": "https://registry.npmjs.org/svelte/-/svelte-5.33.14.tgz",
			"integrity": "sha512-kRlbhIlMTijbFmVDQFDeKXPLlX1/ovXwV0I162wRqQhRcygaqDIcu1d/Ese3H2uI+yt3uT8E7ndgDthQv5v5BA==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@ampproject/remapping": "^2.3.0",
				"@jridgewell/sourcemap-codec": "^1.5.0",
				"@sveltejs/acorn-typescript": "^1.0.5",
				"@types/estree": "^1.0.5",
				"acorn": "^8.12.1",
				"aria-query": "^5.3.1",
				"axobject-query": "^4.1.0",
				"clsx": "^2.1.1",
				"esm-env": "^1.2.1",
				"esrap": "^1.4.6",
				"is-reference": "^3.0.3",
				"locate-character": "^3.0.0",
				"magic-string": "^0.30.11",
				"zimmerframe": "^1.1.2"
			},
			"engines": {
				"node": ">=18"
			}
		},
		"node_modules/svelte-check": {
			"version": "4.2.1",
			"resolved": "https://registry.npmjs.org/svelte-check/-/svelte-check-4.2.1.tgz",
			"integrity": "sha512-e49SU1RStvQhoipkQ/aonDhHnG3qxHSBtNfBRb9pxVXoa+N7qybAo32KgA9wEb2PCYFNaDg7bZCdhLD1vHpdYA==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@jridgewell/trace-mapping": "^0.3.25",
				"chokidar": "^4.0.1",
				"fdir": "^6.2.0",
				"picocolors": "^1.0.0",
				"sade": "^1.7.4"
			},
			"bin": {
				"svelte-check": "bin/svelte-check"
			},
			"engines": {
				"node": ">= 18.0.0"
			},
			"peerDependencies": {
				"svelte": "^4.0.0 || ^5.0.0-next.0",
				"typescript": ">=5.0.0"
			}
		},
		"node_modules/svelte-eslint-parser": {
			"version": "1.2.0",
			"resolved": "https://registry.npmjs.org/svelte-eslint-parser/-/svelte-eslint-parser-1.2.0.tgz",
			"integrity": "sha512-mbPtajIeuiyU80BEyGvwAktBeTX7KCr5/0l+uRGLq1dafwRNrjfM5kHGJScEBlPG3ipu6dJqfW/k0/fujvIEVw==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"eslint-scope": "^8.2.0",
				"eslint-visitor-keys": "^4.0.0",
				"espree": "^10.0.0",
				"postcss": "^8.4.49",
				"postcss-scss": "^4.0.9",
				"postcss-selector-parser": "^7.0.0"
			},
			"engines": {
				"node": "^18.18.0 || ^20.9.0 || >=21.1.0"
			},
			"funding": {
				"url": "https://github.com/sponsors/ota-meshi"
			},
			"peerDependencies": {
				"svelte": "^3.37.0 || ^4.0.0 || ^5.0.0"
			},
			"peerDependenciesMeta": {
				"svelte": {
					"optional": true
				}
			}
		},
		"node_modules/svelte-eslint-parser/node_modules/postcss": {
			"version": "8.5.4",
			"resolved": "https://registry.npmjs.org/postcss/-/postcss-8.5.4.tgz",
			"integrity": "sha512-QSa9EBe+uwlGTFmHsPKokv3B/oEMQZxfqW0QqNCyhpa6mB1afzulwn8hihglqAb2pOw+BJgNlmXQ8la2VeHB7w==",
			"dev": true,
			"funding": [
				{
					"type": "opencollective",
					"url": "https://opencollective.com/postcss/"
				},
				{
					"type": "tidelift",
					"url": "https://tidelift.com/funding/github/npm/postcss"
				},
				{
					"type": "github",
					"url": "https://github.com/sponsors/ai"
				}
			],
			"license": "MIT",
			"dependencies": {
				"nanoid": "^3.3.11",
				"picocolors": "^1.1.1",
				"source-map-js": "^1.2.1"
			},
			"engines": {
				"node": "^10 || ^12 || >=14"
			}
		},
		"node_modules/svelte-eslint-parser/node_modules/postcss-selector-parser": {
			"version": "7.1.0",
			"resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-7.1.0.tgz",
			"integrity": "sha512-8sLjZwK0R+JlxlYcTuVnyT2v+htpdrjDOKuMcOVdYjt52Lh8hWRYpxBPoKx/Zg+bcjc3wx6fmQevMmUztS/ccA==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"cssesc": "^3.0.0",
				"util-deprecate": "^1.0.2"
			},
			"engines": {
				"node": ">=4"
			}
		},
		"node_modules/symbol-tree": {
			"version": "3.2.4",
			"resolved": "https://registry.npmjs.org/symbol-tree/-/symbol-tree-3.2.4.tgz",
			"integrity": "sha512-9QNk5KwDF+Bvz+PyObkmSYjI5ksVUYtjW7AU22r2NKcfLJcXp96hkDWU3+XndOsUb+AQ9QhfzfCT2O+CNWT5Tw==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/tailwindcss": {
			"version": "3.4.1",
			"resolved": "https://registry.npmjs.org/tailwindcss/-/tailwindcss-3.4.1.tgz",
			"integrity": "sha512-qAYmXRfk3ENzuPBakNK0SRrUDipP8NQnEY6772uDhflcQz5EhRdD7JNZxyrFHVQNCwULPBn6FNPp9brpO7ctcA==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@alloc/quick-lru": "^5.2.0",
				"arg": "^5.0.2",
				"chokidar": "^3.5.3",
				"didyoumean": "^1.2.2",
				"dlv": "^1.1.3",
				"fast-glob": "^3.3.0",
				"glob-parent": "^6.0.2",
				"is-glob": "^4.0.3",
				"jiti": "^1.19.1",
				"lilconfig": "^2.1.0",
				"micromatch": "^4.0.5",
				"normalize-path": "^3.0.0",
				"object-hash": "^3.0.0",
				"picocolors": "^1.0.0",
				"postcss": "^8.4.23",
				"postcss-import": "^15.1.0",
				"postcss-js": "^4.0.1",
				"postcss-load-config": "^4.0.1",
				"postcss-nested": "^6.0.1",
				"postcss-selector-parser": "^6.0.11",
				"resolve": "^1.22.2",
				"sucrase": "^3.32.0"
			},
			"bin": {
				"tailwind": "lib/cli.js",
				"tailwindcss": "lib/cli.js"
			},
			"engines": {
				"node": ">=14.0.0"
			}
		},
		"node_modules/tailwindcss/node_modules/chokidar": {
			"version": "3.6.0",
			"resolved": "https://registry.npmjs.org/chokidar/-/chokidar-3.6.0.tgz",
			"integrity": "sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"anymatch": "~3.1.2",
				"braces": "~3.0.2",
				"glob-parent": "~5.1.2",
				"is-binary-path": "~2.1.0",
				"is-glob": "~4.0.1",
				"normalize-path": "~3.0.0",
				"readdirp": "~3.6.0"
			},
			"engines": {
				"node": ">= 8.10.0"
			},
			"funding": {
				"url": "https://paulmillr.com/funding/"
			},
			"optionalDependencies": {
				"fsevents": "~2.3.2"
			}
		},
		"node_modules/tailwindcss/node_modules/chokidar/node_modules/glob-parent": {
			"version": "5.1.2",
			"resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
			"integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
			"dev": true,
			"license": "ISC",
			"dependencies": {
				"is-glob": "^4.0.1"
			},
			"engines": {
				"node": ">= 6"
			}
		},
		"node_modules/tailwindcss/node_modules/jiti": {
			"version": "1.21.7",
			"resolved": "https://registry.npmjs.org/jiti/-/jiti-1.21.7.tgz",
			"integrity": "sha512-/imKNG4EbWNrVjoNC/1H5/9GFy+tqjGBHCaSsN+P2RnPqjsLmv6UD3Ej+Kj8nBWaRAwyk7kK5ZUc+OEatnTR3A==",
			"dev": true,
			"license": "MIT",
			"bin": {
				"jiti": "bin/jiti.js"
			}
		},
		"node_modules/tailwindcss/node_modules/picomatch": {
			"version": "2.3.1",
			"resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
			"integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=8.6"
			},
			"funding": {
				"url": "https://github.com/sponsors/jonschlinkert"
			}
		},
		"node_modules/tailwindcss/node_modules/postcss-load-config": {
			"version": "4.0.2",
			"resolved": "https://registry.npmjs.org/postcss-load-config/-/postcss-load-config-4.0.2.tgz",
			"integrity": "sha512-bSVhyJGL00wMVoPUzAVAnbEoWyqRxkjv64tUl427SKnPrENtq6hJwUojroMz2VB+Q1edmi4IfrAPpami5VVgMQ==",
			"dev": true,
			"funding": [
				{
					"type": "opencollective",
					"url": "https://opencollective.com/postcss/"
				},
				{
					"type": "github",
					"url": "https://github.com/sponsors/ai"
				}
			],
			"license": "MIT",
			"dependencies": {
				"lilconfig": "^3.0.0",
				"yaml": "^2.3.4"
			},
			"engines": {
				"node": ">= 14"
			},
			"peerDependencies": {
				"postcss": ">=8.0.9",
				"ts-node": ">=9.0.0"
			},
			"peerDependenciesMeta": {
				"postcss": {
					"optional": true
				},
				"ts-node": {
					"optional": true
				}
			}
		},
		"node_modules/tailwindcss/node_modules/postcss-load-config/node_modules/lilconfig": {
			"version": "3.1.3",
			"resolved": "https://registry.npmjs.org/lilconfig/-/lilconfig-3.1.3.tgz",
			"integrity": "sha512-/vlFKAoH5Cgt3Ie+JLhRbwOsCQePABiU3tJ1egGvyQ+33R/vcwM2Zl2QR/LzjsBeItPt3oSVXapn+m4nQDvpzw==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=14"
			},
			"funding": {
				"url": "https://github.com/sponsors/antonk52"
			}
		},
		"node_modules/tailwindcss/node_modules/postcss-selector-parser": {
			"version": "6.1.2",
			"resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.1.2.tgz",
			"integrity": "sha512-Q8qQfPiZ+THO/3ZrOrO0cJJKfpYCagtMUkXbnEfmgUjwXg6z/WBeOyS9APBBPCTSiDV+s4SwQGu8yFsiMRIudg==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"cssesc": "^3.0.0",
				"util-deprecate": "^1.0.2"
			},
			"engines": {
				"node": ">=4"
			}
		},
		"node_modules/tailwindcss/node_modules/readdirp": {
			"version": "3.6.0",
			"resolved": "https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz",
			"integrity": "sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"picomatch": "^2.2.1"
			},
			"engines": {
				"node": ">=8.10.0"
			}
		},
		"node_modules/thenify": {
			"version": "3.3.1",
			"resolved": "https://registry.npmjs.org/thenify/-/thenify-3.3.1.tgz",
			"integrity": "sha512-RVZSIV5IG10Hk3enotrhvz0T9em6cyHBLkH/YAZuKqd8hRkKhSfCGIcP2KUY0EPxndzANBmNllzWPwak+bheSw==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"any-promise": "^1.0.0"
			}
		},
		"node_modules/thenify-all": {
			"version": "1.6.0",
			"resolved": "https://registry.npmjs.org/thenify-all/-/thenify-all-1.6.0.tgz",
			"integrity": "sha512-RNxQH/qI8/t3thXJDwcstUO4zeqo64+Uy/+sNVRBx4Xn2OX+OZ9oP+iJnNFqplFra2ZUVeKCSa2oVWi3T4uVmA==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"thenify": ">= 3.1.0 < 4"
			},
			"engines": {
				"node": ">=0.8"
			}
		},
		"node_modules/tinybench": {
			"version": "2.9.0",
			"resolved": "https://registry.npmjs.org/tinybench/-/tinybench-2.9.0.tgz",
			"integrity": "sha512-0+DUvqWMValLmha6lr4kD8iAMK1HzV0/aKnCtWb9v9641TnP/MFb7Pc2bxoxQjTXAErryXVgUOfv2YqNllqGeg==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/tinyexec": {
			"version": "0.3.2",
			"resolved": "https://registry.npmjs.org/tinyexec/-/tinyexec-0.3.2.tgz",
			"integrity": "sha512-KQQR9yN7R5+OSwaK0XQoj22pwHoTlgYqmUscPYoknOoWCWfj/5/ABTMRi69FrKU5ffPVh5QcFikpWJI/P1ocHA==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/tinyglobby": {
			"version": "0.2.14",
			"resolved": "https://registry.npmjs.org/tinyglobby/-/tinyglobby-0.2.14.tgz",
			"integrity": "sha512-tX5e7OM1HnYr2+a2C/4V0htOcSQcoSTH9KgJnVvNm5zm/cyEWKJ7j7YutsH9CxMdtOkkLFy2AHrMci9IM8IPZQ==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"fdir": "^6.4.4",
				"picomatch": "^4.0.2"
			},
			"engines": {
				"node": ">=12.0.0"
			},
			"funding": {
				"url": "https://github.com/sponsors/SuperchupuDev"
			}
		},
		"node_modules/tinypool": {
			"version": "1.1.0",
			"resolved": "https://registry.npmjs.org/tinypool/-/tinypool-1.1.0.tgz",
			"integrity": "sha512-7CotroY9a8DKsKprEy/a14aCCm8jYVmR7aFy4fpkZM8sdpNJbKkixuNjgM50yCmip2ezc8z4N7k3oe2+rfRJCQ==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": "^18.0.0 || >=20.0.0"
			}
		},
		"node_modules/tinyrainbow": {
			"version": "2.0.0",
			"resolved": "https://registry.npmjs.org/tinyrainbow/-/tinyrainbow-2.0.0.tgz",
			"integrity": "sha512-op4nsTR47R6p0vMUUoYl/a+ljLFVtlfaXkLQmqfLR1qHma1h/ysYk4hEXZ880bf2CYgTskvTa/e196Vd5dDQXw==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=14.0.0"
			}
		},
		"node_modules/tinyspy": {
			"version": "4.0.3",
			"resolved": "https://registry.npmjs.org/tinyspy/-/tinyspy-4.0.3.tgz",
			"integrity": "sha512-t2T/WLB2WRgZ9EpE4jgPJ9w+i66UZfDc8wHh0xrwiRNN+UwH98GIJkTeZqX9rg0i0ptwzqW+uYeIF0T4F8LR7A==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=14.0.0"
			}
		},
		"node_modules/tldts": {
			"version": "6.1.86",
			"resolved": "https://registry.npmjs.org/tldts/-/tldts-6.1.86.tgz",
			"integrity": "sha512-WMi/OQ2axVTf/ykqCQgXiIct+mSQDFdH2fkwhPwgEwvJ1kSzZRiinb0zF2Xb8u4+OqPChmyI6MEu4EezNJz+FQ==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"tldts-core": "^6.1.86"
			},
			"bin": {
				"tldts": "bin/cli.js"
			}
		},
		"node_modules/tldts-core": {
			"version": "6.1.86",
			"resolved": "https://registry.npmjs.org/tldts-core/-/tldts-core-6.1.86.tgz",
			"integrity": "sha512-Je6p7pkk+KMzMv2XXKmAE3McmolOQFdxkKw0R8EYNr7sELW46JqnNeTX8ybPiQgvg1ymCoF8LXs5fzFaZvJPTA==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/to-regex-range": {
			"version": "5.0.1",
			"resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
			"integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"is-number": "^7.0.0"
			},
			"engines": {
				"node": ">=8.0"
			}
		},
		"node_modules/totalist": {
			"version": "3.0.1",
			"resolved": "https://registry.npmjs.org/totalist/-/totalist-3.0.1.tgz",
			"integrity": "sha512-sf4i37nQ2LBx4m3wB74y+ubopq6W/dIzXg0FDGjsYnZHVa1Da8FH853wlL2gtUhg+xJXjfk3kUZS3BRoQeoQBQ==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=6"
			}
		},
		"node_modules/tough-cookie": {
			"version": "5.1.2",
			"resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-5.1.2.tgz",
			"integrity": "sha512-FVDYdxtnj0G6Qm/DhNPSb8Ju59ULcup3tuJxkFb5K8Bv2pUXILbf0xZWU8PX8Ov19OXljbUyveOFwRMwkXzO+A==",
			"dev": true,
			"license": "BSD-3-Clause",
			"dependencies": {
				"tldts": "^6.1.32"
			},
			"engines": {
				"node": ">=16"
			}
		},
		"node_modules/tr46": {
			"version": "5.1.1",
			"resolved": "https://registry.npmjs.org/tr46/-/tr46-5.1.1.tgz",
			"integrity": "sha512-hdF5ZgjTqgAntKkklYw0R03MG2x/bSzTtkxmIRw/sTNV8YXsCJ1tfLAX23lhxhHJlEf3CRCOCGGWw3vI3GaSPw==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"punycode": "^2.3.1"
			},
			"engines": {
				"node": ">=18"
			}
		},
		"node_modules/ts-api-utils": {
			"version": "2.1.0",
			"resolved": "https://registry.npmjs.org/ts-api-utils/-/ts-api-utils-2.1.0.tgz",
			"integrity": "sha512-CUgTZL1irw8u29bzrOD/nH85jqyc74D6SshFgujOIA7osm2Rz7dYH77agkx7H4FBNxDq7Cjf+IjaX/8zwFW+ZQ==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=18.12"
			},
			"peerDependencies": {
				"typescript": ">=4.8.4"
			}
		},
		"node_modules/ts-interface-checker": {
			"version": "0.1.13",
			"resolved": "https://registry.npmjs.org/ts-interface-checker/-/ts-interface-checker-0.1.13.tgz",
			"integrity": "sha512-Y/arvbn+rrz3JCKl9C4kVNfTfSm2/mEp5FSz5EsZSANGPSlQrpRI5M4PKF+mJnE52jOO90PnPSc3Ur3bTQw0gA==",
			"dev": true,
			"license": "Apache-2.0"
		},
		"node_modules/type-check": {
			"version": "0.4.0",
			"resolved": "https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz",
			"integrity": "sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"prelude-ls": "^1.2.1"
			},
			"engines": {
				"node": ">= 0.8.0"
			}
		},
		"node_modules/typescript": {
			"version": "5.8.3",
			"resolved": "https://registry.npmjs.org/typescript/-/typescript-5.8.3.tgz",
			"integrity": "sha512-p1diW6TqL9L07nNxvRMM7hMMw4c5XOo/1ibL4aAIGmSAt9slTE1Xgw5KWuof2uTOvCg9BY7ZRi+GaF+7sfgPeQ==",
			"dev": true,
			"license": "Apache-2.0",
			"bin": {
				"tsc": "bin/tsc",
				"tsserver": "bin/tsserver"
			},
			"engines": {
				"node": ">=14.17"
			}
		},
		"node_modules/typescript-eslint": {
			"version": "8.33.1",
			"resolved": "https://registry.npmjs.org/typescript-eslint/-/typescript-eslint-8.33.1.tgz",
			"integrity": "sha512-AgRnV4sKkWOiZ0Kjbnf5ytTJXMUZQ0qhSVdQtDNYLPLnjsATEYhaO94GlRQwi4t4gO8FfjM6NnikHeKjUm8D7A==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@typescript-eslint/eslint-plugin": "8.33.1",
				"@typescript-eslint/parser": "8.33.1",
				"@typescript-eslint/utils": "8.33.1"
			},
			"engines": {
				"node": "^18.18.0 || ^20.9.0 || >=21.1.0"
			},
			"funding": {
				"type": "opencollective",
				"url": "https://opencollective.com/typescript-eslint"
			},
			"peerDependencies": {
				"eslint": "^8.57.0 || ^9.0.0",
				"typescript": ">=4.8.4 <5.9.0"
			}
		},
		"node_modules/update-browserslist-db": {
			"version": "1.1.3",
			"resolved": "https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.1.3.tgz",
			"integrity": "sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw==",
			"dev": true,
			"funding": [
				{
					"type": "opencollective",
					"url": "https://opencollective.com/browserslist"
				},
				{
					"type": "tidelift",
					"url": "https://tidelift.com/funding/github/npm/browserslist"
				},
				{
					"type": "github",
					"url": "https://github.com/sponsors/ai"
				}
			],
			"license": "MIT",
			"dependencies": {
				"escalade": "^3.2.0",
				"picocolors": "^1.1.1"
			},
			"bin": {
				"update-browserslist-db": "cli.js"
			},
			"peerDependencies": {
				"browserslist": ">= 4.21.0"
			}
		},
		"node_modules/uri-js": {
			"version": "4.4.1",
			"resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz",
			"integrity": "sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==",
			"dev": true,
			"license": "BSD-2-Clause",
			"dependencies": {
				"punycode": "^2.1.0"
			}
		},
		"node_modules/util-deprecate": {
			"version": "1.0.2",
			"resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
			"integrity": "sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/vite": {
			"version": "6.3.5",
			"resolved": "https://registry.npmjs.org/vite/-/vite-6.3.5.tgz",
			"integrity": "sha512-cZn6NDFE7wdTpINgs++ZJ4N49W2vRp8LCKrn3Ob1kYNtOo21vfDoaV5GzBfLU4MovSAB8uNRm4jgzVQZ+mBzPQ==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"esbuild": "^0.25.0",
				"fdir": "^6.4.4",
				"picomatch": "^4.0.2",
				"postcss": "^8.5.3",
				"rollup": "^4.34.9",
				"tinyglobby": "^0.2.13"
			},
			"bin": {
				"vite": "bin/vite.js"
			},
			"engines": {
				"node": "^18.0.0 || ^20.0.0 || >=22.0.0"
			},
			"funding": {
				"url": "https://github.com/vitejs/vite?sponsor=1"
			},
			"optionalDependencies": {
				"fsevents": "~2.3.3"
			},
			"peerDependencies": {
				"@types/node": "^18.0.0 || ^20.0.0 || >=22.0.0",
				"jiti": ">=1.21.0",
				"less": "*",
				"lightningcss": "^1.21.0",
				"sass": "*",
				"sass-embedded": "*",
				"stylus": "*",
				"sugarss": "*",
				"terser": "^5.16.0",
				"tsx": "^4.8.1",
				"yaml": "^2.4.2"
			},
			"peerDependenciesMeta": {
				"@types/node": {
					"optional": true
				},
				"jiti": {
					"optional": true
				},
				"less": {
					"optional": true
				},
				"lightningcss": {
					"optional": true
				},
				"sass": {
					"optional": true
				},
				"sass-embedded": {
					"optional": true
				},
				"stylus": {
					"optional": true
				},
				"sugarss": {
					"optional": true
				},
				"terser": {
					"optional": true
				},
				"tsx": {
					"optional": true
				},
				"yaml": {
					"optional": true
				}
			}
		},
		"node_modules/vite-node": {
			"version": "3.2.2",
			"resolved": "https://registry.npmjs.org/vite-node/-/vite-node-3.2.2.tgz",
			"integrity": "sha512-Xj/jovjZvDXOq2FgLXu8NsY4uHUMWtzVmMC2LkCu9HWdr9Qu1Is5sanX3Z4jOFKdohfaWDnEJWp9pRP0vVpAcA==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"cac": "^6.7.14",
				"debug": "^4.4.1",
				"es-module-lexer": "^1.7.0",
				"pathe": "^2.0.3",
				"vite": "^5.0.0 || ^6.0.0 || ^7.0.0-0"
			},
			"bin": {
				"vite-node": "vite-node.mjs"
			},
			"engines": {
				"node": "^18.0.0 || ^20.0.0 || >=22.0.0"
			},
			"funding": {
				"url": "https://opencollective.com/vitest"
			}
		},
		"node_modules/vite/node_modules/postcss": {
			"version": "8.5.4",
			"resolved": "https://registry.npmjs.org/postcss/-/postcss-8.5.4.tgz",
			"integrity": "sha512-QSa9EBe+uwlGTFmHsPKokv3B/oEMQZxfqW0QqNCyhpa6mB1afzulwn8hihglqAb2pOw+BJgNlmXQ8la2VeHB7w==",
			"dev": true,
			"funding": [
				{
					"type": "opencollective",
					"url": "https://opencollective.com/postcss/"
				},
				{
					"type": "tidelift",
					"url": "https://tidelift.com/funding/github/npm/postcss"
				},
				{
					"type": "github",
					"url": "https://github.com/sponsors/ai"
				}
			],
			"license": "MIT",
			"dependencies": {
				"nanoid": "^3.3.11",
				"picocolors": "^1.1.1",
				"source-map-js": "^1.2.1"
			},
			"engines": {
				"node": "^10 || ^12 || >=14"
			}
		},
		"node_modules/vitefu": {
			"version": "1.0.6",
			"resolved": "https://registry.npmjs.org/vitefu/-/vitefu-1.0.6.tgz",
			"integrity": "sha512-+Rex1GlappUyNN6UfwbVZne/9cYC4+R2XDk9xkNXBKMw6HQagdX9PgZ8V2v1WUSK1wfBLp7qbI1+XSNIlB1xmA==",
			"dev": true,
			"license": "MIT",
			"workspaces": [
				"tests/deps/*",
				"tests/projects/*"
			],
			"peerDependencies": {
				"vite": "^3.0.0 || ^4.0.0 || ^5.0.0 || ^6.0.0"
			},
			"peerDependenciesMeta": {
				"vite": {
					"optional": true
				}
			}
		},
		"node_modules/vitest": {
			"version": "3.2.2",
			"resolved": "https://registry.npmjs.org/vitest/-/vitest-3.2.2.tgz",
			"integrity": "sha512-fyNn/Rp016Bt5qvY0OQvIUCwW2vnaEBLxP42PmKbNIoasSYjML+8xyeADOPvBe+Xfl/ubIw4og7Lt9jflRsCNw==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"@types/chai": "^5.2.2",
				"@vitest/expect": "3.2.2",
				"@vitest/mocker": "3.2.2",
				"@vitest/pretty-format": "^3.2.2",
				"@vitest/runner": "3.2.2",
				"@vitest/snapshot": "3.2.2",
				"@vitest/spy": "3.2.2",
				"@vitest/utils": "3.2.2",
				"chai": "^5.2.0",
				"debug": "^4.4.1",
				"expect-type": "^1.2.1",
				"magic-string": "^0.30.17",
				"pathe": "^2.0.3",
				"picomatch": "^4.0.2",
				"std-env": "^3.9.0",
				"tinybench": "^2.9.0",
				"tinyexec": "^0.3.2",
				"tinyglobby": "^0.2.14",
				"tinypool": "^1.1.0",
				"tinyrainbow": "^2.0.0",
				"vite": "^5.0.0 || ^6.0.0 || ^7.0.0-0",
				"vite-node": "3.2.2",
				"why-is-node-running": "^2.3.0"
			},
			"bin": {
				"vitest": "vitest.mjs"
			},
			"engines": {
				"node": "^18.0.0 || ^20.0.0 || >=22.0.0"
			},
			"funding": {
				"url": "https://opencollective.com/vitest"
			},
			"peerDependencies": {
				"@edge-runtime/vm": "*",
				"@types/debug": "^4.1.12",
				"@types/node": "^18.0.0 || ^20.0.0 || >=22.0.0",
				"@vitest/browser": "3.2.2",
				"@vitest/ui": "3.2.2",
				"happy-dom": "*",
				"jsdom": "*"
			},
			"peerDependenciesMeta": {
				"@edge-runtime/vm": {
					"optional": true
				},
				"@types/debug": {
					"optional": true
				},
				"@types/node": {
					"optional": true
				},
				"@vitest/browser": {
					"optional": true
				},
				"@vitest/ui": {
					"optional": true
				},
				"happy-dom": {
					"optional": true
				},
				"jsdom": {
					"optional": true
				}
			}
		},
		"node_modules/w3c-xmlserializer": {
			"version": "5.0.0",
			"resolved": "https://registry.npmjs.org/w3c-xmlserializer/-/w3c-xmlserializer-5.0.0.tgz",
			"integrity": "sha512-o8qghlI8NZHU1lLPrpi2+Uq7abh4GGPpYANlalzWxyWteJOCsr/P+oPBA49TOLu5FTZO4d3F9MnWJfiMo4BkmA==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"xml-name-validator": "^5.0.0"
			},
			"engines": {
				"node": ">=18"
			}
		},
		"node_modules/webidl-conversions": {
			"version": "7.0.0",
			"resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-7.0.0.tgz",
			"integrity": "sha512-VwddBukDzu71offAQR975unBIGqfKZpM+8ZX6ySk8nYhVoo5CYaZyzt3YBvYtRtO+aoGlqxPg/B87NGVZ/fu6g==",
			"dev": true,
			"license": "BSD-2-Clause",
			"engines": {
				"node": ">=12"
			}
		},
		"node_modules/whatwg-encoding": {
			"version": "3.1.1",
			"resolved": "https://registry.npmjs.org/whatwg-encoding/-/whatwg-encoding-3.1.1.tgz",
			"integrity": "sha512-6qN4hJdMwfYBtE3YBTTHhoeuUrDBPZmbQaxWAqSALV/MeEnR5z1xd8UKud2RAkFoPkmB+hli1TZSnyi84xz1vQ==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"iconv-lite": "0.6.3"
			},
			"engines": {
				"node": ">=18"
			}
		},
		"node_modules/whatwg-mimetype": {
			"version": "4.0.0",
			"resolved": "https://registry.npmjs.org/whatwg-mimetype/-/whatwg-mimetype-4.0.0.tgz",
			"integrity": "sha512-QaKxh0eNIi2mE9p2vEdzfagOKHCcj1pJ56EEHGQOVxp8r9/iszLUUV7v89x9O1p/T+NlTM5W7jW6+cz4Fq1YVg==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=18"
			}
		},
		"node_modules/whatwg-url": {
			"version": "14.2.0",
			"resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-14.2.0.tgz",
			"integrity": "sha512-De72GdQZzNTUBBChsXueQUnPKDkg/5A5zp7pFDuQAj5UFoENpiACU0wlCvzpAGnTkj++ihpKwKyYewn/XNUbKw==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"tr46": "^5.1.0",
				"webidl-conversions": "^7.0.0"
			},
			"engines": {
				"node": ">=18"
			}
		},
		"node_modules/which": {
			"version": "2.0.2",
			"resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
			"integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
			"dev": true,
			"license": "ISC",
			"dependencies": {
				"isexe": "^2.0.0"
			},
			"bin": {
				"node-which": "bin/node-which"
			},
			"engines": {
				"node": ">= 8"
			}
		},
		"node_modules/why-is-node-running": {
			"version": "2.3.0",
			"resolved": "https://registry.npmjs.org/why-is-node-running/-/why-is-node-running-2.3.0.tgz",
			"integrity": "sha512-hUrmaWBdVDcxvYqnyh09zunKzROWjbZTiNy8dBEjkS7ehEDQibXJ7XvlmtbwuTclUiIyN+CyXQD4Vmko8fNm8w==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"siginfo": "^2.0.0",
				"stackback": "0.0.2"
			},
			"bin": {
				"why-is-node-running": "cli.js"
			},
			"engines": {
				"node": ">=8"
			}
		},
		"node_modules/word-wrap": {
			"version": "1.2.5",
			"resolved": "https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.5.tgz",
			"integrity": "sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=0.10.0"
			}
		},
		"node_modules/wrap-ansi": {
			"version": "8.1.0",
			"resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-8.1.0.tgz",
			"integrity": "sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"ansi-styles": "^6.1.0",
				"string-width": "^5.0.1",
				"strip-ansi": "^7.0.1"
			},
			"engines": {
				"node": ">=12"
			},
			"funding": {
				"url": "https://github.com/chalk/wrap-ansi?sponsor=1"
			}
		},
		"node_modules/wrap-ansi-cjs": {
			"name": "wrap-ansi",
			"version": "7.0.0",
			"resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
			"integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"ansi-styles": "^4.0.0",
				"string-width": "^4.1.0",
				"strip-ansi": "^6.0.0"
			},
			"engines": {
				"node": ">=10"
			},
			"funding": {
				"url": "https://github.com/chalk/wrap-ansi?sponsor=1"
			}
		},
		"node_modules/wrap-ansi-cjs/node_modules/emoji-regex": {
			"version": "8.0.0",
			"resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
			"integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/wrap-ansi-cjs/node_modules/string-width": {
			"version": "4.2.3",
			"resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
			"integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"emoji-regex": "^8.0.0",
				"is-fullwidth-code-point": "^3.0.0",
				"strip-ansi": "^6.0.1"
			},
			"engines": {
				"node": ">=8"
			}
		},
		"node_modules/wrap-ansi-cjs/node_modules/strip-ansi": {
			"version": "6.0.1",
			"resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
			"integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
			"dev": true,
			"license": "MIT",
			"dependencies": {
				"ansi-regex": "^5.0.1"
			},
			"engines": {
				"node": ">=8"
			}
		},
		"node_modules/wrap-ansi/node_modules/ansi-styles": {
			"version": "6.2.1",
			"resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-6.2.1.tgz",
			"integrity": "sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=12"
			},
			"funding": {
				"url": "https://github.com/chalk/ansi-styles?sponsor=1"
			}
		},
		"node_modules/ws": {
			"version": "8.18.2",
			"resolved": "https://registry.npmjs.org/ws/-/ws-8.18.2.tgz",
			"integrity": "sha512-DMricUmwGZUVr++AEAe2uiVM7UoO9MAVZMDu05UQOaUII0lp+zOzLLU4Xqh/JvTqklB1T4uELaaPBKyjE1r4fQ==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=10.0.0"
			},
			"peerDependencies": {
				"bufferutil": "^4.0.1",
				"utf-8-validate": ">=5.0.2"
			},
			"peerDependenciesMeta": {
				"bufferutil": {
					"optional": true
				},
				"utf-8-validate": {
					"optional": true
				}
			}
		},
		"node_modules/xml-name-validator": {
			"version": "5.0.0",
			"resolved": "https://registry.npmjs.org/xml-name-validator/-/xml-name-validator-5.0.0.tgz",
			"integrity": "sha512-EvGK8EJ3DhaHfbRlETOWAS5pO9MZITeauHKJyb8wyajUfQUenkIg2MvLDTZ4T/TgIcm3HU0TFBgWWboAZ30UHg==",
			"dev": true,
			"license": "Apache-2.0",
			"engines": {
				"node": ">=18"
			}
		},
		"node_modules/xmlchars": {
			"version": "2.2.0",
			"resolved": "https://registry.npmjs.org/xmlchars/-/xmlchars-2.2.0.tgz",
			"integrity": "sha512-JZnDKK8B0RCDw84FNdDAIpZK+JuJw+s7Lz8nksI7SIuU3UXJJslUthsi+uWBUYOwPFwW7W7PRLRfUKpxjtjFCw==",
			"dev": true,
			"license": "MIT"
		},
		"node_modules/yaml": {
			"version": "2.8.0",
			"resolved": "https://registry.npmjs.org/yaml/-/yaml-2.8.0.tgz",
			"integrity": "sha512-4lLa/EcQCB0cJkyts+FpIRx5G/llPxfP6VQU5KByHEhLxY3IJCH0f0Hy1MHI8sClTvsIb8qwRJ6R/ZdlDJ/leQ==",
			"dev": true,
			"license": "ISC",
			"bin": {
				"yaml": "bin.mjs"
			},
			"engines": {
				"node": ">= 14.6"
			}
		},
		"node_modules/yocto-queue": {
			"version": "0.1.0",
			"resolved": "https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz",
			"integrity": "sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==",
			"dev": true,
			"license": "MIT",
			"engines": {
				"node": ">=10"
			},
			"funding": {
				"url": "https://github.com/sponsors/sindresorhus"
			}
		},
		"node_modules/zimmerframe": {
			"version": "1.1.2",
			"resolved": "https://registry.npmjs.org/zimmerframe/-/zimmerframe-1.1.2.tgz",
			"integrity": "sha512-rAbqEGa8ovJy4pyBxZM70hg4pE6gDgaQ0Sl9M3enG3I0d6H4XSAM3GeNGLKnsBpuijUow064sf7ww1nutC5/3w==",
			"dev": true,
			"license": "MIT"
		}
	}
}
===== SLUTT ./package-lock.json =====

===== START ./package.json =====
{
	"name": "strategy-safari",
	"private": true,
	"version": "0.0.1",
	"type": "module",
	"scripts": {
		"dev": "vite dev",
		"build": "vite build",
		"preview": "vite preview",
		"prepare": "svelte-kit sync || echo ''",
		"check": "svelte-kit sync && svelte-check --tsconfig ./tsconfig.json",
		"check:watch": "svelte-kit sync && svelte-check --tsconfig ./tsconfig.json --watch",
		"format": "prettier --write .",
		"lint": "prettier --check . && eslint .",
		"test:unit": "vitest",
		"test": "npm run test:unit -- --run"
	},
	"devDependencies": {
		"@eslint/compat": "^1.2.5",
		"@eslint/js": "^9.18.0",
		"@sveltejs/adapter-auto": "^6.0.0",
		"@sveltejs/kit": "^2.16.0",
		"@sveltejs/vite-plugin-svelte": "^5.0.0",
		"@tailwindcss/forms": "^0.5.7",
		"@tailwindcss/typography": "^0.5.10",
		"@testing-library/jest-dom": "^6.6.3",
		"@testing-library/svelte": "^5.2.4",
		"autoprefixer": "^10.4.17",
		"eslint": "^9.18.0",
		"eslint-config-prettier": "^10.0.1",
		"eslint-plugin-svelte": "^3.0.0",
		"globals": "^16.0.0",
		"jsdom": "^26.0.0",
		"postcss": "^8.4.33",
		"prettier": "^3.4.2",
		"prettier-plugin-svelte": "^3.3.3",
		"prettier-plugin-tailwindcss": "^0.6.11",
		"svelte": "^5.0.0",
		"svelte-check": "^4.0.0",
		"tailwindcss": "^3.4.1",
		"typescript": "^5.0.0",
		"typescript-eslint": "^8.20.0",
		"vite": "^6.2.6",
		"vitest": "^3.0.0"
	},
	"dependencies": {
		"chart.js": "^4.4.9"
	}
}
===== SLUTT ./package.json =====

===== START ./static/data/ps.json =====
{
  "// static/data/ps-detailed.json": {
    "framework": {
      "title": "The Five P's of Strategy",
      "subtitle": "Henry Mintzberg's Comprehensive Framework for Understanding Strategy",
      "description": "Strategy is not just one thing but can be understood through five distinct but interconnected perspectives. Each P represents a different lens through which we can view strategic thinking and formation within organizations.",
      "author": "Henry Mintzberg",
      "source": "Strategy Safari: A Guided Tour Through the Wilds of Strategic Management",
      "year": "1998"
    },
    "ps": [
      {
        "id": "plan",
        "label": "Plan",
        "icon": "📋",
        "color": "#3366cc",
        "order": 1,
        "shortDescription": "Strategy as a conscious, structured plan to achieve goals. Deliberate and analytical in nature.",
        "fullDescription": "Strategy as Plan refers to the deliberate, conscious, and intended courses of action developed in advance of the situations to which they apply. This perspective views strategy as a roadmap – a guide or course of action into the future, a path to get from here to there.",
        "characteristics": [
          "Conscious and deliberate",
          "Developed in advance",
          "Provides direction",
          "Guides decision-making",
          "Often documented and formal",
          "Future-oriented"
        ],
        "examples": [
          {
            "company": "Southwest Airlines",
            "description": "Deliberate plan to be a low-cost carrier with point-to-point routes, quick turnarounds, and friendly service.",
            "outcome": "Consistent execution of this planned strategy led to decades of profitability."
          },
          {
            "company": "Tesla",
            "description": "Master Plan to accelerate sustainable transport: start with expensive sports car, use profits to develop cheaper cars, eventually reach mass market.",
            "outcome": "Systematic execution of this plan from Roadster to Model 3 and beyond."
          },
          {
            "company": "Amazon",
            "description": "Long-term plan to grow by sacrificing short-term profits for market share and infrastructure investment.",
            "outcome": "20+ years of planned losses in new ventures led to dominance in multiple markets."
          }
        ],
        "tools": [
          "Strategic planning processes",
          "Scenario planning",
          "Roadmaps and timelines",
          "Budget planning",
          "Project management methodologies",
          "SWOT analysis"
        ],
        "advantages": [
          "Provides clear direction",
          "Enables coordination",
          "Facilitates resource allocation",
          "Allows preparation for contingencies",
          "Creates accountability"
        ],
        "disadvantages": [
          "May become rigid",
          "Can prevent adaptation",
          "Assumes predictable environment",
          "May discourage innovation",
          "Can create false sense of control"
        ],
        "whenToUse": [
          "Stable, predictable environments",
          "Large, complex organizations",
          "Capital-intensive industries",
          "Regulated environments",
          "When coordination is critical"
        ],
        "relatedConcepts": [
          "Intended strategy",
          "Strategic planning",
          "Goal setting",
          "Project management"
        ]
      },
      {
        "id": "pattern",
        "label": "Pattern",
        "icon": "🔄",
        "color": "#dc3912",
        "order": 2,
        "shortDescription": "Strategy as a pattern in a stream of actions — not necessarily intended, but visible in hindsight.",
        "fullDescription": "Strategy as Pattern looks at strategy as consistency in behavior over time. This perspective recognizes that strategies often emerge from patterns of actions, whether intended or not. It's about what an organization actually does, as revealed by examining its behavior over time.",
        "characteristics": [
          "Emerges from actions",
          "Consistency over time",
          "May be unintended",
          "Visible in hindsight",
          "Behavioral focus",
          "Learning-oriented"
        ],
        "examples": [
          {
            "company": "Honda",
            "description": "Honda's entry into the US motorcycle market emerged as a pattern - they initially targeted high-end market but found success with small bikes when their own staff used them for errands.",
            "outcome": "What seemed like strategic failure led to creating the entire small motorcycle market in the US."
          },
          {
            "company": "3M",
            "description": "Pattern of innovation through 'happy accidents' and employee experimentation, leading to products like Post-it Notes.",
            "outcome": "Systematic encouragement of experimentation became a core strategic pattern."
          },
          {
            "company": "Netflix",
            "description": "Pattern of continuous business model evolution: DVD-by-mail → streaming → original content → global expansion.",
            "outcome": "Each evolution built on learning from the previous model."
          }
        ],
        "tools": [
          "Historical analysis",
          "Behavioral tracking",
          "Pattern recognition software",
          "Retrospective reviews",
          "Decision archaeology",
          "Learning organization techniques"
        ],
        "advantages": [
          "Captures emergent strategies",
          "Enables learning from experience",
          "Reveals actual strategic behavior",
          "Allows course correction",
          "Recognizes unplanned success"
        ],
        "disadvantages": [
          "Only visible after the fact",
          "May lack coherent direction",
          "Can lead to strategic drift",
          "Difficult to communicate",
          "May miss opportunities"
        ],
        "whenToUse": [
          "Dynamic, uncertain environments",
          "Innovation-focused organizations",
          "Learning-oriented cultures",
          "When flexibility is paramount",
          "In rapidly changing industries"
        ],
        "relatedConcepts": [
          "Emergent strategy",
          "Organizational learning",
          "Adaptive strategy",
          "Strategic drift"
        ]
      },
      {
        "id": "position",
        "label": "Position",
        "icon": "🎯",
        "color": "#ff9900",
        "order": 3,
        "shortDescription": "Strategy as the place or niche the organization occupies in the external environment.",
        "fullDescription": "Strategy as Position focuses on where the organization locates itself in its environment - its place in the competitive landscape. This perspective is about finding and defending a unique position that provides sustainable competitive advantage.",
        "characteristics": [
          "Market-focused",
          "Competitive orientation",
          "External perspective",
          "Differentiation-based",
          "Sustainability concern",
          "Value proposition clarity"
        ],
        "examples": [
          {
            "company": "Volvo",
            "description": "Positioned as the safe car company, consistently reinforcing this position through product design, marketing, and brand messaging.",
            "outcome": "Strong brand loyalty and premium pricing in the safety-conscious segment."
          },
          {
            "company": "IKEA",
            "description": "Position as provider of affordable, well-designed furniture with unique shopping experience and DIY assembly.",
            "outcome": "Global leadership in furniture retail with a distinctive value proposition."
          },
          {
            "company": "Ritz-Carlton",
            "description": "Premium positioning in luxury hospitality with 'Ladies and Gentlemen serving Ladies and Gentlemen' philosophy.",
            "outcome": "Industry-leading customer satisfaction and premium pricing."
          }
        ],
        "tools": [
          "Porter's Five Forces",
          "Strategic group analysis",
          "Perceptual mapping",
          "Competitive positioning analysis",
          "Value proposition canvas",
          "Blue Ocean Strategy tools"
        ],
        "advantages": [
          "Clear competitive focus",
          "Sustainable differentiation",
          "Market clarity",
          "Resource allocation guidance",
          "Stakeholder understanding"
        ],
        "disadvantages": [
          "May become trapped in position",
          "Can ignore internal capabilities",
          "May miss market changes",
          "Risk of imitation",
          "Potential rigidity"
        ],
        "whenToUse": [
          "Competitive markets",
          "Mature industries",
          "Clear market segments",
          "When differentiation is possible",
          "Resource-constrained situations"
        ],
        "relatedConcepts": [
          "Competitive advantage",
          "Market positioning",
          "Differentiation",
          "Strategic groups"
        ]
      },
      {
        "id": "perspective",
        "label": "Perspective",
        "icon": "👁️",
        "color": "#109618",
        "order": 4,
        "shortDescription": "Strategy as a deeply embedded worldview or shared mindset that shapes actions.",
        "fullDescription": "Strategy as Perspective is about the organization's fundamental way of doing things - its deeply ingrained mindset, culture, and worldview. This perspective focuses on how organizations see and interpret their world, which shapes all their strategic choices.",
        "characteristics": [
          "Cultural foundation",
          "Shared worldview",
          "Value-based",
          "Identity-focused",
          "Long-term orientation",
          "Behavior-shaping"
        ],
        "examples": [
          {
            "company": "Patagonia",
            "description": "Environmental activism as core perspective, shaping every business decision from materials to marketing to encouraging customers to buy less.",
            "outcome": "Strong brand loyalty and authentic positioning in sustainable outdoor gear."
          },
          {
            "company": "Google",
            "description": "'Don't be evil' and democratizing information as organizing perspective, influencing product development and business model choices.",
            "outcome": "Consistent innovation focus and user-centric product development."
          },
          {
            "company": "Disney",
            "description": "Creating magical experiences perspective that shapes everything from theme park design to employee training ('cast members').",
            "outcome": "Distinctive customer experience and strong emotional brand connection."
          }
        ],
        "tools": [
          "Culture assessment tools",
          "Value clarification exercises",
          "Mission/vision development",
          "Organizational identity work",
          "Storytelling frameworks",
          "Behavioral change programs"
        ],
        "advantages": [
          "Strong organizational identity",
          "Consistent decision-making",
          "Employee alignment",
          "Authentic brand positioning",
          "Long-term sustainability"
        ],
        "disadvantages": [
          "Difficult to change",
          "May create blind spots",
          "Can resist necessary adaptation",
          "Hard to measure",
          "May limit strategic options"
        ],
        "whenToUse": [
          "Building organizational culture",
          "Long-term sustainability",
          "Brand differentiation",
          "Values-driven organizations",
          "Complex stakeholder environments"
        ],
        "relatedConcepts": [
          "Organizational culture",
          "Corporate identity",
          "Core values",
          "Strategic intent"
        ]
      },
      {
        "id": "ploy",
        "label": "Ploy",
        "icon": "🎭",
        "color": "#990099",
        "order": 5,
        "shortDescription": "Strategy as a specific maneuver or tactical action to outwit competitors.",
        "fullDescription": "Strategy as Ploy refers to specific maneuvers intended to outwit competitors. This perspective sees strategy as a series of moves and countermoves in competitive games, focusing on short-term tactical advantages and psychological warfare.",
        "characteristics": [
          "Competitive maneuvering",
          "Tactical focus",
          "Game-like thinking",
          "Surprise element",
          "Short-term orientation",
          "Opponent-focused"
        ],
        "examples": [
          {
            "company": "Walmart",
            "description": "Aggressive pricing ploys and strategic store locations to prevent competitor entry into small towns.",
            "outcome": "Market dominance in rural markets and successful urban expansion."
          },
          {
            "company": "Intel",
            "description": "'Intel Inside' campaign as a ploy to create end-user demand for their processors, bypassing computer manufacturers.",
            "outcome": "Brand recognition and pricing power in B2B commodity market."
          },
          {
            "company": "Netflix",
            "description": "Announcing multiple original content projects simultaneously to overwhelm competitors and capture talent.",
            "outcome": "First-mover advantage in streaming original content."
          }
        ],
        "tools": [
          "Game theory models",
          "Competitive intelligence",
          "Scenario planning",
          "War gaming exercises",
          "Timing analysis",
          "Signaling strategies"
        ],
        "advantages": [
          "Immediate competitive advantage",
          "Disrupts competitor plans",
          "Creates market opportunities",
          "Demonstrates market power",
          "Can be cost-effective"
        ],
        "disadvantages": [
          "May trigger retaliation===== SLUTT ./static/data/ps.json =====

===== START ./static/data/radarData.json =====
[
  {
    "school": "Design School",
    "group": "Prescriptive",
    "values": [5, 2, 3, 2, 1]
  },
  {
    "school": "Planning School", 
    "group": "Prescriptive",
    "values": [5, 1, 3, 2, 2]
  },
  {
    "school": "Positioning School",
    "group": "Prescriptive", 
    "values": [4, 2, 5, 2, 4]
  },
  {
    "school": "Entrepreneurial School",
    "group": "Descriptive",
    "values": [3, 3, 3, 5, 4]
  },
  {
    "school": "Cognitive School",
    "group": "Descriptive",
    "values": [2, 3, 2, 5, 1]
  },
  {
    "school": "Learning School",
    "group": "Descriptive", 
    "values": [2, 5, 3, 4, 2]
  },
  {
    "school": "Power School",
    "group": "Descriptive",
    "values": [3, 4, 4, 3, 5]
  },
  {
    "school": "Cultural School",
    "group": "Descriptive",
    "values": [2, 5, 3, 5, 1]
  },
  {
    "school": "Environmental School", 
    "group": "Descriptive",
    "values": [1, 4, 4, 2, 2]
  },
  {
    "school": "Configuration School",
    "group": "Descriptive",
    "values": [4, 4, 4, 4, 3]
  }
]===== SLUTT ./static/data/radarData.json =====

===== START ./static/data/schools.json =====
{
  "// static/data/schools-detailed.json": {
    "schools": [
      {
        "id": "design",
        "name": "Design School",
        "shortName": "Design",
        "group": "Prescriptive",
        "description": "Strategy as a process of conception — clear, deliberate design through internal fit.",
        "longDescription": "The Design School views strategy formation as a process of conception. It emphasizes the importance of fitting internal capabilities with external opportunities through deliberate, conscious design. This school focuses on creating clear strategic plans through systematic analysis.",
        "keyFigures": ["Kenneth Andrews", "Roland Christensen"],
        "originPeriod": "1960s",
        "coreBeliefs": [
          "Strategy should be explicit and clear",
          "There must be fit between internal capabilities and external environment",
          "The CEO is the chief strategist",
          "Simple structures work best"
        ],
        "strengths": [
          "Promotes clear thinking about strategy",
          "Ensures consideration of both internal and external factors",
          "Places responsibility clearly",
          "Works well in stable environments"
        ],
        "weaknesses": [
          "May oversimplify complex situations",
          "Assumes prediction is possible",
          "Limited learning during implementation",
          "Can be too rigid for dynamic environments"
        ],
        "values": [5, 2, 3, 2, 1],
        "pApproaches": {
          "plan": {
            "emphasis": 5,
            "description": "Highly structured planning process with clear steps from analysis to implementation",
            "characteristics": [
              "Systematic SWOT analysis",
              "Clear strategic choices",
              "Explicit formulation process",
              "Detailed implementation plans"
            ],
            "example": "A consulting firm conducting comprehensive industry analysis before developing a 5-year strategic plan"
          },
          "pattern": {
            "emphasis": 2,
            "description": "Limited recognition of emergent patterns, focuses on intended strategies",
            "characteristics": [
              "Strategy as conscious design",
              "Minimal attention to unintended consequences",
              "Focus on deliberate actions",
              "Pattern recognition mainly in analysis phase"
            ],
            "example": "Reviewing past performance mainly to inform future planning rather than learning from emergent behaviors"
          },
          "position": {
            "emphasis": 3,
            "description": "Moderate focus on competitive positioning through environmental analysis",
            "characteristics": [
              "Industry analysis",
              "Competitive assessment",
              "Market positioning",
              "Strategic fit with environment"
            ],
            "example": "Positioning a company in a market niche based on thorough competitive analysis"
          },
          "perspective": {
            "emphasis": 2,
            "description": "Some attention to organizational culture but secondary to analytical processes",
            "characteristics": [
              "Leadership vision important",
              "Culture considered in implementation",
              "Values alignment",
              "Shared understanding desired"
            ],
            "example": "CEO communicating strategic vision to ensure organizational alignment"
          },
          "ploy": {
            "emphasis": 1,
            "description": "Limited use of tactical maneuvers, prefers straightforward approaches",
            "characteristics": [
              "Honest competition",
              "Transparent strategies",
              "Focus on capability building",
              "Minimal gamesmanship"
            ],
            "example": "Competing through superior products rather than market manipulation"
          }
        }
      },
      {
        "id": "planning",
        "name": "Planning School",
        "shortName": "Planning",
        "group": "Prescriptive",
        "description": "Strategy as a formal process — rigorous steps from analysis to implementation.",
        "longDescription": "The Planning School treats strategy formation as a highly formal process with detailed procedures, extensive analysis, and comprehensive documentation. It emphasizes systematic approaches, quantitative analysis, and structured implementation with clear controls and measures.",
        "keyFigures": ["Igor Ansoff", "George Steiner"],
        "originPeriod": "1960s-1970s",
        "coreBeliefs": [
          "Strategy formation can be programmed",
          "Formal procedures ensure better strategies",
          "Quantitative analysis is essential",
          "Planning departments add value"
        ],
        "strengths": [
          "Ensures systematic analysis",
          "Provides detailed roadmaps",
          "Forces consideration of multiple scenarios",
          "Creates organizational discipline"
        ],
        "weaknesses": [
          "Can become bureaucratic",
          "May inhibit creativity and flexibility",
          "Assumes predictable environments",
          "Often disconnected from reality"
        ],
        "values": [5, 1, 3, 2, 2],
        "pApproaches": {
          "plan": {
            "emphasis": 5,
            "description": "Extensive formal planning with detailed procedures and documentation",
            "characteristics": [
              "Multi-year strategic plans",
              "Detailed financial projections",
              "Scenario planning",
              "Formal review processes"
            ],
            "example": "A corporation's annual strategic planning cycle with quarterly reviews and detailed budgets"
          },
          "pattern": {
            "emphasis": 1,
            "description": "Minimal recognition of emergent patterns, strong focus on intended plans",
            "characteristics": [
              "Strategy as programming",
              "Little learning during execution",
              "Adherence to original plans",
              "Control through measurement"
            ],
            "example": "Sticking to the strategic plan despite changing market conditions"
          },
          "position": {
            "emphasis": 3,
            "description": "Analytical positioning based on market research and competitive intelligence",
            "characteristics": [
              "Market research",
              "Competitive analysis",
              "Portfolio planning",
              "Growth-share matrices"
            ],
            "example": "Using BCG matrix to determine resource allocation across business units"
          },
          "perspective": {
            "emphasis": 2,
            "description": "Planning culture emphasized but may become mechanistic",
            "characteristics": [
              "Planning discipline",
              "Analytical mindset",
              "Process orientation",
              "Control focus"
            ],
            "example": "Building organizational capabilities in strategic planning and analysis"
          },
          "ploy": {
            "emphasis": 2,
            "description": "Some strategic moves planned in advance but limited tactical flexibility",
            "characteristics": [
              "Planned competitive responses",
              "Scheduled product launches",
              "Coordinated market entry",
              "Limited improvisation"
            ],
            "example": "Planning a coordinated response to competitor actions as part of strategic plan"
          }
        }
      },
      {
        "id": "positioning",
        "name": "Positioning School",
        "shortName": "Positioning",
        "group": "Prescriptive",
        "description": "Strategy as analytical positioning in the marketplace based on economic forces.",
        "longDescription": "The Positioning School focuses on strategy as the selection of optimal positions in markets based on rigorous industry analysis. It emphasizes competitive advantage through superior market positions, often using frameworks like Porter's Five Forces and generic strategies.",
        "keyFigures": ["Michael Porter", "Bruce Henderson"],
        "originPeriod": "1980s",
        "coreBeliefs": [
          "Strategy is about competitive positioning",
          "Industry structure determines profitability",
          "Generic strategies provide templates",
          "Analysis should drive strategy"
        ],
        "strengths": [
          "Provides analytical rigor",
          "Focuses on competitive advantage",
          "Offers practical frameworks",
          "Links strategy to performance"
        ],
        "weaknesses": [
          "May neglect organizational capabilities",
          "Assumes static industry structures",
          "Limited attention to innovation",
          "Can lead to imitation"
        ],
        "values": [4, 2, 5, 2, 4],
        "pApproaches": {
          "plan": {
            "emphasis": 4,
            "description": "Analytical planning based on industry and competitive analysis",
            "characteristics": [
              "Five Forces analysis",
              "Value chain analysis",
              "Competitive intelligence",
              "Strategic group mapping"
            ],
            "example": "Developing strategy based on comprehensive analysis of industry structure and competitive dynamics"
          },
          "pattern": {
            "emphasis": 2,
            "description": "Limited pattern recognition, focus on deliberate positioning choices",
            "characteristics": [
              "Strategy as choice",
              "Position-based thinking",
              "Minimal emergent learning",
              "Analysis-driven decisions"
            ],
            "example": "Maintaining strategic position despite market changes"
          },
          "position": {
            "emphasis": 5,
            "description": "Central focus on market positioning and competitive advantage",
            "characteristics": [
              "Generic strategies (cost, differentiation, focus)",
              "Market share battles",
              "Competitive positioning",
              "Industry analysis"
            ],
            "example": "Choosing to compete on cost leadership in a commodity market"
          },
          "perspective": {
            "emphasis": 2,
            "description": "Limited attention to internal culture, focus on market perspective",
            "characteristics": [
              "Market-oriented thinking",
              "Competitive mindset",
              "Analytical culture",
              "External focus"
            ],
            "example": "Developing a culture of competitive intelligence and market analysis"
          },
          "ploy": {
            "emphasis": 4,
            "description": "Significant use of competitive moves and strategic games",
            "characteristics": [
              "Competitive signaling",
              "Market entry timing",
              "Pricing strategies",
              "Strategic moves and countermoves"
            ],
            "example": "Using pricing as a strategic weapon to deter new entrants"
          }
        }
      },
      {
        "id": "entrepreneurial",
        "name": "Entrepreneurial School",
        "shortName": "Entrepreneurial",
        "group": "Descriptive",
        "description": "Strategy as vision — the leader's intuitive sense shaping direction.",
        "longDescription": "The Entrepreneurial School centers strategy around the leader's vision and intuitive grasp of direction. It emphasizes the role of the entrepreneur in sensing opportunities and driving strategic change through personal leadership and vision.",
        "keyFigures": ["Joseph Schumpeter", "Peter Drucker"],
        "originPeriod": "1980s",
        "coreBeliefs": [
          "Strategy emanates from leader's vision",
          "Intuition and judgment are crucial",
          "Flexibility and adaptability matter",
          "Opportunities drive strategy"
        ],
        "strengths": [
          "Enables rapid response to opportunities",
          "Provides clear direction and motivation",
          "Works well in uncertain environments",
          "Leverages leader's expertise"
        ],
        "weaknesses": [
          "Over-dependence on one person",
          "May lack systematic analysis",
          "Succession challenges",
          "Can be unrealistic or risky"
        ],
        "values": [3, 3, 3, 5, 4],
        "pApproaches": {
          "plan": {
            "emphasis": 3,
            "description": "Flexible planning guided by vision rather than rigid procedures",
            "characteristics": [
              "Vision-driven direction",
              "Flexible goal setting",
              "Opportunistic planning",
              "Intuitive decision making"
            ],
            "example": "A startup founder pivoting strategy based on market feedback and emerging opportunities"
          },
          "pattern": {
            "emphasis": 3,
            "description": "Recognition of patterns through entrepreneurial insight and market sensing",
            "characteristics": [
              "Opportunity recognition",
              "Pattern sensing",
              "Market timing",
              "Adaptive behavior"
            ],
            "example": "Recognizing emerging market trends and adjusting business model accordingly"
          },
          "position": {
            "emphasis": 3,
            "description": "Positioning based on vision and opportunity rather than analysis",
            "characteristics": [
              "Niche creation",
              "Market pioneering",
              "Vision-based positioning",
              "Opportunity exploitation"
            ],
            "example": "Creating a new market category through innovative product vision"
          },
          "perspective": {
            "emphasis": 5,
            "description": "Strong emphasis on leader's vision and organizational mission",
            "characteristics": [
              "Clear vision and mission",
              "Personal leadership",
              "Inspirational direction",
              "Shared purpose"
            ],
            "example": "Elon Musk's vision for sustainable transport driving Tesla's strategy"
          },
          "ploy": {
            "emphasis": 4,
            "description": "Strategic moves to exploit opportunities and outmaneuver competitors",
            "characteristics": [
              "First-mover advantage",
              "Surprise moves",
              "Rapid market entry",
              "Opportunistic tactics"
            ],
            "example": "Quickly entering a new market before competitors recognize the opportunity"
          }
        }
      },
      {
        "id": "cognitive",
        "name": "Cognitive School",
        "shortName": "Cognitive",
        "group": "Descriptive",
        "description": "Strategy as a mental process — shaped by how people perceive and process information.",
        "longDescription": "The Cognitive School focuses on strategy formation as a mental process, examining how managers' cognitive processes, biases, and mental models shape strategic thinking and decision-making.",
        "keyFigures": ["James March", "Herbert Simon"],
        "originPeriod": "1980s",
        "coreBeliefs": [
          "Strategy formation is a cognitive process",
          "Mental models shape perception",
          "Biases affect strategic thinking",
          "Information processing is limited"
        ],
        "strengths": [
          "Recognizes human limitations",
          "Explains strategic errors",
          "Emphasizes learning",
          "Addresses complexity"
        ],
        "weaknesses": [
          "Can be overly pessimistic",
          "Difficult to apply practically",
          "May paralyze decision making",
          "Limited prescriptive value"
        ],
        "values": [2, 3, 2, 5, 1],
        "pApproaches": {
          "plan": {
            "emphasis": 2,
            "description": "Planning limited by cognitive constraints and mental models",
            "characteristics": [
              "Bounded rationality",
              "Simplified models",
              "Cognitive shortcuts",
              "Limited information processing"
            ],
            "example": "Strategic planning influenced by management team's shared mental models and biases"
          },
          "pattern": {
            "emphasis": 3,
            "description": "Pattern recognition through cognitive processes and learning",
            "characteristics": [
              "Learning from experience",
              "Pattern matching",
              "Cognitive mapping",
              "Sense-making processes"
            ],
            "example": "Gradually recognizing strategic patterns through accumulated experience and reflection"
          },
          "position": {
            "emphasis": 2,
            "description": "Positioning shaped by cognitive biases and perceptual filters",
            "characteristics": [
              "Selective perception",
              "Cognitive biases",
              "Mental categorization",
              "Simplified representations"
            ],
            "example": "Market positioning influenced by management's mental model of customer needs"
          },
          "perspective": {
            "emphasis": 5,
            "description": "Central focus on mental models and cognitive frameworks",
            "characteristics": [
              "Shared mental models",
              "Cognitive frameworks",
              "Interpretive schemes",
              "Sense-making processes"
            ],
            "example": "Developing shared understanding of complex strategic challenges through dialogue and reflection"
          },
          "ploy": {
            "emphasis": 1,
            "description": "Limited strategic maneuvering due to cognitive constraints",
            "characteristics": [
              "Simple tactics",
              "Routine responses",
              "Limited creativity",
              "Risk aversion"
            ],
            "example": "Using familiar competitive responses rather than innovative strategic moves"
          }
        }
      },
      {
        "id": "learning",
        "name": "Learning School",
        "shortName": "Learning",
        "group": "Descriptive",
        "description": "Strategy as emergent — evolving through learning and adaptation.",
        "longDescription": "The Learning School views strategy as an emergent process that evolves through organizational learning, experimentation, and adaptation. It emphasizes the importance of learning from experience and adjusting strategy based on what works.",
        "keyFigures": ["Charles Lindblom", "James Quinn", "Henry Mintzberg"],
        "originPeriod": "1980s-1990s",
        "coreBeliefs": [
          "Strategy emerges through learning",
          "Organizations must experiment",
          "Everyone can be a strategist",
          "Adaptation is continuous"
        ],
        "strengths": [
          "Handles complexity well",
          "Encourages innovation",
          "Builds on experience",
          "Flexible and adaptive"
        ],
        "weaknesses": [
          "Can lack direction",
          "May be inefficient",
          "Difficult to control",
          "Can lead to drift"
        ],
        "values": [2, 5, 3, 4, 2],
        "pApproaches": {
          "plan": {
            "emphasis": 2,
            "description": "Minimal formal planning, emphasis on experimentation and adaptation",
            "characteristics": [
              "Emergent strategy",
              "Experimental approach",
              "Incremental steps",
              "Learning by doing"
            ],
            "example": "A tech company iterating product strategy based on user feedback and market response"
          },
          "pattern": {
            "emphasis": 5,
            "description": "Strong focus on recognizing and learning from emergent patterns",
            "characteristics": [
              "Pattern recognition",
              "Emergent strategy",
              "Learning from mistakes",
              "Adaptive behavior"
            ],
            "example": "3M discovering new markets through unplanned applications of existing technologies"
          },
          "position": {
            "emphasis": 3,
            "description": "Position evolves through market learning and customer feedback",
            "characteristics": [
              "Market experimentation",
              "Customer learning",
              "Iterative positioning",
              "Adaptive positioning"
            ],
            "example": "Gradually refining market position through customer feedback and competitive learning"
          },
          "perspective": {
            "emphasis": 4,
            "description": "Learning culture and mindset central to organizational capability",
            "characteristics": [
              "Learning organization",
              "Experimentation culture",
              "Knowledge sharing",
              "Continuous improvement"
            ],
            "example": "Toyota's continuous improvement culture enabling strategic adaptation"
          },
          "ploy": {
            "emphasis": 2,
            "description": "Limited planned moves, more reactive and adaptive tactics",
            "characteristics": [
              "Responsive moves",
              "Adaptive tactics",
              "Trial and error",
              "Opportunistic responses"
            ],
            "example": "Responding to competitor moves through experimentation rather than predetermined plans"
          }
        }
      }
    ]
  }
}===== SLUTT ./static/data/schools.json =====

===== START ./tsconfig.json =====
{
	"extends": "./.svelte-kit/tsconfig.json",
	"compilerOptions": {
		"allowJs": true,
		"checkJs": true,
		"esModuleInterop": true,
		"forceConsistentCasingInFileNames": true,
		"resolveJsonModule": true,
		"skipLibCheck": true,
		"sourceMap": true,
		"strict": true,
		"moduleResolution": "bundler"
	}
	// Path aliases are handled by https://svelte.dev/docs/kit/configuration#alias
	// except $lib which is handled by https://svelte.dev/docs/kit/configuration#files
	//
	// If you want to overwrite includes/excludes, make sure to copy over the relevant includes/excludes
	// from the referenced tsconfig.json - TypeScript does not merge them in
}
===== SLUTT ./tsconfig.json =====

===== START ./.svelte-kit/generated/server/internal.js =====

import root from '../root.js';
import { set_building, set_prerendering } from '__sveltekit/environment';
import { set_assets } from '__sveltekit/paths';
import { set_manifest, set_read_implementation } from '__sveltekit/server';
import { set_private_env, set_public_env, set_safe_public_env } from '../../../node_modules/@sveltejs/kit/src/runtime/shared-server.js';

export const options = {
	app_template_contains_nonce: false,
	csp: {"mode":"auto","directives":{"upgrade-insecure-requests":false,"block-all-mixed-content":false},"reportOnly":{"upgrade-insecure-requests":false,"block-all-mixed-content":false}},
	csrf_check_origin: true,
	embedded: false,
	env_public_prefix: 'PUBLIC_',
	env_private_prefix: '',
	hash_routing: false,
	hooks: null, // added lazily, via `get_hooks`
	preload_strategy: "modulepreload",
	root,
	service_worker: false,
	templates: {
		app: ({ head, body, assets, nonce, env }) => "<!doctype html>\n<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"utf-8\" />\n\t\t<link rel=\"icon\" href=\"" + assets + "/favicon.png\" />\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n\t\t" + head + "\n\t</head>\n\t<body data-sveltekit-preload-data=\"hover\">\n\t\t<div style=\"display: contents\">" + body + "</div>\n\t</body>\n</html>\n",
		error: ({ status, message }) => "<!doctype html>\n<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"utf-8\" />\n\t\t<title>" + message + "</title>\n\n\t\t<style>\n\t\t\tbody {\n\t\t\t\t--bg: white;\n\t\t\t\t--fg: #222;\n\t\t\t\t--divider: #ccc;\n\t\t\t\tbackground: var(--bg);\n\t\t\t\tcolor: var(--fg);\n\t\t\t\tfont-family:\n\t\t\t\t\tsystem-ui,\n\t\t\t\t\t-apple-system,\n\t\t\t\t\tBlinkMacSystemFont,\n\t\t\t\t\t'Segoe UI',\n\t\t\t\t\tRoboto,\n\t\t\t\t\tOxygen,\n\t\t\t\t\tUbuntu,\n\t\t\t\t\tCantarell,\n\t\t\t\t\t'Open Sans',\n\t\t\t\t\t'Helvetica Neue',\n\t\t\t\t\tsans-serif;\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tjustify-content: center;\n\t\t\t\theight: 100vh;\n\t\t\t\tmargin: 0;\n\t\t\t}\n\n\t\t\t.error {\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tmax-width: 32rem;\n\t\t\t\tmargin: 0 1rem;\n\t\t\t}\n\n\t\t\t.status {\n\t\t\t\tfont-weight: 200;\n\t\t\t\tfont-size: 3rem;\n\t\t\t\tline-height: 1;\n\t\t\t\tposition: relative;\n\t\t\t\ttop: -0.05rem;\n\t\t\t}\n\n\t\t\t.message {\n\t\t\t\tborder-left: 1px solid var(--divider);\n\t\t\t\tpadding: 0 0 0 1rem;\n\t\t\t\tmargin: 0 0 0 1rem;\n\t\t\t\tmin-height: 2.5rem;\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t}\n\n\t\t\t.message h1 {\n\t\t\t\tfont-weight: 400;\n\t\t\t\tfont-size: 1em;\n\t\t\t\tmargin: 0;\n\t\t\t}\n\n\t\t\t@media (prefers-color-scheme: dark) {\n\t\t\t\tbody {\n\t\t\t\t\t--bg: #222;\n\t\t\t\t\t--fg: #ddd;\n\t\t\t\t\t--divider: #666;\n\t\t\t\t}\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div class=\"error\">\n\t\t\t<span class=\"status\">" + status + "</span>\n\t\t\t<div class=\"message\">\n\t\t\t\t<h1>" + message + "</h1>\n\t\t\t</div>\n\t\t</div>\n\t</body>\n</html>\n"
	},
	version_hash: "hxc14l"
};

export async function get_hooks() {
	let handle;
	let handleFetch;
	let handleError;
	let init;
	

	let reroute;
	let transport;
	

	return {
		handle,
		handleFetch,
		handleError,
		init,
		reroute,
		transport
	};
}

export { set_assets, set_building, set_manifest, set_prerendering, set_private_env, set_public_env, set_read_implementation, set_safe_public_env };
===== SLUTT ./.svelte-kit/generated/server/internal.js =====

===== START ./.svelte-kit/generated/root.js =====
import { asClassComponent } from 'svelte/legacy';
import Root from './root.svelte';
export default asClassComponent(Root);===== SLUTT ./.svelte-kit/generated/root.js =====

===== START ./.svelte-kit/generated/root.svelte =====
<!-- This file is generated by @sveltejs/kit — do not edit it! -->
<svelte:options runes={true} />
<script>
	import { setContext, onMount, tick } from 'svelte';
	import { browser } from '$app/environment';

	// stores
	let { stores, page, constructors, components = [], form, data_0 = null, data_1 = null } = $props();

	if (!browser) {
		setContext('__svelte__', stores);
	}

	if (browser) {
		$effect.pre(() => stores.page.set(page));
	} else {
		stores.page.set(page);
	}
	$effect(() => {
		stores;page;constructors;components;form;data_0;data_1;
		stores.page.notify();
	});

	let mounted = $state(false);
	let navigated = $state(false);
	let title = $state(null);

	onMount(() => {
		const unsubscribe = stores.page.subscribe(() => {
			if (mounted) {
				navigated = true;
				tick().then(() => {
					title = document.title || 'untitled page';
				});
			}
		});

		mounted = true;
		return unsubscribe;
	});

	const Pyramid_1=$derived(constructors[1])
</script>

{#if constructors[1]}
	{@const Pyramid_0 = constructors[0]}
							<!-- svelte-ignore binding_property_non_reactive -->
							<Pyramid_0 bind:this={components[0]} data={data_0} {form}>
								<!-- svelte-ignore binding_property_non_reactive -->
										<Pyramid_1 bind:this={components[1]} data={data_1} {form} />
							</Pyramid_0>
	
{:else}
	{@const Pyramid_0 = constructors[0]}
	<!-- svelte-ignore binding_property_non_reactive -->
	<Pyramid_0 bind:this={components[0]} data={data_0} {form} />
	
{/if}

{#if mounted}
	<div id="svelte-announcer" aria-live="assertive" aria-atomic="true" style="position: absolute; left: 0; top: 0; clip: rect(0 0 0 0); clip-path: inset(50%); overflow: hidden; white-space: nowrap; width: 1px; height: 1px">
		{#if navigated}
			{title}
		{/if}
	</div>
{/if}===== SLUTT ./.svelte-kit/generated/root.svelte =====

===== START ./.svelte-kit/generated/client/nodes/2.js =====
export { default as component } from "../../../../src/routes/+page.svelte";===== SLUTT ./.svelte-kit/generated/client/nodes/2.js =====

===== START ./.svelte-kit/generated/client/nodes/6.js =====
export { default as component } from "../../../../src/routes/schools/+page.svelte";===== SLUTT ./.svelte-kit/generated/client/nodes/6.js =====

===== START ./.svelte-kit/generated/client/nodes/3.js =====
export { default as component } from "../../../../src/routes/about/+page.svelte";===== SLUTT ./.svelte-kit/generated/client/nodes/3.js =====

===== START ./.svelte-kit/generated/client/nodes/4.js =====
export { default as component } from "../../../../src/routes/ps/+page.svelte";===== SLUTT ./.svelte-kit/generated/client/nodes/4.js =====

===== START ./.svelte-kit/generated/client/nodes/0.js =====
export { default as component } from "../../../../src/routes/+layout.svelte";===== SLUTT ./.svelte-kit/generated/client/nodes/0.js =====

===== START ./.svelte-kit/generated/client/nodes/1.js =====
export { default as component } from "../../../../node_modules/@sveltejs/kit/src/runtime/components/svelte-5/error.svelte";===== SLUTT ./.svelte-kit/generated/client/nodes/1.js =====

===== START ./.svelte-kit/generated/client/nodes/5.js =====
import * as universal from "../../../../src/routes/radar/+page.ts";
export { universal };
export { default as component } from "../../../../src/routes/radar/+page.svelte";===== SLUTT ./.svelte-kit/generated/client/nodes/5.js =====

===== START ./.svelte-kit/generated/client/matchers.js =====
export const matchers = {};===== SLUTT ./.svelte-kit/generated/client/matchers.js =====

===== START ./.svelte-kit/generated/client/app.js =====
export { matchers } from './matchers.js';

export const nodes = [
	() => import('./nodes/0'),
	() => import('./nodes/1'),
	() => import('./nodes/2'),
	() => import('./nodes/3'),
	() => import('./nodes/4'),
	() => import('./nodes/5'),
	() => import('./nodes/6')
];

export const server_loads = [];

export const dictionary = {
		"/": [2],
		"/about": [3],
		"/ps": [4],
		"/radar": [5],
		"/schools": [6]
	};

export const hooks = {
	handleError: (({ error }) => { console.error(error) }),
	
	reroute: (() => {}),
	transport: {}
};

export const decoders = Object.fromEntries(Object.entries(hooks.transport).map(([k, v]) => [k, v.decode]));

export const hash = false;

export const decode = (type, value) => decoders[type](value);

export { default as root } from '../root.js';===== SLUTT ./.svelte-kit/generated/client/app.js =====

===== START ./.svelte-kit/non-ambient.d.ts =====

// this file is generated — do not edit it


declare module "svelte/elements" {
	export interface HTMLAttributes<T> {
		'data-sveltekit-keepfocus'?: true | '' | 'off' | undefined | null;
		'data-sveltekit-noscroll'?: true | '' | 'off' | undefined | null;
		'data-sveltekit-preload-code'?:
			| true
			| ''
			| 'eager'
			| 'viewport'
			| 'hover'
			| 'tap'
			| 'off'
			| undefined
			| null;
		'data-sveltekit-preload-data'?: true | '' | 'hover' | 'tap' | 'off' | undefined | null;
		'data-sveltekit-reload'?: true | '' | 'off' | undefined | null;
		'data-sveltekit-replacestate'?: true | '' | 'off' | undefined | null;
	}
}

export {};
===== SLUTT ./.svelte-kit/non-ambient.d.ts =====

===== START ./.svelte-kit/types/route_meta_data.json =====
{
	"/": [],
	"/about": [],
	"/ps": [],
	"/radar": [
		"src/routes/radar/+page.ts"
	],
	"/schools": []
}===== SLUTT ./.svelte-kit/types/route_meta_data.json =====

===== START ./.svelte-kit/types/src/routes/about/$types.d.ts =====
import type * as Kit from '@sveltejs/kit';

type Expand<T> = T extends infer O ? { [K in keyof O]: O[K] } : never;
// @ts-ignore
type MatcherParam<M> = M extends (param : string) => param is infer U ? U extends string ? U : string : string;
type RouteParams = {  };
type RouteId = '/about';
type MaybeWithVoid<T> = {} extends T ? T | void : T;
export type RequiredKeys<T> = { [K in keyof T]-?: {} extends { [P in K]: T[K] } ? never : K; }[keyof T];
type OutputDataShape<T> = MaybeWithVoid<Omit<App.PageData, RequiredKeys<T>> & Partial<Pick<App.PageData, keyof T & keyof App.PageData>> & Record<string, any>>
type EnsureDefined<T> = T extends null | undefined ? {} : T;
type OptionalUnion<U extends Record<string, any>, A extends keyof U = U extends U ? keyof U : never> = U extends unknown ? { [P in Exclude<A, keyof U>]?: never } & U : never;
export type Snapshot<T = any> = Kit.Snapshot<T>;
type PageParentData = EnsureDefined<import('../$types.js').LayoutData>;

export type PageServerData = null;
export type PageData = Expand<PageParentData>;
export type PageProps = { data: PageData }===== SLUTT ./.svelte-kit/types/src/routes/about/$types.d.ts =====

===== START ./.svelte-kit/types/src/routes/ps/$types.d.ts =====
import type * as Kit from '@sveltejs/kit';

type Expand<T> = T extends infer O ? { [K in keyof O]: O[K] } : never;
// @ts-ignore
type MatcherParam<M> = M extends (param : string) => param is infer U ? U extends string ? U : string : string;
type RouteParams = {  };
type RouteId = '/ps';
type MaybeWithVoid<T> = {} extends T ? T | void : T;
export type RequiredKeys<T> = { [K in keyof T]-?: {} extends { [P in K]: T[K] } ? never : K; }[keyof T];
type OutputDataShape<T> = MaybeWithVoid<Omit<App.PageData, RequiredKeys<T>> & Partial<Pick<App.PageData, keyof T & keyof App.PageData>> & Record<string, any>>
type EnsureDefined<T> = T extends null | undefined ? {} : T;
type OptionalUnion<U extends Record<string, any>, A extends keyof U = U extends U ? keyof U : never> = U extends unknown ? { [P in Exclude<A, keyof U>]?: never } & U : never;
export type Snapshot<T = any> = Kit.Snapshot<T>;
type PageParentData = EnsureDefined<import('../$types.js').LayoutData>;

export type PageServerData = null;
export type PageData = Expand<PageParentData>;
export type PageProps = { data: PageData }===== SLUTT ./.svelte-kit/types/src/routes/ps/$types.d.ts =====

===== START ./.svelte-kit/types/src/routes/radar/proxy+page.ts =====
// @ts-nocheck
// File: src/routes/radar/+page.ts
import type { PageLoad } from './$types';

export const load = async ({ fetch }: Parameters<PageLoad>[0]) => {
	const res = await fetch('/data/radarData.json');

	if (!res.ok) {
		throw new Error('Kunne ikke hente radarData.json');
	}

	const radarData = await res.json();
	return { radarData };
};
===== SLUTT ./.svelte-kit/types/src/routes/radar/proxy+page.ts =====

===== START ./.svelte-kit/types/src/routes/radar/$types.d.ts =====
import type * as Kit from '@sveltejs/kit';

type Expand<T> = T extends infer O ? { [K in keyof O]: O[K] } : never;
// @ts-ignore
type MatcherParam<M> = M extends (param : string) => param is infer U ? U extends string ? U : string : string;
type RouteParams = {  };
type RouteId = '/radar';
type MaybeWithVoid<T> = {} extends T ? T | void : T;
export type RequiredKeys<T> = { [K in keyof T]-?: {} extends { [P in K]: T[K] } ? never : K; }[keyof T];
type OutputDataShape<T> = MaybeWithVoid<Omit<App.PageData, RequiredKeys<T>> & Partial<Pick<App.PageData, keyof T & keyof App.PageData>> & Record<string, any>>
type EnsureDefined<T> = T extends null | undefined ? {} : T;
type OptionalUnion<U extends Record<string, any>, A extends keyof U = U extends U ? keyof U : never> = U extends unknown ? { [P in Exclude<A, keyof U>]?: never } & U : never;
export type Snapshot<T = any> = Kit.Snapshot<T>;
type PageParentData = EnsureDefined<import('../$types.js').LayoutData>;

export type PageServerData = null;
export type PageLoad<OutputData extends OutputDataShape<PageParentData> = OutputDataShape<PageParentData>> = Kit.Load<RouteParams, PageServerData, PageParentData, OutputData, RouteId>;
export type PageLoadEvent = Parameters<PageLoad>[0];
export type PageData = Expand<Omit<PageParentData, keyof Kit.LoadProperties<Awaited<ReturnType<typeof import('./proxy+page.js').load>>>> & OptionalUnion<EnsureDefined<Kit.LoadProperties<Awaited<ReturnType<typeof import('./proxy+page.js').load>>>>>>;
export type PageProps = { data: PageData }===== SLUTT ./.svelte-kit/types/src/routes/radar/$types.d.ts =====

===== START ./.svelte-kit/types/src/routes/schools/$types.d.ts =====
import type * as Kit from '@sveltejs/kit';

type Expand<T> = T extends infer O ? { [K in keyof O]: O[K] } : never;
// @ts-ignore
type MatcherParam<M> = M extends (param : string) => param is infer U ? U extends string ? U : string : string;
type RouteParams = {  };
type RouteId = '/schools';
type MaybeWithVoid<T> = {} extends T ? T | void : T;
export type RequiredKeys<T> = { [K in keyof T]-?: {} extends { [P in K]: T[K] } ? never : K; }[keyof T];
type OutputDataShape<T> = MaybeWithVoid<Omit<App.PageData, RequiredKeys<T>> & Partial<Pick<App.PageData, keyof T & keyof App.PageData>> & Record<string, any>>
type EnsureDefined<T> = T extends null | undefined ? {} : T;
type OptionalUnion<U extends Record<string, any>, A extends keyof U = U extends U ? keyof U : never> = U extends unknown ? { [P in Exclude<A, keyof U>]?: never } & U : never;
export type Snapshot<T = any> = Kit.Snapshot<T>;
type PageParentData = EnsureDefined<import('../$types.js').LayoutData>;

export type PageServerData = null;
export type PageData = Expand<PageParentData>;
export type PageProps = { data: PageData }===== SLUTT ./.svelte-kit/types/src/routes/schools/$types.d.ts =====

===== START ./.svelte-kit/types/src/routes/$types.d.ts =====
import type * as Kit from '@sveltejs/kit';

type Expand<T> = T extends infer O ? { [K in keyof O]: O[K] } : never;
// @ts-ignore
type MatcherParam<M> = M extends (param : string) => param is infer U ? U extends string ? U : string : string;
type RouteParams = {  };
type RouteId = '/';
type MaybeWithVoid<T> = {} extends T ? T | void : T;
export type RequiredKeys<T> = { [K in keyof T]-?: {} extends { [P in K]: T[K] } ? never : K; }[keyof T];
type OutputDataShape<T> = MaybeWithVoid<Omit<App.PageData, RequiredKeys<T>> & Partial<Pick<App.PageData, keyof T & keyof App.PageData>> & Record<string, any>>
type EnsureDefined<T> = T extends null | undefined ? {} : T;
type OptionalUnion<U extends Record<string, any>, A extends keyof U = U extends U ? keyof U : never> = U extends unknown ? { [P in Exclude<A, keyof U>]?: never } & U : never;
export type Snapshot<T = any> = Kit.Snapshot<T>;
type PageParentData = EnsureDefined<LayoutData>;
type LayoutRouteId = RouteId | "/" | "/about" | "/ps" | "/radar" | "/schools" | null
type LayoutParams = RouteParams & {  }
type LayoutParentData = EnsureDefined<{}>;

export type PageServerData = null;
export type PageData = Expand<PageParentData>;
export type PageProps = { data: PageData }
export type LayoutServerData = null;
export type LayoutData = Expand<LayoutParentData>;
export type LayoutProps = { data: LayoutData; children: import("svelte").Snippet }===== SLUTT ./.svelte-kit/types/src/routes/$types.d.ts =====

===== START ./.svelte-kit/ambient.d.ts =====

// this file is generated — do not edit it


/// <reference types="@sveltejs/kit" />

/**
 * Environment variables [loaded by Vite](https://vitejs.dev/guide/env-and-mode.html#env-files) from `.env` files and `process.env`. Like [`$env/dynamic/private`](https://svelte.dev/docs/kit/$env-dynamic-private), this module cannot be imported into client-side code. This module only includes variables that _do not_ begin with [`config.kit.env.publicPrefix`](https://svelte.dev/docs/kit/configuration#env) _and do_ start with [`config.kit.env.privatePrefix`](https://svelte.dev/docs/kit/configuration#env) (if configured).
 * 
 * _Unlike_ [`$env/dynamic/private`](https://svelte.dev/docs/kit/$env-dynamic-private), the values exported from this module are statically injected into your bundle at build time, enabling optimisations like dead code elimination.
 * 
 * ```ts
 * import { API_KEY } from '$env/static/private';
 * ```
 * 
 * Note that all environment variables referenced in your code should be declared (for example in an `.env` file), even if they don't have a value until the app is deployed:
 * 
 * ```
 * MY_FEATURE_FLAG=""
 * ```
 * 
 * You can override `.env` values from the command line like so:
 * 
 * ```bash
 * MY_FEATURE_FLAG="enabled" npm run dev
 * ```
 */
declare module '$env/static/private' {
	export const TERM_PROGRAM: string;
	export const NODE: string;
	export const INIT_CWD: string;
	export const SHELL: string;
	export const TERM: string;
	export const HOMEBREW_REPOSITORY: string;
	export const TMPDIR: string;
	export const npm_config_global_prefix: string;
	export const TERM_PROGRAM_VERSION: string;
	export const COLOR: string;
	export const TERM_SESSION_ID: string;
	export const npm_config_noproxy: string;
	export const npm_config_local_prefix: string;
	export const USER: string;
	export const npm_config_globalconfig: string;
	export const SSH_AUTH_SOCK: string;
	export const __CF_USER_TEXT_ENCODING: string;
	export const npm_execpath: string;
	export const PATH: string;
	export const npm_package_json: string;
	export const npm_config_engine_strict: string;
	export const _: string;
	export const npm_config_userconfig: string;
	export const npm_config_init_module: string;
	export const __CFBundleIdentifier: string;
	export const npm_command: string;
	export const PWD: string;
	export const npm_lifecycle_event: string;
	export const EDITOR: string;
	export const npm_package_name: string;
	export const npm_config_npm_version: string;
	export const XPC_FLAGS: string;
	export const npm_config_node_gyp: string;
	export const npm_package_version: string;
	export const XPC_SERVICE_NAME: string;
	export const SHLVL: string;
	export const HOME: string;
	export const HOMEBREW_PREFIX: string;
	export const npm_config_cache: string;
	export const LOGNAME: string;
	export const npm_lifecycle_script: string;
	export const LC_CTYPE: string;
	export const npm_config_user_agent: string;
	export const INFOPATH: string;
	export const HOMEBREW_CELLAR: string;
	export const npm_node_execpath: string;
	export const npm_config_prefix: string;
	export const NODE_ENV: string;
}

/**
 * Similar to [`$env/static/private`](https://svelte.dev/docs/kit/$env-static-private), except that it only includes environment variables that begin with [`config.kit.env.publicPrefix`](https://svelte.dev/docs/kit/configuration#env) (which defaults to `PUBLIC_`), and can therefore safely be exposed to client-side code.
 * 
 * Values are replaced statically at build time.
 * 
 * ```ts
 * import { PUBLIC_BASE_URL } from '$env/static/public';
 * ```
 */
declare module '$env/static/public' {
	
}

/**
 * This module provides access to runtime environment variables, as defined by the platform you're running on. For example if you're using [`adapter-node`](https://github.com/sveltejs/kit/tree/main/packages/adapter-node) (or running [`vite preview`](https://svelte.dev/docs/kit/cli)), this is equivalent to `process.env`. This module only includes variables that _do not_ begin with [`config.kit.env.publicPrefix`](https://svelte.dev/docs/kit/configuration#env) _and do_ start with [`config.kit.env.privatePrefix`](https://svelte.dev/docs/kit/configuration#env) (if configured).
 * 
 * This module cannot be imported into client-side code.
 * 
 * Dynamic environment variables cannot be used during prerendering.
 * 
 * ```ts
 * import { env } from '$env/dynamic/private';
 * console.log(env.DEPLOYMENT_SPECIFIC_VARIABLE);
 * ```
 * 
 * > In `dev`, `$env/dynamic` always includes environment variables from `.env`. In `prod`, this behavior will depend on your adapter.
 */
declare module '$env/dynamic/private' {
	export const env: {
		TERM_PROGRAM: string;
		NODE: string;
		INIT_CWD: string;
		SHELL: string;
		TERM: string;
		HOMEBREW_REPOSITORY: string;
		TMPDIR: string;
		npm_config_global_prefix: string;
		TERM_PROGRAM_VERSION: string;
		COLOR: string;
		TERM_SESSION_ID: string;
		npm_config_noproxy: string;
		npm_config_local_prefix: string;
		USER: string;
		npm_config_globalconfig: string;
		SSH_AUTH_SOCK: string;
		__CF_USER_TEXT_ENCODING: string;
		npm_execpath: string;
		PATH: string;
		npm_package_json: string;
		npm_config_engine_strict: string;
		_: string;
		npm_config_userconfig: string;
		npm_config_init_module: string;
		__CFBundleIdentifier: string;
		npm_command: string;
		PWD: string;
		npm_lifecycle_event: string;
		EDITOR: string;
		npm_package_name: string;
		npm_config_npm_version: string;
		XPC_FLAGS: string;
		npm_config_node_gyp: string;
		npm_package_version: string;
		XPC_SERVICE_NAME: string;
		SHLVL: string;
		HOME: string;
		HOMEBREW_PREFIX: string;
		npm_config_cache: string;
		LOGNAME: string;
		npm_lifecycle_script: string;
		LC_CTYPE: string;
		npm_config_user_agent: string;
		INFOPATH: string;
		HOMEBREW_CELLAR: string;
		npm_node_execpath: string;
		npm_config_prefix: string;
		NODE_ENV: string;
		[key: `PUBLIC_${string}`]: undefined;
		[key: `${string}`]: string | undefined;
	}
}

/**
 * Similar to [`$env/dynamic/private`](https://svelte.dev/docs/kit/$env-dynamic-private), but only includes variables that begin with [`config.kit.env.publicPrefix`](https://svelte.dev/docs/kit/configuration#env) (which defaults to `PUBLIC_`), and can therefore safely be exposed to client-side code.
 * 
 * Note that public dynamic environment variables must all be sent from the server to the client, causing larger network requests — when possible, use `$env/static/public` instead.
 * 
 * Dynamic environment variables cannot be used during prerendering.
 * 
 * ```ts
 * import { env } from '$env/dynamic/public';
 * console.log(env.PUBLIC_DEPLOYMENT_SPECIFIC_VARIABLE);
 * ```
 */
declare module '$env/dynamic/public' {
	export const env: {
		[key: `PUBLIC_${string}`]: string | undefined;
	}
}
===== SLUTT ./.svelte-kit/ambient.d.ts =====

===== START ./.svelte-kit/tsconfig.json =====
{
	"compilerOptions": {
		"paths": {
			"$lib": [
				"../src/lib"
			],
			"$lib/*": [
				"../src/lib/*"
			]
		},
		"rootDirs": [
			"..",
			"./types"
		],
		"verbatimModuleSyntax": true,
		"isolatedModules": true,
		"lib": [
			"esnext",
			"DOM",
			"DOM.Iterable"
		],
		"moduleResolution": "bundler",
		"module": "esnext",
		"noEmit": true,
		"target": "esnext"
	},
	"include": [
		"ambient.d.ts",
		"non-ambient.d.ts",
		"./types/**/$types.d.ts",
		"../vite.config.js",
		"../vite.config.ts",
		"../src/**/*.js",
		"../src/**/*.ts",
		"../src/**/*.svelte",
		"../tests/**/*.js",
		"../tests/**/*.ts",
		"../tests/**/*.svelte"
	],
	"exclude": [
		"../node_modules/**",
		"../src/service-worker.js",
		"../src/service-worker/**/*.js",
		"../src/service-worker.ts",
		"../src/service-worker/**/*.ts",
		"../src/service-worker.d.ts",
		"../src/service-worker/**/*.d.ts"
	]
}===== SLUTT ./.svelte-kit/tsconfig.json =====

===== START ./eslint.config.js =====
import prettier from 'eslint-config-prettier';
import js from '@eslint/js';
import { includeIgnoreFile } from '@eslint/compat';
import svelte from 'eslint-plugin-svelte';
import globals from 'globals';
import { fileURLToPath } from 'node:url';
import ts from 'typescript-eslint';
import svelteConfig from './svelte.config.js';

const gitignorePath = fileURLToPath(new URL('./.gitignore', import.meta.url));

export default ts.config(
	includeIgnoreFile(gitignorePath),
	js.configs.recommended,
	...ts.configs.recommended,
	...svelte.configs.recommended,
	prettier,
	...svelte.configs.prettier,
	{
		languageOptions: {
			globals: { ...globals.browser, ...globals.node }
		},
		rules: { 'no-undef': 'off' }
	},
	{
		files: ['**/*.svelte', '**/*.svelte.ts', '**/*.svelte.js'],
		languageOptions: {
			parserOptions: {
				projectService: true,
				extraFileExtensions: ['.svelte'],
				parser: ts.parser,
				svelteConfig
			}
		}
	}
);
===== SLUTT ./eslint.config.js =====

===== START ./vite.config.ts =====
import { sveltekit } from '@sveltejs/kit/vite';
import { defineConfig } from 'vite';

export default defineConfig({
	plugins: [sveltekit()],
	css: {
		postcss: './postcss.config.js',
	},
	test: {
		workspace: [
			{
				extends: './vite.config.ts',
				test: {
					name: 'client',
					environment: 'jsdom',
					clearMocks: true,
					include: ['src/**/*.svelte.{test,spec}.{js,ts}'],
					exclude: ['src/lib/server/**'],
					setupFiles: ['./vitest-setup-client.ts']
				}
			}
		]
	}
});===== SLUTT ./vite.config.ts =====

===== START ./postcss.config.js =====
export default {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
};===== SLUTT ./postcss.config.js =====

===== START ./src/demo.spec.ts =====
import { describe, it, expect } from 'vitest';

describe('sum test', () => {
	it('adds 1 + 2 to equal 3', () => {
		expect(1 + 2).toBe(3);
	});
});
===== SLUTT ./src/demo.spec.ts =====

===== START ./src/app.d.ts =====
// See https://svelte.dev/docs/kit/types#app.d.ts
// for information about these interfaces
declare global {
	namespace App {
		// interface Error {}
		// interface Locals {}
		// interface PageData {}
		// interface PageState {}
		// interface Platform {}
	}
}

export {};
===== SLUTT ./src/app.d.ts =====

===== START ./src/app.css =====
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Design tokens via CSS variables (HSL-format) */
:root {
  --background: 0 0% 100%;
  --foreground: 222.2 47.4% 11.2%;
  --card: 0 0% 100%;
  --card-foreground: 222.2 47.4% 11.2%;
  --muted: 210 40% 96.1%;
  --muted-foreground: 215.4 16.3% 46.9%;
  --border: 214.3 31.8% 91.4%;
  --primary: 221.2 83.2% 53.3%;
  --primary-foreground: 210 40% 98%;
  --secondary: 210 40% 96.1%;
  --secondary-foreground: 222.2 47.4% 11.2%;
}

.dark {
  --background: 222.2 84% 4.9%;
  --foreground: 210 40% 98%;
  --card: 222.2 84% 4.9%;
  --card-foreground: 210 40% 98%;
  --muted: 217.2 32.6% 17.5%;
  --muted-foreground: 215 20.2% 65.1%;
  --border: 217.2 32.6% 17.5%;
  --primary: 217.2 91.2% 59.8%;
  --primary-foreground: 222.2 47.4% 11.2%;
  --secondary: 217.2 32.6% 17.5%;
  --secondary-foreground: 210 40% 98%;
}

/* Root layout styles */
body {
  @apply bg-background text-foreground antialiased font-sans;
}===== SLUTT ./src/app.css =====

===== START ./src/lib/utils/dataAdapeter.ts =====
// src/lib/utils/dataAdapter.ts
import type { EnhancedSchoolData, RadarSchoolData } from '$lib/types';

/**
 * Adapter for converting between enhanced school data and radar data formats
 */
export class SchoolDataAdapter {
  
  /**
   * Convert enhanced school data to radar format for chart compatibility
   */
  static toRadarFormat(schools: EnhancedSchoolData[]): RadarSchoolData[] {
    return schools.map(school => ({
      school: school.name,
      group: school.group,
      values: school.values
    }));
  }

  /**
   * Convert radar data back to enhanced format (with limited data)
   */
  static fromRadarFormat(radarData: RadarSchoolData[]): Partial<EnhancedSchoolData>[] {
    return radarData.map(data => ({
      id: data.school.toLowerCase().replace(/\s+/g, '-'),
      name: data.school,
      shortName: data.school.replace(' School', ''),
      group: data.group,
      description: `The ${data.school} approach to strategy formation`,
      longDescription: '',
      keyFigures: [],
      originPeriod: '',
      coreBeliefs: [],
      strengths: [],
      weaknesses: [],
      values: data.values,
      pApproaches: {
        plan: { emphasis: data.values[0], description: '', characteristics: [] },
        pattern: { emphasis: data.values[1], description: '', characteristics: [] },
        position: { emphasis: data.values[2], description: '', characteristics: [] },
        perspective: { emphasis: data.values[3], description: '', characteristics: [] },
        ploy: { emphasis: data.values[4], description: '', characteristics: [] }
      }
    }));
  }

  /**
   * Merge enhanced school data with radar data for complete information
   */
  static mergeSchoolData(
    enhancedData: EnhancedSchoolData[], 
    radarData: RadarSchoolData[]
  ): EnhancedSchoolData[] {
    return enhancedData.map(school => {
      const radarMatch = radarData.find(r => 
        r.school.toLowerCase().includes(school.shortName.toLowerCase()) ||
        school.name.toLowerCase().includes(r.school.toLowerCase())
      );
      
      if (radarMatch) {
        return {
          ...school,
          values: radarMatch.values
        };
      }
      
      return school;
    });
  }

  /**
   * Extract school names from various data formats
   */
  static extractSchoolNames(data: EnhancedSchoolData[] | RadarSchoolData[]): string[] {
    return data.map(item => 'school' in item ? item.school : item.name);
  }

  /**
   * Find school by name with fuzzy matching
   */
  static findSchoolByName(
    schools: EnhancedSchoolData[], 
    searchName: string
  ): EnhancedSchoolData | undefined {
    const lowerSearch = searchName.toLowerCase();
    
    // Exact match first
    let match = schools.find(s => s.name.toLowerCase() === lowerSearch);
    if (match) return match;
    
    // Short name match
    match = schools.find(s => s.shortName.toLowerCase() === lowerSearch);
    if (match) return match;
    
    // Partial match
    match = schools.find(s => 
      s.name.toLowerCase().includes(lowerSearch) ||
      lowerSearch.includes(s.shortName.toLowerCase())
    );
    
    return match;
  }

  /**
   * Calculate school statistics
   */
  static calculateSchoolStats(school: EnhancedSchoolData | RadarSchoolData) {
    const values = 'values' in school ? school.values : [];
    const total = values.reduce((sum, val) => sum + val, 0);
    const average = values.length > 0 ? total / values.length : 0;
    const max = Math.max(...values);
    const min = Math.min(...values);
    const maxIndex = values.indexOf(max);
    const minIndex = values.indexOf(min);
    
    const pLabels = ['Plan', 'Pattern', 'Position', 'Perspective', 'Ploy'];
    
    return {
      total,
      average: Math.round(average * 10) / 10,
      strongest: {
        p: pLabels[maxIndex],
        value: max,
        index: maxIndex
      },
      weakest: {
        p: pLabels[minIndex],
        value: min,
        index: minIndex
      },
      balance: max - min, // Lower means more balanced
      profile: this.getSchoolProfile(values)
    };
  }

  /**
   * Determine school strategic profile
   */
  private static getSchoolProfile(values: number[]): 'balanced' | 'focused' | 'specialized' {
    const max = Math.max(...values);
    const min = Math.min(...values);
    const range = max - min;
    
    if (range <= 1) return 'balanced';
    if (range <= 2) return 'focused';
    return 'specialized';
  }

  /**
   * Group schools by their strategic emphasis
   */
  static groupSchoolsByEmphasis(schools: (EnhancedSchoolData | RadarSchoolData)[]) {
    const pLabels = ['plan', 'pattern', 'position', 'perspective', 'ploy'];
    const groups: Record<string, (EnhancedSchoolData | RadarSchoolData)[]> = {};
    
    pLabels.forEach(p => {
      groups[p] = [];
    });
    
    schools.forEach(school => {
      const values = 'values' in school ? school.values : [];
      const maxIndex = values.indexOf(Math.max(...values));
      const strongestP = pLabels[maxIndex];
      
      if (strongestP && groups[strongestP]) {
        groups[strongestP].push(school);
      }
    });
    
    return groups;
  }

  /**
   * Filter schools by P emphasis threshold
   */
  static filterByPEmphasis(
    schools: (EnhancedSchoolData | RadarSchoolData)[], 
    pIndex: number, 
    minValue: number
  ) {
    return schools.filter(school => {
      const values = 'values' in school ? school.values : [];
      return values[pIndex] >= minValue;
    });
  }

  /**
   * Sort schools by specific P value
   */
  static sortByPValue(
    schools: (EnhancedSchoolData | RadarSchoolData)[], 
    pIndex: number, 
    ascending = false
  ) {
    return [...schools].sort((a, b) => {
      const aValues = 'values' in a ? a.values : [];
      const bValues = 'values' in b ? b.values : [];
      const aVal = aValues[pIndex] || 0;
      const bVal = bValues[pIndex] || 0;
      
      return ascending ? aVal - bVal : bVal - aVal;
    });
  }

  /**
   * Calculate correlation between two P's across all schools
   */
  static calculatePCorrelation(
    schools: (EnhancedSchoolData | RadarSchoolData)[], 
    pIndex1: number, 
    pIndex2: number
  ): number {
    if (schools.length === 0) return 0;
    
    const pairs = schools.map(school => {
      const values = 'values' in school ? school.values : [];
      return [values[pIndex1] || 0, values[pIndex2] || 0];
    });
    
    const n = pairs.length;
    const sum1 = pairs.reduce((sum, [x]) => sum + x, 0);
    const sum2 = pairs.reduce((sum, [, y]) => sum + y, 0);
    const sum1Sq = pairs.reduce((sum, [x]) => sum + x * x, 0);
    const sum2Sq = pairs.reduce((sum, [, y]) => sum + y * y, 0);
    const pSum = pairs.reduce((sum, [x, y]) => sum + x * y, 0);
    
    const num = pSum - (sum1 * sum2 / n);
    const den = Math.sqrt((sum1Sq - sum1 * sum1 / n) * (sum2Sq - sum2 * sum2 / n));
    
    return den === 0 ? 0 : num / den;
  }
}===== SLUTT ./src/lib/utils/dataAdapeter.ts =====

===== START ./src/lib/types.ts =====
// src/lib/types.ts - Oppdaterte typer for utvidede data

// Enhanced School Data Structure
export interface SchoolPEmphasis {
	emphasis: number; // 1-5 scale
	description: string;
	characteristics: string[];
	example?: string;
  }
  
  export interface SchoolPApproaches {
	plan: SchoolPEmphasis;
	pattern: SchoolPEmphasis;
	position: SchoolPEmphasis;
	perspective: SchoolPEmphasis;
	ploy: SchoolPEmphasis;
  }
  
  export interface EnhancedSchoolData {
	id: string;
	name: string;
	shortName: string;
	group: 'Prescriptive' | 'Descriptive';
	description: string;
	longDescription: string;
	keyFigures: string[];
	originPeriod: string;
	coreBeliefs: string[];
	strengths: string[];
	weaknesses: string[];
	values: number[]; // [plan, pattern, position, perspective, ploy] - for kompatibilitet
	pApproaches: SchoolPApproaches;
  }
  
  // Enhanced P's Data Structure
  export interface PSCharacteristic {
	emphasis: number;
	description: string;
	characteristics: string[];
	example: string;
  }
  
  export interface EnhancedPData {
	id: string;
	label: string;
	description: string;
	color: string;
  }
  
  // Legacy types for backward compatibility
  export interface StrategySchool {
	name: string;
	group: 'Prescriptive' | 'Descriptive';
	values: number[]; // [plan, pattern, position, perspective, ploy]
  }
  
  export interface RadarSchoolData {
	school: string;
	group: 'Prescriptive' | 'Descriptive';
	values: number[];
  }
  
  export interface SchoolInfo {
	id: string;
	name: string;
	description: string;
	group: 'Prescriptive' | 'Descriptive';
  }
  
  // Simple P data for backward compatibility
  export interface PSItem {
	id: string;
	label: string;
	description: string;
	color: string;
  }
  
  // Utility types for working with the data
  export type StrategyP = 'plan' | 'pattern' | 'position' | 'perspective' | 'ploy';
  
  export interface SchoolAnalysis {
	school: EnhancedSchoolData;
	strongestP: {
	  p: StrategyP;
	  score: number;
	  description: string;
	};
	weakestP: {
	  p: StrategyP;
	  score: number;
	  description: string;
	};
	averageScore: number;
	profile: 'balanced' | 'focused' | 'specialized';
  }===== SLUTT ./src/lib/types.ts =====

===== START ./src/lib/components/SchoolCard.svelte =====
<!-- src/lib/components/EnhancedSchoolCard.svelte -->
<script lang="ts">
  import { createEventDispatcher } from 'svelte';
  import { slide } from 'svelte/transition';
  import type { EnhancedSchoolData, StrategyP } from '$lib/types';

  export let school: EnhancedSchoolData;
  export let expanded = false;
  export let showComparison = false;

  const dispatch = createEventDispatcher();

  function toggleExpanded() {
    expanded = !expanded;
    dispatch('toggle', { school, expanded });
  }

  function getPLabel(index: number): string {
    const labels: StrategyP[] = ['plan', 'pattern', 'position', 'perspective', 'ploy'];
    return labels[index] || 'unknown';
  }

  function getGroupColor(group: string) {
    return group === 'Prescriptive' 
      ? 'bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300'
      : 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300';
  }

  function getStrengthColor(value: number): string {
    if (value >= 4) return 'text-green-600';
    if (value >= 3) return 'text-yellow-600';
    return 'text-gray-500';
  }

  $: strongestP = school.values.reduce((max, curr, idx) => 
    curr > school.values[max] ? idx : max, 0);
  
  $: averageEmphasis = school.values.reduce((sum, val) => sum + val, 0) / 5;
</script>

<div class="bg-card border border-border rounded-xl shadow-sm hover:shadow-lg transition-all duration-300 overflow-hidden">
  <!-- Header -->
  <button 
    on:click={toggleExpanded}
    class="w-full p-6 text-left hover:bg-muted/30 transition-colors focus:outline-none focus:ring-2 focus:ring-primary focus:ring-inset"
  >
    <div class="flex justify-between items-start">
      <div class="flex-1">
        <div class="flex items-center gap-3 mb-2">
          <h3 class="text-xl font-bold text-card-foreground group-hover:text-primary transition-colors">
            {school.name}
          </h3>
          <span class="text-xs px-2 py-1 rounded-full font-medium {getGroupColor(school.group)}">
            {school.group}
          </span>
        </div>
        
        <p class="text-muted-foreground text-sm mb-3 leading-relaxed">
          {school.description}
        </p>

        <!-- Quick stats -->
        <div class="flex items-center gap-4 text-xs text-muted-foreground">
          <span class="flex items-center gap-1">
            <span class="font-medium {getStrengthColor(school.values[strongestP])}">
              Strongest: {getPLabel(strongestP).charAt(0).toUpperCase() + getPLabel(strongestP).slice(1)}
            </span>
            <span class="text-muted-foreground/60">({school.values[strongestP]}/5)</span>
          </span>
          <span class="text-muted-foreground/40">•</span>
          <span>Avg: {averageEmphasis.toFixed(1)}</span>
        </div>
      </div>
      
      <div class="flex items-center gap-2 ml-4">
        {#if showComparison}
          <div class="text-xs text-primary bg-primary/10 px-2 py-1 rounded">
            Selected
          </div>
        {/if}
        <div class="text-muted-foreground transition-transform duration-200" 
             class:rotate-180={expanded}>
          ↓
        </div>
      </div>
    </div>
  </button>

  <!-- Expanded Content -->
  {#if expanded}
    <div transition:slide={{ duration: 300 }} class="px-6 pb-6 space-y-6">
      
      <!-- Origin & Key Figures -->
      <div class="grid md:grid-cols-2 gap-4 text-sm">
        <div>
          <h4 class="font-semibold text-card-foreground mb-2 flex items-center gap-2">
            <span class="text-base">📅</span>
            Origin Period
          </h4>
          <p class="text-muted-foreground">{school.originPeriod}</p>
        </div>
        <div>
          <h4 class="font-semibold text-card-foreground mb-2 flex items-center gap-2">
            <span class="text-base">👥</span>
            Key Figures
          </h4>
          <p class="text-muted-foreground">{school.keyFigures.join(', ')}</p>
        </div>
      </div>

      <!-- Long Description -->
      <div>
        <h4 class="font-semibold text-card-foreground mb-2 flex items-center gap-2">
          <span class="text-base">📝</span>
          Overview
        </h4>
        <p class="text-muted-foreground text-sm leading-relaxed">
          {school.longDescription}
        </p>
      </div>

      <!-- Core Beliefs -->
      <div>
        <h4 class="font-semibold text-card-foreground mb-3 flex items-center gap-2">
          <span class="text-base">💡</span>
          Core Beliefs
        </h4>
        <ul class="space-y-2">
          {#each school.coreBeliefs as belief}
            <li class="flex items-start gap-2 text-sm">
              <span class="text-primary text-xs mt-1">•</span>
              <span class="text-muted-foreground">{belief}</span>
            </li>
          {/each}
        </ul>
      </div>

      <!-- Five P's Analysis -->
      <div>
        <h4 class="font-semibold text-card-foreground mb-3 flex items-center gap-2">
          <span class="text-base">📊</span>
          Five P's Emphasis
        </h4>
        <div class="space-y-3">
          {#each school.values as value, index}
            {@const pKey = getPLabel(index)}
            {@const pData = school.pApproaches[pKey]}
            <div class="space-y-2">
              <div class="flex items-center justify-between">
                <span class="font-medium text-card-foreground capitalize">
                  {pKey}
                </span>
                <span class="text-sm {getStrengthColor(value)} font-medium">
                  {value}/5
                </span>
              </div>
              <div class="flex items-center gap-3">
                <div class="flex-1 bg-muted rounded-full h-2">
                  <div 
                    class="bg-gradient-to-r from-primary to-primary/80 h-2 rounded-full transition-all duration-500"
                    style="width: {(value / 5) * 100}%"
                  ></div>
                </div>
              </div>
              {#if pData}
                <p class="text-xs text-muted-foreground pl-1">
                  {pData.description}
                </p>
              {/if}
            </div>
          {/each}
        </div>
      </div>

      <!-- Strengths & Weaknesses -->
      <div class="grid md:grid-cols-2 gap-4">
        <div>
          <h4 class="font-semibold text-card-foreground mb-3 flex items-center gap-2">
            <span class="text-base">✅</span>
            Strengths
          </h4>
          <ul class="space-y-2">
            {#each school.strengths as strength}
              <li class="flex items-start gap-2 text-sm">
                <span class="text-green-500 text-xs mt-1">+</span>
                <span class="text-muted-foreground">{strength}</span>
              </li>
            {/each}
          </ul>
        </div>
        <div>
          <h4 class="font-semibold text-card-foreground mb-3 flex items-center gap-2">
            <span class="text-base">⚠️</span>
            Limitations
          </h4>
          <ul class="space-y-2">
            {#each school.weaknesses as weakness}
              <li class="flex items-start gap-2 text-sm">
                <span class="text-yellow-500 text-xs mt-1">-</span>
                <span class="text-muted-foreground">{weakness}</span>
              </li>
            {/each}
          </ul>
        </div>
      </div>

      <!-- Actions -->
      <div class="flex gap-3 pt-4 border-t border-border">
        <button 
          on:click={() => dispatch('compare', school)}
          class="flex items-center gap-2 px-4 py-2 bg-primary text-primary-foreground rounded-lg text-sm font-medium hover:bg-primary/90 transition-colors"
        >
          <span>📊</span>
          Compare in Radar
        </button>
        <button 
          on:click={() => dispatch('learn-more', school)}
          class="flex items-center gap-2 px-4 py-2 bg-secondary text-secondary-foreground rounded-lg text-sm font-medium hover:bg-secondary/90 transition-colors"
        >
          <span>📖</span>
          Learn More
        </button>
      </div>
    </div>
  {/if}
</div>===== SLUTT ./src/lib/components/SchoolCard.svelte =====

===== START ./src/lib/components/SchoolDetailView.svelte =====
<!-- src/lib/components/SchoolDetailView.svelte -->
<script lang="ts">
    import { onMount } from 'svelte';
    import { scale, fly } from 'svelte/transition';
    import { quintOut } from 'svelte/easing';
    import type { EnhancedSchoolData, StrategyP } from '$lib/types';
  
    export let schoolId: string;
    export let compact: boolean = false;
  
    let school: EnhancedSchoolData | null = null;
    let loading = true;
    let error: string | null = null;
    let activeTab: 'overview' | 'ps-analysis' | 'examples' = 'overview';
    let sectionsVisible = false;
  
    const pLabels: Record<StrategyP, string> = {
      plan: 'Plan',
      pattern: 'Pattern', 
      position: 'Position',
      perspective: 'Perspective',
      ploy: 'Ploy'
    };
  
    onMount(async () => {
      try {
        const res = await fetch('/data/enhanced-schools.json');
        if (!res.ok) throw new Error('Failed to load schools data');
        
        const data = await res.json();
        school = data.schools.find((s: EnhancedSchoolData===== SLUTT ./src/lib/components/SchoolDetailView.svelte =====

===== START ./src/lib/components/Header.svelte =====
<!-- src/lib/components/Header.svelte -->
<script lang="ts">
  import { page } from '$app/stores';
  import { derived } from 'svelte/store';
  import ThemeToggle from '$lib/components/ThemeToggle.svelte';

  const currentPath = derived(page, ($page) => $page.url.pathname);
  
  let mobileMenuOpen = false;

  const toggleMobileMenu = () => {
    mobileMenuOpen = !mobileMenuOpen;
  };

  const closeMobileMenu = () => {
    mobileMenuOpen = false;
  };

  // Close mobile menu when route changes
  $: if ($currentPath) {
    mobileMenuOpen = false;
  }

  const navigationItems = [
    { href: '/radar', label: 'Radar', icon: '📊' },
    { href: '/schools', label: 'Schools', icon: '🏫' },
    { href: '/ps', label: "5 P's", icon: '📝' },
    { href: '/about', label: 'About', icon: 'ℹ️' }
  ];
</script>

<header class="sticky top-0 z-50 bg-muted/95 backdrop-blur-sm border-b border-border shadow-sm">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center py-4">
      <!-- Logo -->
      <a 
        href="/" 
        class="text-lg font-semibold text-primary hover:text-primary/80 transition-colors flex items-center gap-2"
        on:click={closeMobileMenu}
      >
        <span class="text-xl">🧭</span>
        <span class="hidden sm:inline">Strategy Safari</span>
        <span class="sm:hidden">Safari</span>
      </a>

      <!-- Desktop Navigation -->
      <nav class="hidden md:flex items-center gap-4">
        <div class="flex space-x-1">
          {#each navigationItems as item}
            <a
              href={item.href}
              class="px-3 py-2 rounded-md transition-all duration-200 text-sm font-medium flex items-center gap-2"
              class:bg-primary={$currentPath === item.href}
              class:text-primary-foreground={$currentPath === item.href}
              class:text-muted-foreground={$currentPath !== item.href}
              class:hover:text-foreground={$currentPath !== item.href}
              class:hover:bg-muted={$currentPath !== item.href}
            >
              <span class="text-base">{item.icon}</span>
              <span>{item.label}</span>
            </a>
          {/each}
        </div>
        
        <div class="ml-2">
          <ThemeToggle />
        </div>
      </nav>

      <!-- Mobile Menu Button & Theme Toggle -->
      <div class="md:hidden flex items-center gap-2">
        <ThemeToggle />
        
        <button
          on:click={toggleMobileMenu}
          class="p-2 rounded-md text-muted-foreground hover:text-foreground hover:bg-muted transition-colors"
          aria-label="Toggle mobile menu"
          aria-expanded={mobileMenuOpen}
        >
          <div class="w-6 h-6 flex flex-col justify-center items-center">
            <span 
              class="block w-5 h-0.5 bg-current transition-all duration-300 ease-out"
              class:rotate-45={mobileMenuOpen}
              class:translate-y-1.5={mobileMenuOpen}
            ></span>
            <span 
              class="block w-5 h-0.5 bg-current mt-1 transition-all duration-300 ease-out"
              class:opacity-0={mobileMenuOpen}
            ></span>
            <span 
              class="block w-5 h-0.5 bg-current mt-1 transition-all duration-300 ease-out"
              class:-rotate-45={mobileMenuOpen}
              class:-translate-y-1.5={mobileMenuOpen}
            ></span>
          </div>
        </button>
      </div>
    </div>

    <!-- Mobile Navigation Menu -->
    <div 
      class="md:hidden overflow-hidden transition-all duration-300 ease-in-out"
      class:max-h-0={!mobileMenuOpen}
      class:max-h-96={mobileMenuOpen}
    >
      <nav class="py-4 space-y-1 border-t border-border">
        {#each navigationItems as item}
          <a
            href={item.href}
            class="flex items-center gap-3 px-4 py-3 rounded-lg transition-all duration-200 text-base font-medium"
            class:bg-primary={$currentPath === item.href}
            class:text-primary-foreground={$currentPath === item.href}
            class:text-muted-foreground={$currentPath !== item.href}
            class:hover:text-foreground={$currentPath !== item.href}
            class:hover:bg-muted={$currentPath !== item.href}
            on:click={closeMobileMenu}
          >
            <span class="text-xl">{item.icon}</span>
            <span>{item.label}</span>
            {#if $currentPath === item.href}
              <span class="ml-auto text-primary-foreground">→</span>
            {/if}
          </a>
        {/each}
        
        <!-- Mobile menu footer -->
        <div class="pt-4 mt-4 border-t border-border/50">
          <div class="px-4 text-xs text-muted-foreground/70 text-center">
            Navigate strategy thinking visually
          </div>
        </div>
      </nav>
    </div>
  </div>
</header>

<!-- Mobile menu overlay (close when clicking outside) -->
{#if mobileMenuOpen}
  <div 
    class="fixed inset-0 z-40 bg-background/20 backdrop-blur-sm md:hidden"
    on:click={closeMobileMenu}
    on:keydown={(e) => e.key === 'Escape' && closeMobileMenu()}
    role="button"
    tabindex="0"
    aria-label="Close mobile menu"
  ></div>
{/if}===== SLUTT ./src/lib/components/Header.svelte =====

===== START ./src/lib/components/PageTransitions.svelte =====
<!-- src/lib/components/PageTransition.svelte -->
<script lang="ts">
    import { page } from '$app/stores';
    import { onMount } from 'svelte';
    import { fly, fade } from 'svelte/transition';
    import { cubicOut } from 'svelte/easing';
  
    let isLoading = false;
    let currentPath = '';
  
    // Watch for route changes
    $: if ($page.url.pathname !== currentPath) {
      currentPath = $page.url.pathname;
      handleRouteChange();
    }
  
    function handleRouteChange() {
      isLoading = true;
      setTimeout(() => {
        isLoading = false;
      }, 300);
    }
  
    onMount(() => {
      currentPath = $page.url.pathname;
    });
  </script>
  
  <!-- Loading overlay for route transitions -->
  {#if isLoading}
    <div 
      class="fixed inset-0 z-50 bg-background/80 backdrop-blur-sm flex items-center justify-center"
      transition:fade={{ duration: 200 }}
    >
      <div class="flex flex-col items-center gap-4">
        <div class="relative">
          <div class="w-12 h-12 border-4 border-primary/20 rounded-full"></div>
          <div class="absolute inset-0 w-12 h-12 border-4 border-primary border-t-transparent rounded-full animate-spin"></div>
        </div>
        <div class="text-muted-foreground text-sm animate-pulse">
          Navigating strategy landscape...
        </div>
      </div>
    </div>
  {/if}
  
  <!-- Page content wrapper with enter animation -->
  <div
    in:fly={{ y: 20, duration: 400, delay: 150, easing: cubicOut }}
    out:fly={{ y: -20, duration: 200, easing: cubicOut }}
  >
    <slot />
  </div>===== SLUTT ./src/lib/components/PageTransitions.svelte =====

===== START ./src/lib/components/RadarPlot.svelte =====
<script lang="ts">
	import { onMount, onDestroy } from 'svelte';
	import Chart from 'chart.js/auto';
	import type { RadarSchoolData } from '$lib/types';
  
	export let filteredData: RadarSchoolData[] = [];
  
	let canvas: HTMLCanvasElement;
	let chart: Chart;
  
	const colors = [
	  'rgba(255, 99, 132, 0.6)',
	  'rgba(54, 162, 235, 0.6)', 
	  'rgba(255, 206, 86, 0.6)',
	  'rgba(75, 192, 192, 0.6)',
	  'rgba(153, 102, 255, 0.6)',
	  'rgba(255, 159, 64, 0.6)',
	  'rgba(199, 199, 199, 0.6)',
	  'rgba(255, 99, 255, 0.6)',
	  'rgba(100, 200, 100, 0.6)',
	  'rgba(0, 128, 255, 0.6)'
	];
  
	const createChart = () => {
	  const labels = ['Plan', 'Pattern', 'Position', 'Perspective', 'Ploy'];
  
	  const datasets = filteredData.map((school, index) => ({
		label: school.school,
		data: school.values,
		fill: true,
		backgroundColor: colors[index % colors.length],
		borderColor: colors[index % colors.length].replace('0.6', '1'),
		borderWidth: 2,
		pointBackgroundColor: colors[index % colors.length].replace('0.6', '1'),
		pointBorderColor: '#fff',
		pointHoverBackgroundColor: '#fff',
		pointHoverBorderColor: colors[index % colors.length].replace('0.6', '1')
	  }));
  
	  chart = new Chart(canvas, {
		type: 'radar',
		data: {
		  labels,
		  datasets,
		},
		options: {
		  responsive: true,
		  maintainAspectRatio: false,
		  plugins: {
			legend: {
			  position: 'top',
			},
			title: {
			  display: false,
			}
		  },
		  scales: {
			r: {
			  min: 0,
			  max: 5,
			  ticks: {
				stepSize: 1,
				backdropColor: 'transparent'
			  },
			  grid: {
				color: 'rgba(0, 0, 0, 0.1)'
			  },
			  angleLines: {
				color: 'rgba(0, 0, 0, 0.1)'
			  }
			}
		  }
		}
	  });
	};
  
	onMount(() => {
	  createChart();
	});
  
	$: if (chart && filteredData) {
	  chart.data.datasets = filteredData.map((school, index) => ({
		label: school.school,
		data: school.values,
		fill: true,
		backgroundColor: colors[index % colors.length],
		borderColor: colors[index % colors.length].replace('0.6', '1'),
		borderWidth: 2,
		pointBackgroundColor: colors[index % colors.length].replace('0.6', '1'),
		pointBorderColor: '#fff',
		pointHoverBackgroundColor: '#fff',
		pointHoverBorderColor: colors[index % colors.length].replace('0.6', '1')
	  }));
	  chart.update();
	}
  
	onDestroy(() => {
	  chart?.destroy();
	});
  </script>
  
  <div class="bg-card border border-border rounded-lg p-6 shadow-sm">
	<div class="h-96">
	  <canvas bind:this={canvas}></canvas>
	</div>
  </div>===== SLUTT ./src/lib/components/RadarPlot.svelte =====

===== START ./src/lib/components/PSOverview.svelte =====
<!-- src/lib/components/PSOverview.svelte -->
<script lang="ts">
  import { onMount } from 'svelte';
  import { fly, scale } from 'svelte/transition';
  import { quintOut } from 'svelte/easing';
  import type { PSItem } from '$lib/types';

  let psItems: PSItem[] = [];
  let loading = true;
  let error: string | null = null;
  let cardsVisible = false;
  let selectedP: string | null = null;

  // Enhanced P's data with more context
  const enhancedPsData = {
    plan: {
      icon: '🎯',
      gradient: 'from-blue-500 to-blue-700',
      examples: [
        { org: 'McKinsey & Company', desc: 'Strategic planning methodology and frameworks' },
        { org: 'General Electric', desc: 'Jack Welch\'s systematic strategic planning process' }
      ],
      questions: [
        'What is our strategic vision for the next 5 years?',
        'How do we allocate resources to achieve our goals?',
        'What are our key performance indicators?'
      ]
    },
    pattern: {
      icon: '🔄',
      gradient: 'from-green-500 to-green-700',
      examples: [
        { org: 'Honda', desc: 'Emergent expansion from motorcycles to cars to jets' },
        { org: 'Amazon', desc: 'Evolution from bookstore to everything store to cloud services' }
      ],
      questions: [
        'What patterns emerge from our past strategic decisions?',
        'How do our actions reveal our true strategy?',
        'What unintended consequences have shaped our direction?'
      ]
    },
    position: {
      icon: '📍',
      gradient: 'from-purple-500 to-purple-700',
      examples: [
        { org: 'Southwest Airlines', desc: 'Low-cost carrier positioning in airline industry' },
        { org: 'Tesla', desc: 'Premium electric vehicle positioning in automotive market' }
      ],
      questions: [
        'Where do we fit in our competitive landscape?',
        'What unique market position do we occupy?',
        'How do customers perceive us relative to competitors?'
      ]
    },
    perspective: {
      icon: '👁️',
      gradient: 'from-orange-500 to-orange-700',
      examples: [
        { org: 'Apple', desc: 'Design-thinking and user experience worldview' },
        { org: 'Patagonia', desc: 'Environmental consciousness as core business philosophy' }
      ],
      questions: [
        'What is our organizational worldview?',
        'How do we see our role in society?',
        'What beliefs guide our strategic thinking?'
      ]
    },
    ploy: {
      icon: '🎭',
      gradient: 'from-red-500 to-red-700',
      examples: [
        { org: 'Netflix', desc: 'Strategic moves to disrupt traditional TV industry' },
        { org: 'Uber', desc: 'Aggressive market entry tactics in regulated industries' }
      ],
      questions: [
        'What tactical moves will surprise our competitors?',
        'How can we outmaneuver rivals in the short term?',
        'What strategic feints can create competitive advantage?'
      ]
    }
  };

  onMount(async () => {
    try {
      const res = await fetch('/data/ps.json');
      if (!res.ok) {
        throw new Error(`Failed to fetch PS data: ${res.status} ${res.statusText}`);
      }
      psItems = await res.json();
      
      // Trigger animations after data loads
      setTimeout(() => cardsVisible = true, 100);
    } catch (err) {
      console.error('Error loading PS data:', err);
      error = err instanceof Error ? err.message : 'Unknown error occurred';
    } finally {
      loading = false;
    }
  });

  function getEnhancedData(psId: string) {
    return enhancedPsData[psId as keyof typeof enhancedPsData] || null;
  }

  function toggleSelection(psId: string) {
    selectedP = selectedP === psId ? null : psId;
  }
</script>

{#if loading}
  <div class="flex justify-center items-center py-20">
    <div class="text-center">
      <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-primary mx-auto mb-6"></div>
      <p class="text-muted-foreground text-lg">Loading the 5 P's of Strategy...</p>
    </div>
  </div>
{:else if error}
  <div class="max-w-2xl mx-auto">
    <div class="bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-xl p-8">
      <div class="flex items-center gap-4 mb-4">
        <div class="text-red-600 dark:text-red-400 text-2xl">⚠️</div>
        <div>
          <h3 class="font-bold text-red-800 dark:text-red-200 text-lg">Error Loading Data</h3>
          <p class="text-red-600 dark:text-red-400 mt-1">{error}</p>
        </div>
      </div>
      <p class="text-sm text-red-600 dark:text-red-400 mt-4">
        Please check that the <code class="bg-red-100 dark:bg-red-800/50 px-1 rounded">static/data/ps.json</code> file exists and is properly formatted.
      </p>
    </div>
  </div>
{:else if psItems.length === 0}
  <div class="text-center py-20">
    <div class="text-6xl mb-4">🤔</div>
    <p class="text-muted-foreground text-lg">No strategy P's data available.</p>
  </div>
{:else}
  <div class="space-y-16">
    <!-- Header Section -->
    <div class="text-center max-w-4xl mx-auto transition-all duration-700 transform"
         class:translate-y-0={cardsVisible}
         class:opacity-100={cardsVisible}
         class:translate-y-8={!cardsVisible}
         class:opacity-0={!cardsVisible}>
      <h2 class="text-4xl md:text-5xl font-bold mb-6 bg-gradient-to-r from-primary via-primary to-secondary bg-clip-text text-transparent">
        The Five P's of Strategy
      </h2>
      <p class="text-xl text-muted-foreground leading-relaxed mb-4">
        Explore Henry Mintzberg's comprehensive framework for understanding strategy 
        through five distinct but interconnected perspectives.
      </p>
      <p class="text-lg text-muted-foreground/80">
        Each P represents a different lens through which we can view strategic thinking and formation within organizations.
      </p>
    </div>

    <!-- Interactive P's Grid -->
    <div class="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
      {#each psItems as ps, index (ps.id)}
        {@const enhanced = getEnhancedData(ps.id)}
        {@const isSelected = selectedP === ps.id}
        
        <div class="group transition-all duration-700 transform hover:scale-105"
             class:translate-y-0={cardsVisible}
             class:opacity-100={cardsVisible}
             class:translate-y-12={!cardsVisible}
             class:opacity-0={!cardsVisible}
             class:lg:col-span-2={isSelected}
             class:md:col-span-2={isSelected}
             style="transition-delay: {index * 100}ms;">
          
          <button
            on:click={() => toggleSelection(ps.id)}
            class="w-full text-left bg-card border border-border rounded-2xl p-6 md:p-8 shadow-lg hover:shadow-2xl transition-all duration-300 h-full relative overflow-hidden focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2"
            class:shadow-2xl={isSelected}
            class:ring-2={isSelected}
            class:ring-primary={isSelected}
          >
            <!-- Animated background gradient -->
            <div class="absolute inset-0 opacity-0 group-hover:opacity-10 transition-opacity duration-300"
                 class:opacity-20={isSelected}
                 style="background: linear-gradient(135deg, {ps.color}40, {ps.color}10);"></div>
            
            <!-- Header with enhanced icon -->
            <div class="flex items-center gap-4 mb-6 relative z-10">
              <div class="flex-shrink-0">
                <div class="relative">
                  <div 
                    class="w-12 h-12 rounded-xl shadow-lg group-hover:scale-110 transition-all duration-300 flex items-center justify-center text-2xl"
                    style="background: linear-gradient(135deg, {ps.color}, {ps.color}80);"
                  >
                    {enhanced?.icon || '📊'}
                  </div>
                  {#if isSelected}
                    <div class="absolute -top-1 -right-1 w-4 h-4 bg-primary rounded-full flex items-center justify-center">
                      <span class="text-white text-xs">✓</span>
                    </div>
                  {/if}
                </div>
              </div>
              <div class="flex-1">
                <h3 class="text-2xl font-bold text-card-foreground group-hover:text-primary transition-colors duration-300">
                  {ps.label}
                </h3>
                <div class="text-sm text-muted-foreground mt-1">
                  Click to explore in detail
                </div>
              </div>
            </div>
            
            <!-- Basic Description -->
            <p class="text-muted-foreground leading-relaxed text-base mb-6 relative z-10">
              {ps.description}
            </p>

            <!-- Expanded Content -->
            {#if isSelected}
              <div class="relative z-10 space-y-6" 
                   in:fly={{ y: 20, duration: 400, delay: 100 }}>
                
                <!-- Real-world Examples -->
                {#if enhanced?.examples}
                  <div>
                    <h4 class="font-semibold text-card-foreground mb-3 flex items-center gap-2">
                      <span class="text-lg">🏢</span>
                      Real-World Examples
                    </h4>
                    <div class="space-y-3">
                      {#each enhanced.examples as example}
                        <div class="p-3 bg-muted/30 rounded-lg border border-border/50">
                          <div class="font-medium text-card-foreground text-sm">{example.org}</div>
                          <div class="text-muted-foreground text-sm mt-1">{example.desc}</div>
                        </div>
                      {/each}
                    </div>
                  </div>
                {/if}

                <!-- Strategic Questions -->
                {#if enhanced?.questions}
                  <div>
                    <h4 class="font-semibold text-card-foreground mb-3 flex items-center gap-2">
                      <span class="text-lg">❓</span>
                      Key Strategic Questions
                    </h4>
                    <ul class="space-y-2">
                      {#each enhanced.questions as question}
                        <li class="flex items-start gap-3 text-sm">
                          <span class="text-primary text-lg mt-0.5">•</span>
                          <span class="text-muted-foreground">{question}</span>
                        </li>
                      {/each}
                    </ul>
                  </div>
                {/if}

                <!-- Action buttons -->
                <div class="flex gap-3 pt-4 border-t border-border">
                  <a href="/schools?focus={ps.id}" 
                     class="flex items-center gap-2 px-4 py-2 bg-primary text-primary-foreground rounded-lg text-sm font-medium hover:bg-primary/90 transition-colors">
                    <span>🏫</span>
                    See in Schools
                  </a>
                  <a href="/radar?focus={ps.id}" 
                     class="flex items-center gap-2 px-4 py-2 bg-secondary text-secondary-foreground rounded-lg text-sm font-medium hover:bg-secondary/90 transition-colors">
                    <span>📊</span>
                    View in Radar
                  </a>
                </div>
              </div>
            {/if}
            
            <!-- Visual accent bar -->
            <div class="relative z-10 mt-6">
              <div 
                class="h-1 rounded-full group-hover:h-2 transition-all duration-300" 
                class:h-2={isSelected}
                style="background: linear-gradient(90deg, {ps.color}, {ps.color}80);"
              ></div>
            </div>
          </button>
        </div>
      {/each}
    </div>

    <!-- Framework Comparison -->
    <div class="bg-gradient-to-r from-muted/50 via-muted/30 to-muted/50 rounded-2xl p-8 md:p-12 border border-border">
      <div class="max-w-5xl mx-auto">
        <h3 class="text-2xl md:text-3xl font-bold mb-6 text-foreground flex items-center gap-3">
          <span class="text-3xl">🔄</span>
          The P's in Action: A Comparative View
        </h3>
        
        <div class="overflow-x-auto">
          <table class="w-full border-collapse">
            <thead>
              <tr class="border-b border-border">
                <th class="text-left p-3 font-semibold text-foreground">P</th>
                <th class="text-left p-3 font-semibold text-foreground">Primary Focus</th>
                <th class="text-left p-3 font-semibold text-foreground">Time Horizon</th>
                <th class="text-left p-3 font-semibold text-foreground">Key Question</th>
              </tr>
            </thead>
            <tbody class="text-sm">
              <tr class="border-b border-border/50 hover:bg-muted/20">
                <td class="p-3 font-medium text-card-foreground">Plan</td>
                <td class="p-3 text-muted-foreground">Deliberate direction</td>
                <td class="p-3 text-muted-foreground">Future-oriented</td>
                <td class="p-3 text-muted-foreground">How do we get there?</td>
              </tr>
              <tr class="border-b border-border/50 hover:bg-muted/20">
                <td class="p-3 font-medium text-card-foreground">Pattern</td>
                <td class="p-3 text-muted-foreground">Emergent behavior</td>
                <td class="p-3 text-muted-foreground">Past-informed</td>
                <td class="p-3 text-muted-foreground">What have we actually done?</td>
              </tr>
              <tr class="border-b border-border/50 hover:bg-muted/20">
                <td class="p-3 font-medium text-card-foreground">Position</td>
                <td class="p-3 text-muted-foreground">Competitive placement</td>
                <td class="p-3 text-muted-foreground">Present state</td>
                <td class="p-3 text-muted-foreground">Where do we compete?</td>
              </tr>
              <tr class="border-b border-border/50 hover:bg-muted/20">
                <td class="p-3 font-medium text-card-foreground">Perspective</td>
                <td class="p-3 text-muted-foreground">Organizational worldview</td>
                <td class="p-3 text-muted-foreground">Enduring beliefs</td>
                <td class="p-3 text-muted-foreground">Who are we?</td>
              </tr>
              <tr class="hover:bg-muted/20">
                <td class="p-3 font-medium text-card-foreground">Ploy</td>
                <td class="p-3 text-muted-foreground">Tactical maneuvering</td>
                <td class="p-3 text-muted-foreground">Immediate action</td>
                <td class="p-3 text-muted-foreground">How do we outmaneuver?</td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>

    <!-- Framework Information -->
    <div class="bg-card border border-border rounded-2xl p-8 md:p-12 shadow-lg">
      <div class="max-w-5xl mx-auto">
        <h3 class="text-2xl md:text-3xl font-bold mb-6 text-foreground flex items-center gap-3">
          <span class="text-3xl">📚</span>
          About the Framework
        </h3>
        <div class="grid md:grid-cols-2 gap-8 text-muted-foreground leading-relaxed">
          <div class="space-y-4">
            <p>
              Henry Mintzberg's "5 P's of Strategy" framework, introduced in his seminal work 
              <em class="text-foreground">"Strategy Safari,"</em> provides a multifaceted view of what strategy means in practice.
            </p>
            <p>
              Rather than limiting strategy to a single definition, this framework acknowledges 
              that strategy can be understood through multiple complementary lenses, each offering 
              unique insights into organizational behavior.
            </p>
          </div>
          <div class="space-y-4">
            <p>
              Each "P" represents a different dimension of strategic thinking, from the deliberate 
              planning processes to the emergent patterns that arise from organizational actions.
            </p>
            <p>
              Understanding all five perspectives helps create a more complete and nuanced 
              approach to strategic management, enabling leaders to adapt their thinking to different 
              contexts and challenges.
            </p>
          </div>
        </div>
      </div>
    </div>

    <!-- Interactive Elements -->
    <div class="grid md:grid-cols-2 gap-8">
      <div class="bg-card border border-border rounded-xl p-8 hover:shadow-lg transition-all duration-300">
        <h4 class="text-xl font-bold text-card-foreground mb-4 flex items-center gap-3">
          <span class="text-2xl">🎯</span>
          Strategic Applications
        </h4>
        <ul class="space-y-3 text-muted-foreground">
          <li class="flex items-start gap-3">
            <span class="text-primary text-lg">•</span>
            <span>Use different P's for different strategic challenges and contexts</span>
          </li>
          <li class="flex items-start gap-3">
            <span class="text-primary text-lg">•</span>
            <span>Combine multiple perspectives for comprehensive strategic analysis</span>
          </li>
          <li class="flex items-start gap-3">
            <span class="text-primary text-lg">•</span>
            <span>Recognize when to shift between strategic approaches as situations evolve</span>
          </li>
          <li class="flex items-start gap-3">
            <span class="text-primary text-lg">•</span>
            <span>Balance deliberate planning with emergent strategic learning</span>
          </li>
        </ul>
      </div>
      
      <div class="bg-card border border-border rounded-xl p-8 hover:shadow-lg transition-all duration-300">
        <h4 class="text-xl font-bold text-card-foreground mb-4 flex items-center gap-3">
          <span class="text-2xl">🔗</span>
          Explore Further
        </h4>
        <div class="space-y-4">
          <a 
            href="/radar" 
            class="flex items-center gap-3 text-primary hover:text-primary/80 transition-colors group"
          >
            <span class="text-xl">📊</span>
            <span class="group-hover:translate-x-1 transition-transform duration-200">
              View strategy schools in interactive radar visualization
            </span>
          </a>
          <a 
            href="/schools" 
            class="flex items-center gap-3 text-primary hover:text-primary/80 transition-colors group"
          >
            <span class="text-xl">🏫</span>
            <span class="group-hover:translate-x-1 transition-transform duration-200">
              Explore the ten schools of strategy formation
            </span>
          </a>
          <a 
            href="/about" 
            class="flex items-center gap-3 text-primary hover:text-primary/80 transition-colors group"
          >
            <span class="text-xl">ℹ️</span>
            <span class="group-hover:translate-x-1 transition-transform duration-200">
              Learn about this project's methodology and inspiration
            </span>
          </a>
        </div>
      </div>
    </div>

    <!-- P's Interaction Matrix -->
    <div class="bg-gradient-to-br from-primary/5 to-secondary/5 rounded-2xl p-8 border border-border">
      <h3 class="text-2xl font-bold mb-6 text-foreground flex items-center gap-3">
        <span class="text-2xl">🔗</span>
        How the P's Interact
      </h3>
      <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
        <div class="bg-background/50 rounded-lg p-4 border border-border/50">
          <h4 class="font-semibold text-foreground mb-2">Plan ↔ Pattern</h4>
          <p class="text-sm text-muted-foreground">
            Intended strategies (plans) often differ from realized strategies (patterns), 
            creating learning opportunities for future planning.
          </p>
        </div>
        <div class="bg-background/50 rounded-lg p-4 border border-border/50">
          <h4 class="font-semibold text-foreground mb-2">Position ↔ Perspective</h4>
          <p class="text-sm text-muted-foreground">
            Market position reflects organizational worldview, while perspective 
            shapes how organizations choose to compete.
          </p>
        </div>
        <div class="bg-background/50 rounded-lg p-4 border border-border/50">
          <h4 class="font-semibold text-foreground mb-2">Ploy ↔ Pattern</h4>
          <p class="text-sm text-muted-foreground">
            Tactical moves (ploys) accumulate over time to create strategic 
            patterns that define long-term direction.
          </p>
        </div>
        <div class="bg-background/50 rounded-lg p-4 border border-border/50">
          <h4 class="font-semibold text-foreground mb-2">Plan ↔ Position</h4>
          <p class="text-sm text-muted-foreground">
            Strategic plans often aim to achieve or maintain competitive 
            positions in the marketplace.
          </p>
        </div>
        <div class="bg-background/50 rounded-lg p-4 border border-border/50">
          <h4 class="font-semibold text-foreground mb-2">Perspective ↔ Ploy</h4>
          <p class="text-sm text-muted-foreground">
            Organizational culture and values influence the types of tactical 
            moves considered acceptable or effective.
          </p>
        </div>
        <div class="bg-background/50 rounded-lg p-4 border border-border/50">
          <h4 class="font-semibold text-foreground mb-2">All Five Together</h4>
          <p class="text-sm text-muted-foreground">
            The most effective strategic thinking integrates all five P's 
            for a comprehensive understanding of organizational strategy.
          </p>
        </div>
      </div>
    </div>

    <!-- Call to Action -->
    <div class="text-center bg-gradient-to-r from-primary/10 via-primary/5 to-secondary/10 rounded-2xl p-12 border border-border">
      <h3 class="text-2xl md:text-3xl font-bold mb-4 text-foreground">
        Ready to See Strategy in Action?
      </h3>
      <p class="text-lg text-muted-foreground mb-8 max-w-2xl mx-auto">
        Explore how different strategy schools emphasize these five P's through our interactive radar visualization.
      </p>
      <div class="flex flex-col sm:flex-row gap-4 justify-center">
        <a href="/radar" 
           class="inline-flex items-center gap-3 bg-primary text-primary-foreground px-8 py-4 rounded-xl font-semibold text-lg hover:bg-primary/90 transform hover:scale-105 transition-all duration-200 shadow-lg hover:shadow-xl">
          <span class="text-xl">🚀</span>
          Explore Interactive Radar
        </a>
        <a href="/schools" 
           class="inline-flex items-center gap-3 text-primary border border-primary px-8 py-4 rounded-xl font-semibold text-lg hover:bg-primary/10 transition-all duration-200">
          <span class="text-xl">🏫</span>
          Browse Strategy Schools
        </a>
      </div>
    </div>
  </div>
{/if}===== SLUTT ./src/lib/components/PSOverview.svelte =====

===== START ./src/lib/components/ThemeToggle.svelte =====
<script lang="ts">
  import { onMount } from 'svelte';

  let theme = 'light';

  const toggleTheme = () => {
    theme = theme === 'dark' ? 'light' : 'dark';
    document.documentElement.classList.toggle('dark', theme === 'dark');
    localStorage.setItem('theme', theme);
  };

  onMount(() => {
    const stored = localStorage.getItem('theme');
    theme = stored ?? 'light';
    document.documentElement.classList.toggle('dark', theme === 'dark');
  });
</script>

<button
  on:click={toggleTheme}
  class="px-3 py-1 rounded-md bg-secondary text-secondary-foreground text-sm hover:opacity-80 transition"
>
  {theme === 'dark' ? '☀️ Light' : '🌙 Dark'}
</button>
===== SLUTT ./src/lib/components/ThemeToggle.svelte =====

===== START ./src/lib/components/AnimatedCard.svelte =====
<!-- src/lib/components/AnimatedCard.svelte -->
<script lang="ts">
    import { onMount } from 'svelte';
    import { spring } from 'svelte/motion';
    import { scale, fly } from 'svelte/transition';
    import { quintOut } from 'svelte/easing';
  
    export let title: string;
    export let description: string;
    export let icon: string = '📊';
    export let href: string | null = null;
    export let delay: number = 0;
    export let gradient: boolean = false;
  
    let cardElement: HTMLElement;
    let isHovered = false;
    let isVisible = false;
    let mounted = false;
  
    // Spring animation for hover effects
    const coords = spring({ x: 0, y: 0 }, {
      stiffness: 0.2,
      damping: 0.4
    });
  
    const tilt = spring({ x: 0, y: 0 }, {
      stiffness: 0.3,
      damping: 0.6
    });
  
    function handleMouseMove(event: MouseEvent) {
      if (!cardElement) return;
      
      const rect = cardElement.getBoundingClientRect();
      const x = event.clientX - rect.left;
      const y = event.clientY - rect.top;
      
      coords.set({ x, y });
      
      // Subtle 3D tilt effect
      const centerX = rect.width / 2;
      const centerY = rect.height / 2;
      const tiltX = (y - centerY) / 20;
      const tiltY = (centerX - x) / 20;
      
      tilt.set({ x: tiltX, y: tiltY });
    }
  
    function handleMouseEnter() {
      isHovered = true;
    }
  
    function handleMouseLeave() {
      isHovered = false;
      coords.set({ x: 0, y: 0 });
      tilt.set({ x: 0, y: 0 });
    }
  
    onMount(() => {
      mounted = true;
      setTimeout(() => {
        isVisible = true;
      }, delay);
    });
  
    $: transform = `perspective(1000px) rotateX(${$tilt.x}deg) rotateY(${$tilt.y}deg)`;
  </script>
  
  {#if mounted}
    <div
      class="relative group cursor-pointer"
      class:opacity-0={!isVisible}
      class:opacity-100={isVisible}
      in:fly={{ y: 50, duration: 600, delay, easing: quintOut }}
    >
      <!-- Card wrapper with 3D transform -->
      <div
        bind:this={cardElement}
        style="transform: {transform}; transition: transform 0.1s ease-out;"
        class="relative bg-card border border-border rounded-xl shadow-lg overflow-hidden transition-all duration-300"
        class:shadow-2xl={isHovered}
        class:scale-105={isHovered}
        on:mousemove={handleMouseMove}
        on:mouseenter={handleMouseEnter}
        on:mouseleave={handleMouseLeave}
        role={href ? "link" : "article"}
        tabindex={href ? 0 : -1}
      >
        <!-- Gradient overlay -->
        {#if gradient}
          <div class="absolute inset-0 bg-gradient-to-br from-primary/10 via-transparent to-secondary/10 opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
        {/if}
  
        <!-- Animated spotlight effect -->
        <div
          class="absolute inset-0 opacity-0 group-hover:opacity-20 transition-opacity duration-300 pointer-events-none"
          style="background: radial-gradient(400px at {$coords.x}px {$coords.y}px, rgba(255,255,255,0.3), transparent 50%)"
        ></div>
  
        <!-- Content -->
        <div class="relative z-10 p-6">
          <!-- Icon with bounce animation -->
          <div class="text-4xl mb-4 transition-transform duration-300 group-hover:scale-110 group-hover:rotate-12">
            {icon}
          </div>
  
          <!-- Title with slide animation -->
          <h3 class="text-xl font-bold mb-3 text-card-foreground group-hover:text-primary transition-colors duration-300">
            {title}
          </h3>
  
          <!-- Description -->
          <p class="text-muted-foreground leading-relaxed mb-4 transition-colors duration-300 group-hover:text-foreground/80">
            {description}
          </p>
  
          <!-- CTA with arrow animation -->
          {#if href}
            <div class="flex items-center text-primary font-medium group-hover:translate-x-2 transition-transform duration-300">
              <span>Explore</span>
              <span class="ml-2 transition-transform duration-300 group-hover:translate-x-1">→</span>
            </div>
          {/if}
        </div>
  
        <!-- Border glow effect -->
        <div class="absolute inset-0 border-2 border-transparent group-hover:border-primary/30 rounded-xl transition-colors duration-300"></div>
      </div>
    </div>
  {/if}
  
  <!-- Enhanced Loading Spinner Component -->
  <div class="hidden">
    <!-- src/lib/components/LoadingSpinner.svelte -->
    <script>
      export let size = 'md'; // 'sm', 'md', 'lg'
      export let message = 'Loading...';
      
      const sizes = {
        sm: 'w-4 h-4',
        md: 'w-8 h-8', 
        lg: 'w-12 h-12'
      };
    </script>
  
    <div class="flex flex-col items-center justify-center gap-4 p-8">
      <!-- Animated logo spinner -->
      <div class="relative {sizes[size]}">
        <div class="absolute inset-0 border-4 border-primary/20 rounded-full"></div>
        <div class="absolute inset-0 border-4 border-primary border-t-transparent rounded-full animate-spin"></div>
        <div class="absolute inset-2 border-2 border-secondary/40 rounded-full animate-pulse"></div>
      </div>
      
      <!-- Animated text -->
      <div class="text-muted-foreground text-sm animate-pulse">
        {message}
      </div>
      
      <!-- Loading dots -->
      <div class="flex gap-1">
        {#each Array(3) as _, i}
          <div 
            class="w-2 h-2 bg-primary rounded-full animate-bounce"
            style="animation-delay: {i * 0.1}s"
          ></div>
        {/each}
      </div>
    </div>
  </div>
  
  <!-- Enhanced Button Component -->
  <div class="hidden">
    <!-- src/lib/components/AnimatedButton.svelte -->
    <script>
      export let variant = 'primary'; // 'primary', 'secondary', 'ghost'
      export let size = 'md'; // 'sm', 'md', 'lg'
      export let icon = '';
      export let loading = false;
      export let disabled = false;
      export let ripple = true;
      
      let buttonElement: HTMLElement;
      let ripples: Array<{id: number, x: number, y: number}> = [];
      
      function handleClick(event: MouseEvent) {
        if (!ripple || loading || disabled) return;
        
        const rect = buttonElement.getBoundingClientRect();
        const x = event.clientX - rect.left;
        const y = event.clientY - rect.top;
        
        const newRipple = { id: Date.now(), x, y };
        ripples = [...ripples, newRipple];
        
        setTimeout(() => {
          ripples = ripples.filter(r => r.id !== newRipple.id);
        }, 600);
      }
      
      $: classes = [
        'relative overflow-hidden font-medium transition-all duration-200 rounded-lg',
        'focus:outline-none focus:ring-2 focus:ring-offset-2',
        'disabled:opacity-50 disabled:cursor-not-allowed',
        'active:scale-95',
        variant === 'primary' ? 'bg-primary text-primary-foreground hover:bg-primary/90 focus:ring-primary' : '',
        variant === 'secondary' ? 'bg-secondary text-secondary-foreground hover:bg-secondary/90 focus:ring-secondary' : '',
        variant === 'ghost' ? 'bg-transparent text-foreground hover:bg-muted focus:ring-muted' : '',
        size === 'sm' ? 'px-3 py-1.5 text-sm' : '',
        size === 'md' ? 'px-4 py-2' : '',
        size === 'lg' ? 'px-6 py-3 text-lg' : ''
      ].filter(Boolean).join(' ');
    </script>
  
    <button
      bind:this={buttonElement}
      class={classes}
      {disabled}
      on:click={handleClick}
      on:click
    >
      <!-- Ripple effects -->
      {#each ripples as ripple (ripple.id)}
        <span
          class="absolute bg-white/30 rounded-full animate-ping"
          style="left: {ripple.x - 10}px; top: {ripple.y - 10}px; width: 20px; height: 20px;"
        ></span>
      {/each}
      
      <!-- Content -->
      <span class="relative flex items-center justify-center gap-2">
        {#if loading}
          <div class="w-4 h-4 border-2 border-current border-t-transparent rounded-full animate-spin"></div>
        {:else if icon}
          <span class="text-lg">{icon}</span>
        {/if}
        <slot />
      </span>
    </button>
  </div>===== SLUTT ./src/lib/components/AnimatedCard.svelte =====

===== START ./src/lib/components/EnhancedSchoolCard.svelte =====
<!-- src/lib/components/EnhancedSchoolCard.svelte -->
<script lang="ts">
    import { createEventDispatcher } from 'svelte';
    import { slide } from 'svelte/transition';
    import type { EnhancedSchoolData, StrategyP } from '$lib/types';
  
    export let school: EnhancedSchoolData;
    export let expanded = false;
    export let showComparison = false;
  
    const dispatch = createEventDispatcher();
  
    function toggleExpanded() {
      expanded = !expanded;
      dispatch('toggle', { school, expanded });
    }
  
    function getPLabel(index: number): string {
      const labels: StrategyP[] = ['plan', 'pattern', 'position', 'perspective', 'ploy'];
      return labels[index] || 'unknown';
    }
  
    function getGroupColor(group: string) {
      return group === 'Prescriptive' 
        ? 'bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300'
        : 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300';
    }
  
    function getStrengthColor(value: number): string {
      if (value >= 4) return 'text-green-600';
      if (value >= 3) return 'text-yellow-600';
      return 'text-gray-500';
    }
  
    $: strongestP = school.values.reduce((max, curr, idx) => 
      curr > school.values[max] ? idx : max, 0);
    
    $: averageEmphasis = school.values.reduce((sum, val) => sum + val, 0) / 5;
  </script>
  
  <div class="bg-card border border-border rounded-xl shadow-sm hover:shadow-lg transition-all duration-300 overflow-hidden">
    <!-- Header -->
    <button 
      on:click={toggleExpanded}
      class="w-full p-6 text-left hover:bg-muted/30 transition-colors focus:outline-none focus:ring-2 focus:ring-primary focus:ring-inset"
    >
      <div class="flex justify-between items-start">
        <div class="flex-1">
          <div class="flex items-center gap-3 mb-2">
            <h3 class="text-xl font-bold text-card-foreground group-hover:text-primary transition-colors">
              {school.name}
            </h3>
            <span class="text-xs px-2 py-1 rounded-full font-medium {getGroupColor(school.group)}">
              {school.group}
            </span>
          </div>
          
          <p class="text-muted-foreground text-sm mb-3 leading-relaxed">
            {school.description}
          </p>
  
          <!-- Quick stats -->
          <div class="flex items-center gap-4 text-xs text-muted-foreground">
            <span class="flex items-center gap-1">
              <span class="font-medium {getStrengthColor(school.values[strongestP])}">
                Strongest: {getPLabel(strongestP).charAt(0).toUpperCase() + getPLabel(strongestP).slice(1)}
              </span>
              <span class="text-muted-foreground/60">({school.values[strongestP]}/5)</span>
            </span>
            <span class="text-muted-foreground/40">•</span>
            <span>Avg: {averageEmphasis.toFixed(1)}</span>
          </div>
        </div>
        
        <div class="flex items-center gap-2 ml-4">
          {#if showComparison}
            <div class="text-xs text-primary bg-primary/10 px-2 py-1 rounded">
              Selected
            </div>
          {/if}
          <div class="text-muted-foreground transition-transform duration-200" 
               class:rotate-180={expanded}>
            ↓
          </div>
        </div>
      </div>
    </button>
  
    <!-- Expanded Content -->
    {#if expanded}
      <div transition:slide={{ duration: 300 }} class="px-6 pb-6 space-y-6">
        
        <!-- Origin & Key Figures -->
        <div class="grid md:grid-cols-2 gap-4 text-sm">
          <div>
            <h4 class="font-semibold text-card-foreground mb-2 flex items-center gap-2">
              <span class="text-base">📅</span>
              Origin Period
            </h4>
            <p class="text-muted-foreground">{school.originPeriod}</p>
          </div>
          <div>
            <h4 class="font-semibold text-card-foreground mb-2 flex items-center gap-2">
              <span class="text-base">👥</span>
              Key Figures
            </h4>
            <p class="text-muted-foreground">{school.keyFigures.join(', ')}</p>
          </div>
        </div>
  
        <!-- Long Description -->
        <div>
          <h4 class="font-semibold text-card-foreground mb-2 flex items-center gap-2">
            <span class="text-base">📝</span>
            Overview
          </h4>
          <p class="text-muted-foreground text-sm leading-relaxed">
            {school.longDescription}
          </p>
        </div>
  
        <!-- Core Beliefs -->
        <div>
          <h4 class="font-semibold text-card-foreground mb-3 flex items-center gap-2">
            <span class="text-base">💡</span>
            Core Beliefs
          </h4>
          <ul class="space-y-2">
            {#each school.coreBeliefs as belief}
              <li class="flex items-start gap-2 text-sm">
                <span class="text-primary text-xs mt-1">•</span>
                <span class="text-muted-foreground">{belief}</span>
              </li>
            {/each}
          </ul>
        </div>
  
        <!-- Five P's Analysis -->
        <div>
          <h4 class="font-semibold text-card-foreground mb-3 flex items-center gap-2">
            <span class="text-base">📊</span>
            Five P's Emphasis
          </h4>
          <div class="space-y-3">
            {#each school.values as value, index}
              {@const pKey = getPLabel(index)}
              {@const pData = school.pApproaches[pKey]}
              <div class="space-y-2">
                <div class="flex items-center justify-between">
                  <span class="font-medium text-card-foreground capitalize">
                    {pKey}
                  </span>
                  <span class="text-sm {getStrengthColor(value)} font-medium">
                    {value}/5
                  </span>
                </div>
                <div class="flex items-center gap-3">
                  <div class="flex-1 bg-muted rounded-full h-2">
                    <div 
                      class="bg-gradient-to-r from-primary to-primary/80 h-2 rounded-full transition-all duration-500"
                      style="width: {(value / 5) * 100}%"
                    ></div>
                  </div>
                </div>
                {#if pData}
                  <p class="text-xs text-muted-foreground pl-1">
                    {pData.description}
                  </p>
                {/if}
              </div>
            {/each}
          </div>
        </div>
  
        <!-- Strengths & Weaknesses -->
        <div class="grid md:grid-cols-2 gap-4">
          <div>
            <h4 class="font-semibold text-card-foreground mb-3 flex items-center gap-2">
              <span class="text-base">✅</span>
              Strengths
            </h4>
            <ul class="space-y-2">
              {#each school.strengths as strength}
                <li class="flex items-start gap-2 text-sm">
                  <span class="text-green-500 text-xs mt-1">+</span>
                  <span class="text-muted-foreground">{strength}</span>
                </li>
              {/each}
            </ul>
          </div>
          <div>
            <h4 class="font-semibold text-card-foreground mb-3 flex items-center gap-2">
              <span class="text-base">⚠️</span>
              Limitations
            </h4>
            <ul class="space-y-2">
              {#each school.weaknesses as weakness}
                <li class="flex items-start gap-2 text-sm">
                  <span class="text-yellow-500 text-xs mt-1">-</span>
                  <span class="text-muted-foreground">{weakness}</span>
                </li>
              {/each}
            </ul>
          </div>
        </div>
  
        <!-- Actions -->
        <div class="flex gap-3 pt-4 border-t border-border">
          <button 
            on:click={() => dispatch('compare', school)}
            class="flex items-center gap-2 px-4 py-2 bg-primary text-primary-foreground rounded-lg text-sm font-medium hover:bg-primary/90 transition-colors"
          >
            <span>📊</span>
            Compare in Radar
          </button>
          <button 
            on:click={() => dispatch('learn-more', school)}
            class="flex items-center gap-2 px-4 py-2 bg-secondary text-secondary-foreground rounded-lg text-sm font-medium hover:bg-secondary/90 transition-colors"
          >
            <span>📖</span>
            Learn More
          </button>
        </div>
      </div>
    {/if}
  </div>===== SLUTT ./src/lib/components/EnhancedSchoolCard.svelte =====

===== START ./src/lib/components/POverview.svelte =====
<script lang="ts">
  export let schoolName: string;
  export let values: Record<string, number>;
</script>

<div class="rounded-lg border bg-card text-card-foreground shadow-sm p-4">
  <h2 class="text-lg font-semibold">{schoolName}</h2>
  <ul class="mt-2 space-y-1 text-sm text-muted-foreground">
    {#each Object.entries(values) as [key, val]}
      <li class="flex justify-between">
        <span class="capitalize">{key}</span>
        <span>{val}</span>
      </li>
    {/each}
  </ul>
</div>
===== SLUTT ./src/lib/components/POverview.svelte =====

===== START ./src/lib/components/SchoolOverview.svelte =====
<script lang="ts">
  import { onMount } from 'svelte';
  import type { StrategySchool } from '$lib/types';

  let schools: StrategySchool[] = [];
  let loading = true;
  let error: string | null = null;

  onMount(async () => {
    try {
      const res = await fetch('/data/radarData.json');
      if (!res.ok) throw new Error('Failed to fetch school data');
      schools = await res.json();
    } catch (err) {
      error = err instanceof Error ? err.message : 'Unknown error';
    } finally {
      loading = false;
    }
  });
</script>

{#if loading}
  <p class="text-muted-foreground">Loading...</p>
{:else if error}
  <p class="text-red-500">Error: {error}</p>
{:else}
  <div class="grid md:grid-cols-2 gap-4">
    {#each schools as school (school.name)}
      <div class="border rounded-lg p-4 bg-card shadow-sm">
        <h2 class="text-xl font-semibold mb-1">{school.name}</h2>
        <p class="text-sm text-muted-foreground">{school.description}</p>
      </div>
    {/each}
  </div>
{/if}
===== SLUTT ./src/lib/components/SchoolOverview.svelte =====

===== START ./src/lib/components/EnhancedRadarPlot.svelte =====
<!-- src/lib/components/EnhancedRadarPlot.svelte -->
<script lang="ts">
    import { onMount, onDestroy } from 'svelte';
    import Chart from 'chart.js/auto';
    import type { RadarSchoolData } from '$lib/types';
    
    export let filteredData: RadarSchoolData[] = [];
    export let animationDuration = 1500;
    
    let canvas: HTMLCanvasElement;
    let chart: Chart;
    let isAnimating = false;
    
    const colors = [
      { bg: 'rgba(99, 102, 241, 0.2)', border: 'rgb(99, 102, 241)' }, // Indigo
      { bg: 'rgba(236, 72, 153, 0.2)', border: 'rgb(236, 72, 153)' }, // Pink
      { bg: 'rgba(34, 197, 94, 0.2)', border: 'rgb(34, 197, 94)' },   // Green
      { bg: 'rgba(251, 146, 60, 0.2)', border: 'rgb(251, 146, 60)' }, // Orange
      { bg: 'rgba(168, 85, 247, 0.2)', border: 'rgb(168, 85, 247)' }, // Purple
      { bg: 'rgba(14, 165, 233, 0.2)', border: 'rgb(14, 165, 233)' }, // Sky
      { bg: 'rgba(239, 68, 68, 0.2)', border: 'rgb(239, 68, 68)' },   // Red
      { bg: 'rgba(16, 185, 129, 0.2)', border: 'rgb(16, 185, 129)' }, // Emerald
      { bg: 'rgba(245, 158, 11, 0.2)', border: 'rgb(245, 158, 11)' }, // Amber
      { bg: 'rgba(139, 92, 246, 0.2)', border: 'rgb(139, 92, 246)' }  // Violet
    ];
  
    const createChart = () => {
      const labels = ['Plan', 'Pattern', 'Position', 'Perspective', 'Ploy'];
  
      const datasets = filteredData.map((school, index) => ({
        label: school.school,
        data: school.values,
        fill: true,
        backgroundColor: colors[index % colors.length].bg,
        borderColor: colors[index % colors.length].border,
        borderWidth: 3,
        borderDash: [],
        pointBackgroundColor: colors[index % colors.length].border,
        pointBorderColor: '#ffffff',
        pointBorderWidth: 2,
        pointRadius: 6,
        pointHoverRadius: 8,
        pointHoverBackgroundColor: colors[index % colors.length].border,
        pointHoverBorderColor: '#ffffff',
        pointHoverBorderWidth: 3,
        tension: 0.1
      }));
  
      chart = new Chart(canvas, {
        type: 'radar',
        data: { labels, datasets },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          animation: {
            duration: animationDuration,
            easing: 'easeOutQuart',
            onProgress: (animation) => {
              isAnimating = animation.currentStep < animation.numSteps;
            },
            onComplete: () => {
              isAnimating = false;
            }
          },
          interaction: {
            intersect: false,
            mode: 'point'
          },
          plugins: {
            legend: {
              position: 'top',
              labels: {
                usePointStyle: true,
                pointStyle: 'circle',
                padding: 20,
                font: {
                  size: 13,
                  weight: '500'
                },
                generateLabels: (chart) => {
                  const datasets = chart.data.datasets;
                  return datasets.map((dataset, i) => ({
                    text: dataset.label,
                    fillStyle: colors[i % colors.length].border,
                    strokeStyle: colors[i % colors.length].border,
                    lineWidth: 0,
                    pointStyle: 'circle',
                    datasetIndex: i
                  }));
                }
              },
              onHover: (evt, legendItem, legend) => {
                legend.chart.canvas.style.cursor = 'pointer';
              },
              onLeave: (evt, legendItem, legend) => {
                legend.chart.canvas.style.cursor = 'default';
              }
            },
            tooltip: {
              backgroundColor: 'rgba(0, 0, 0, 0.9)',
              titleColor: '#ffffff',
              bodyColor: '#ffffff',
              borderColor: 'rgba(255, 255, 255, 0.1)',
              borderWidth: 1,
              cornerRadius: 8,
              padding: 12,
              displayColors: true,
              callbacks: {
                title: (tooltipItems) => {
                  return tooltipItems[0]?.label || '';
                },
                label: (context) => {
                  const label = context.dataset.label || '';
                  const value = context.parsed.r;
                  return `${label}: ${value}/5`;
                }
              }
            }
          },
          scales: {
            r: {
              min: 0,
              max: 5,
              ticks: {
                stepSize: 1,
                backdropColor: 'transparent',
                color: 'rgba(156, 163, 175, 0.8)',
                font: {
                  size: 11
                },
                z: 1
              },
              grid: {
                color: 'rgba(156, 163, 175, 0.2)',
                lineWidth: 1
              },
              angleLines: {
                color: 'rgba(156, 163, 175, 0.3)',
                lineWidth: 1
              },
              pointLabels: {
                font: {
                  size: 14,
                  weight: '600'
                },
                color: 'rgba(75, 85, 99, 1)',
                padding: 20
              }
            }
          },
          onHover: (event, elements) => {
            if (chart?.canvas) {
              chart.canvas.style.cursor = elements.length > 0 ? 'pointer' : 'default';
            }
          }
        }
      });
    };
  
    // Enhanced update function with staggered animations
    const updateChart = async () => {
      if (!chart) return;
      
      isAnimating = true;
      
      // Animate out old data
      chart.data.datasets.forEach(dataset => {
        dataset.data = dataset.data.map(() => 0);
      });
      chart.update('none');
      
      // Small delay before animating in new data
      setTimeout(() => {
        chart.data.datasets = filteredData.map((school, index) => ({
          label: school.school,
          data: school.values,
          fill: true,
          backgroundColor: colors[index % colors.length].bg,
          borderColor: colors[index % colors.length].border,
          borderWidth: 3,
          pointBackgroundColor: colors[index % colors.length].border,
          pointBorderColor: '#ffffff',
          pointBorderWidth: 2,
          pointRadius: 6,
          pointHoverRadius: 8,
          pointHoverBackgroundColor: colors[index % colors.length].border,
          pointHoverBorderColor: '#ffffff',
          pointHoverBorderWidth: 3,
          tension: 0.1
        }));
        
        chart.update('active');
      }, 150);
    };
  
    onMount(() => {
      createChart();
    });
  
    $: if (chart && filteredData) {
      updateChart();
    }
  
    onDestroy(() => {
      chart?.destroy();
    });
  </script>
  
  <div class="relative bg-card border border-border rounded-xl p-6 shadow-lg overflow-hidden">
    <!-- Animated background gradient -->
    <div class="absolute inset-0 bg-gradient-to-br from-primary/5 via-transparent to-secondary/5 opacity-50"></div>
    
    <!-- Loading indicator during animations -->
    {#if isAnimating}
      <div class="absolute top-4 right-4 z-10">
        <div class="w-4 h-4 border-2 border-primary/30 border-t-primary rounded-full animate-spin"></div>
      </div>
    {/if}
    
    <!-- Chart title with animation -->
    <div class="relative z-10 mb-4">
      <h3 class="text-lg font-semibold text-card-foreground flex items-center gap-2">
        <span class="text-xl">📊</span>
        Strategy Schools Radar
        <span class="text-sm text-muted-foreground ml-auto">
          ({filteredData.length} {filteredData.length === 1 ? 'school' : 'schools'})
        </span>
      </h3>
    </div>
    
    <!-- Chart container -->
    <div class="relative z-10 h-96">
      <canvas bind:this={canvas} class="drop-shadow-sm"></canvas>
    </div>
    
    <!-- Quick insights panel -->
    {#if filteredData.length > 0}
      <div class="relative z-10 mt-4 p-4 bg-muted/30 rounded-lg border border-border/50">
        <h4 class="text-sm font-medium text-card-foreground mb-2">Quick Insights:</h4>
        <div class="grid grid-cols-2 md:grid-cols-5 gap-2 text-xs">
          {#each ['Plan', 'Pattern', 'Position', 'Perspective', 'Ploy'] as p, index}
            {@const avgValue = filteredData.reduce((sum, school) => sum + school.values[index], 0) / filteredData.length}
            <div class="text-center p-2 bg-background/50 rounded border border-border/30">
              <div class="font-medium text-card-foreground">{p}</div>
              <div class="text-primary font-bold">{avgValue.toFixed(1)}</div>
            </div>
          {/each}
        </div>
      </div>
    {/if}
  </div>===== SLUTT ./src/lib/components/EnhancedRadarPlot.svelte =====

===== START ./src/lib/index.ts =====
// place files you want to import through the `$lib` alias in this folder.
===== SLUTT ./src/lib/index.ts =====

===== START ./src/lib/data/radar-config.ts =====
// File: src/lib/data/radar-config.ts
import type { ChartData, ChartOptions } from 'chart.js';

export const radarData: ChartData<'radar'> = {
  labels: ['Plan', 'Pattern', 'Position', 'Perspective', 'Ploy'],
  datasets: [
    {
      label: 'Design School',
      data: [5, 2, 3, 2, 1],
      backgroundColor: 'rgba(255, 99, 132, 0.2)',
      borderColor: 'rgba(255, 99, 132, 1)',
      borderWidth: 1
    },
    {
      label: 'Planning School',
      data: [5, 1, 3, 2, 2],
      backgroundColor: 'rgba(54, 162, 235, 0.2)',
      borderColor: 'rgba(54, 162, 235, 1)',
      borderWidth: 1
    },
    {
      label: 'Positioning School',
      data: [4, 2, 5, 2, 4],
      backgroundColor: 'rgba(255, 206, 86, 0.2)',
      borderColor: 'rgba(255, 206, 86, 1)',
      borderWidth: 1
    },
    {
      label: 'Entrepreneurial School',
      data: [3, 3, 3, 5, 4],
      backgroundColor: 'rgba(75, 192, 192, 0.2)',
      borderColor: 'rgba(75, 192, 192, 1)',
      borderWidth: 1
    },
    {
      label: 'Cognitive School',
      data: [2, 3, 2, 5, 1],
      backgroundColor: 'rgba(153, 102, 255, 0.2)',
      borderColor: 'rgba(153, 102, 255, 1)',
      borderWidth: 1
    },
    {
      label: 'Learning School',
      data: [2, 5, 3, 4, 2],
      backgroundColor: 'rgba(255, 159, 64, 0.2)',
      borderColor: 'rgba(255, 159, 64, 1)',
      borderWidth: 1
    },
    {
      label: 'Power School',
      data: [3, 4, 4, 3, 5],
      backgroundColor: 'rgba(199, 199, 199, 0.2)',
      borderColor: 'rgba(199, 199, 199, 1)',
      borderWidth: 1
    },
    {
      label: 'Cultural School',
      data: [2, 5, 3, 5, 1],
      backgroundColor: 'rgba(255, 99, 255, 0.2)',
      borderColor: 'rgba(255, 99, 255, 1)',
      borderWidth: 1
    },
    {
      label: 'Environmental School',
      data: [1, 4, 4, 2, 2],
      backgroundColor: 'rgba(100, 200, 100, 0.2)',
      borderColor: 'rgba(100, 200, 100, 1)',
      borderWidth: 1
    },
    {
      label: 'Configuration School',
      data: [4, 4, 4, 4, 3],
      backgroundColor: 'rgba(0, 128, 255, 0.2)',
      borderColor: 'rgba(0, 128, 255, 1)',
      borderWidth: 1
    }
  ]
};

export const radarOptions: ChartOptions<'radar'> = {
  responsive: true,
  scales: {
    r: {
      beginAtZero: true,
      min: 0,
      max: 5,
      ticks: {
        stepSize: 1,
        backdropColor: 'transparent'
      }
    }
  },
  plugins: {
    legend: {
      position: 'top'
    },
    title: {
      display: false
    }
  }
};
===== SLUTT ./src/lib/data/radar-config.ts =====

===== START ./src/app.html =====
<!doctype html>
<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" href="%sveltekit.assets%/favicon.png" />
		<meta name="viewport" content="width=device-width, initial-scale=1" />
		%sveltekit.head%
	</head>
	<body data-sveltekit-preload-data="hover">
		<div style="display: contents">%sveltekit.body%</div>
	</body>
</html>
===== SLUTT ./src/app.html =====

===== START ./src/routes/+page.svelte =====
<!-- src/routes/+page.svelte -->
<script lang="ts">
  import { onMount } from 'svelte';
  
  let heroVisible = false;
  let cardsVisible = false;

  onMount(() => {
    // Staggered animations
    setTimeout(() => heroVisible = true, 100);
    setTimeout(() => cardsVisible = true, 300);
  });
</script>

<svelte:head>
  <title>Strategy Safari - Interactive Strategy Visualization</title>
  <meta name="description" content="Explore Mintzberg's Strategy Safari and the five P's of strategy through interactive visualizations." />
</svelte:head>

<!-- Hero Section -->
<section class="relative min-h-[80vh] flex items-center justify-center overflow-hidden bg-gradient-to-br from-primary/5 via-background to-secondary/5">
  <!-- Background Pattern -->
  <div class="absolute inset-0 opacity-10">
    <svg class="w-full h-full" viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg">
      <defs>
        <pattern id="grid" width="10" height="10" patternUnits="userSpaceOnUse">
          <path d="M 10 0 L 0 0 0 10" fill="none" stroke="currentColor" stroke-width="0.5"/>
        </pattern>
      </defs>
      <rect width="100" height="100" fill="url(#grid)" />
    </svg>
  </div>
  
  <div class="relative z-10 max-w-6xl mx-auto px-4 py-16 text-center">
    <div class="transition-all duration-1000 transform" 
         class:translate-y-0={heroVisible} 
         class:opacity-100={heroVisible}
         class:translate-y-8={!heroVisible}
         class:opacity-0={!heroVisible}>
      
      <!-- Main Title -->
      <h1 class="text-5xl md:text-7xl font-bold mb-6 bg-gradient-to-r from-primary via-primary to-secondary bg-clip-text text-transparent">
        Strategy Safari
      </h1>
      
      <!-- Subtitle -->
      <p class="text-xl md:text-2xl text-muted-foreground mb-4 max-w-3xl mx-auto leading-relaxed">
        Navigate the landscape of strategic thinking through 
        <span class="text-primary font-semibold">interactive visualizations</span>
      </p>
      
      <!-- Description -->
      <p class="text-lg text-muted-foreground/80 mb-12 max-w-2xl mx-auto">
        Explore Henry Mintzberg's ten schools of strategy and the five P's framework 
        through beautiful, interactive charts and comprehensive guides.
      </p>
      
      <!-- CTA Buttons -->
      <div class="flex flex-col sm:flex-row gap-4 justify-center items-center">
        <a href="/radar" 
           class="group inline-flex items-center gap-3 bg-primary text-primary-foreground px-8 py-4 rounded-xl font-semibold text-lg hover:bg-primary/90 transform hover:scale-105 transition-all duration-200 shadow-lg hover:shadow-xl">
          <span class="text-2xl group-hover:rotate-12 transition-transform duration-200">📊</span>
          Explore Radar Chart
        </a>
        <a href="/schools" 
           class="inline-flex items-center gap-3 bg-secondary text-secondary-foreground px-8 py-4 rounded-xl font-semibold text-lg hover:bg-secondary/90 transform hover:scale-105 transition-all duration-200 shadow-lg hover:shadow-xl">
          <span class="text-2xl">🏫</span>
          Browse Schools
        </a>
      </div>
    </div>
  </div>
</section>

<!-- Features Section -->
<section class="py-20 bg-muted/30">
  <div class="max-w-7xl mx-auto px-4">
    <div class="text-center mb-16">
      <h2 class="text-3xl md:text-4xl font-bold mb-4 text-foreground">
        Discover Strategic Perspectives
      </h2>
      <p class="text-lg text-muted-foreground max-w-2xl mx-auto">
        Each tool offers a unique lens for understanding strategy formation and implementation
      </p>
    </div>

    <div class="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
      <!-- Interactive Radar -->
      <div class="group transition-all duration-500 transform hover:scale-105"
           class:translate-y-0={cardsVisible}
           class:opacity-100={cardsVisible}
           class:translate-y-8={!cardsVisible}
           class:opacity-0={!cardsVisible}
           style="transition-delay: 0ms;">
        <a href="/radar" class="block bg-card border border-border shadow-lg rounded-2xl p-8 hover:shadow-2xl transition-all duration-300 h-full">
          <div class="text-5xl mb-6 group-hover:scale-110 transition-transform duration-300">📊</div>
          <h3 class="text-xl font-bold mb-4 text-card-foreground">Interactive Radar</h3>
          <p class="text-muted-foreground mb-6 leading-relaxed">
            Visualize strategy schools using the 5 P's framework in a dynamic, filterable radar chart.
          </p>
          <div class="flex items-center text-primary font-medium group-hover:translate-x-2 transition-transform duration-200">
            <span>Explore visualization</span>
            <span class="ml-2">→</span>
          </div>
        </a>
      </div>
      
      <!-- Strategy Schools -->
      <div class="group transition-all duration-500 transform hover:scale-105"
           class:translate-y-0={cardsVisible}
           class:opacity-100={cardsVisible}
           class:translate-y-8={!cardsVisible}
           class:opacity-0={!cardsVisible}
           style="transition-delay: 100ms;">
        <a href="/schools" class="block bg-card border border-border shadow-lg rounded-2xl p-8 hover:shadow-2xl transition-all duration-300 h-full">
          <div class="text-5xl mb-6 group-hover:scale-110 transition-transform duration-300">🏫</div>
          <h3 class="text-xl font-bold mb-4 text-card-foreground">Strategy Schools</h3>
          <p class="text-muted-foreground mb-6 leading-relaxed">
            Deep dive into the ten schools of strategy formation from Design to Configuration.
          </p>
          <div class="flex items-center text-primary font-medium group-hover:translate-x-2 transition-transform duration-200">
            <span>Browse schools</span>
            <span class="ml-2">→</span>
          </div>
        </a>
      </div>
      
      <!-- The 5 P's -->
      <div class="group transition-all duration-500 transform hover:scale-105"
           class:translate-y-0={cardsVisible}
           class:opacity-100={cardsVisible}
           class:translate-y-8={!cardsVisible}
           class:opacity-0={!cardsVisible}
           style="transition-delay: 200ms;">
        <a href="/ps" class="block bg-card border border-border shadow-lg rounded-2xl p-8 hover:shadow-2xl transition-all duration-300 h-full">
          <div class="text-5xl mb-6 group-hover:scale-110 transition-transform duration-300">📝</div>
          <h3 class="text-xl font-bold mb-4 text-card-foreground">The 5 P's</h3>
          <p class="text-muted-foreground mb-6 leading-relaxed">
            Master Plan, Pattern, Position, Perspective, and Ploy as strategic concepts.
          </p>
          <div class="flex items-center text-primary font-medium group-hover:translate-x-2 transition-transform duration-200">
            <span>Learn framework</span>
            <span class="ml-2">→</span>
          </div>
        </a>
      </div>
      
      <!-- About -->
      <div class="group transition-all duration-500 transform hover:scale-105"
           class:translate-y-0={cardsVisible}
           class:opacity-100={cardsVisible}
           class:translate-y-8={!cardsVisible}
           class:opacity-0={!cardsVisible}
           style="transition-delay: 300ms;">
        <a href="/about" class="block bg-card border border-border shadow-lg rounded-2xl p-8 hover:shadow-2xl transition-all duration-300 h-full">
          <div class="text-5xl mb-6 group-hover:scale-110 transition-transform duration-300">ℹ️</div>
          <h3 class="text-xl font-bold mb-4 text-card-foreground">About</h3>
          <p class="text-muted-foreground mb-6 leading-relaxed">
            Learn about this project's inspiration and methodology behind the visualizations.
          </p>
          <div class="flex items-center text-primary font-medium group-hover:translate-x-2 transition-transform duration-200">
            <span>Read more</span>
            <span class="ml-2">→</span>
          </div>
        </a>
      </div>
    </div>
  </div>
</section>

<!-- Quick Start Section -->
<section class="py-20 bg-background">
  <div class="max-w-6xl mx-auto px-4 text-center">
    <div class="bg-gradient-to-r from-primary/10 via-primary/5 to-secondary/10 rounded-3xl p-12 border border-border">
      <h2 class="text-3xl md:text-4xl font-bold mb-6 text-foreground">
        Ready to Explore?
      </h2>
      <p class="text-lg text-muted-foreground mb-8 max-w-2xl mx-auto leading-relaxed">
        Start your journey through the strategic landscape. Compare schools, 
        understand frameworks, and discover new perspectives on strategy formation.
      </p>
      <div class="flex flex-col sm:flex-row gap-4 justify-center items-center">
        <a href="/radar" 
           class="inline-flex items-center gap-3 bg-primary text-primary-foreground px-6 py-3 rounded-lg font-medium hover:bg-primary/90 transition-colors">
          <span>🚀</span>
          Start with Radar
        </a>
        <a href="/schools" 
           class="inline-flex items-center gap-3 text-primary border border-primary px-6 py-3 rounded-lg font-medium hover:bg-primary/10 transition-colors">
          <span>📖</span>
          Read About Schools
        </a>
      </div>
    </div>
  </div>
</section>

<!-- Stats Section -->
<section class="py-16 bg-muted/30">
  <div class="max-w-4xl mx-auto px-4">
    <div class="grid md:grid-cols-3 gap-8 text-center">
      <div class="space-y-2">
        <div class="text-4xl font-bold text-primary">10</div>
        <div class="text-muted-foreground">Strategy Schools</div>
      </div>
      <div class="space-y-2">
        <div class="text-4xl font-bold text-primary">5</div>
        <div class="text-muted-foreground">Strategic Perspectives</div>
      </div>
      <div class="space-y-2">
        <div class="text-4xl font-bold text-primary">∞</div>
        <div class="text-muted-foreground">Insights to Discover</div>
      </div>
    </div>
  </div>
</section>===== SLUTT ./src/routes/+page.svelte =====

===== START ./src/routes/page.svelte.test.ts =====
import { describe, test, expect } from 'vitest';
import '@testing-library/jest-dom/vitest';
import { render, screen } from '@testing-library/svelte';
import Page from './+page.svelte';

describe('/+page.svelte', () => {
	test('should render h1', () => {
		render(Page);
		expect(screen.getByRole('heading', { level: 1 })).toBeInTheDocument();
	});
});
===== SLUTT ./src/routes/page.svelte.test.ts =====

===== START ./src/routes/about/+page.svelte =====
<!-- src/routes/about/+page.svelte -->
<script lang="ts">
  import { onMount } from 'svelte';
  
  let sectionsVisible = false;
  let heroVisible = false;

  onMount(() => {
    setTimeout(() => heroVisible = true, 100);
    setTimeout(() => sectionsVisible = true, 300);
  });
</script>

<svelte:head>
  <title>About Strategy Safari - Interactive Strategy Learning</title>
  <meta name="description" content="Learn about the Strategy Safari project, Henry Mintzberg's strategic thinking, and our approach to making strategy education more accessible and engaging." />
</svelte:head>

<!-- Hero Section -->
<section class="relative py-20 bg-gradient-to-br from-primary/5 via-background to-secondary/5">
  <div class="absolute inset-0 opacity-5">
    <svg class="w-full h-full" viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg">
      <defs>
        <pattern id="about-grid" width="8" height="8" patternUnits="userSpaceOnUse">
          <circle cx="4" cy="4" r="0.5" fill="currentColor"/>
        </pattern>
      </defs>
      <rect width="100" height="100" fill="url(#about-grid)" />
    </svg>
  </div>
  
  <div class="relative z-10 max-w-4xl mx-auto px-4 text-center">
    <div class="transition-all duration-1000 transform"
         class:translate-y-0={heroVisible}
         class:opacity-100={heroVisible}
         class:translate-y-8={!heroVisible}
         class:opacity-0={!heroVisible}>
      
      <div class="text-6xl mb-6">🧭</div>
      <h1 class="text-4xl md:text-5xl font-bold mb-6 bg-gradient-to-r from-primary via-primary to-secondary bg-clip-text text-transparent">
        About Strategy Safari
      </h1>
      <p class="text-xl text-muted-foreground leading-relaxed max-w-3xl mx-auto">
        Navigating the complex landscape of strategic thinking through 
        <span class="text-primary font-semibold">interactive visualization</span> 
        and accessible learning experiences.
      </p>
    </div>
  </div>
</section>

<!-- Main Content -->
<section class="py-16 max-w-6xl mx-auto px-4">
  
  <!-- Project Vision -->
  <div class="mb-20 transition-all duration-700 transform"
       class:translate-y-0={sectionsVisible}
       class:opacity-100={sectionsVisible}
       class:translate-y-12={!sectionsVisible}
       class:opacity-0={!sectionsVisible}>
    
    <div class="grid md:grid-cols-2 gap-12 items-center">
      <div>
        <h2 class="text-3xl font-bold mb-6 text-foreground flex items-center gap-3">
          <span class="text-3xl">🎯</span>
          Our Vision
        </h2>
        <p class="text-lg text-muted-foreground leading-relaxed mb-6">
          Strategy Safari was created to make Henry Mintzberg's profound insights about strategy 
          more accessible, engaging, and practical for modern learners and practitioners.
        </p>
        <p class="text-lg text-muted-foreground leading-relaxed mb-6">
          Through interactive visualizations and intuitive design, we bridge the gap between 
          academic theory and practical understanding, making strategic thinking more tangible 
          and applicable.
        </p>
        <div class="flex flex-wrap gap-3">
          <span class="px-3 py-1 bg-primary/10 text-primary rounded-full text-sm font-medium">Interactive Learning</span>
          <span class="px-3 py-1 bg-secondary/10 text-secondary-foreground rounded-full text-sm font-medium">Visual Thinking</span>
          <span class="px-3 py-1 bg-primary/10 text-primary rounded-full text-sm font-medium">Accessibility</span>
        </div>
      </div>
      
      <div class="bg-gradient-to-br from-primary/10 to-secondary/10 rounded-2xl p-8 border border-border">
        <h3 class="text-xl font-bold mb-4 text-foreground">Key Principles</h3>
        <ul class="space-y-3 text-muted-foreground">
          <li class="flex items-start gap-3">
            <span class="text-primary text-lg">✓</span>
            <span>Make complex strategy concepts visually intuitive</span>
          </li>
          <li class="flex items-start gap-3">
            <span class="text-primary text-lg">✓</span>
            <span>Foster dialogue across disciplines and perspectives</span>
          </li>
          <li class="flex items-start gap-3">
            <span class="text-primary text-lg">✓</span>
            <span>Encourage reflective and pluralistic thinking</span>
          </li>
          <li class="flex items-start gap-3">
            <span class="text-primary text-lg">✓</span>
            <span>Bridge academic theory with practical application</span>
          </li>
        </ul>
      </div>
    </div>
  </div>

  <!-- About Mintzberg -->
  <div class="mb-20 transition-all duration-700 transform"
       class:translate-y-0={sectionsVisible}
       class:opacity-100={sectionsVisible}
       class:translate-y-12={!sectionsVisible}
       class:opacity-0={!sectionsVisible}
       style="transition-delay: 200ms;">
    
    <div class="bg-muted/30 rounded-2xl p-8 md:p-12 border border-border">
      <h2 class="text-3xl font-bold mb-8 text-foreground text-center flex items-center justify-center gap-3">
        <span class="text-3xl">📚</span>
        Henry Mintzberg's Strategy Safari
      </h2>
      
      <div class="grid md:grid-cols-3 gap-8">
        <div class="text-center">
          <div class="w-16 h-16 bg-primary/10 rounded-full flex items-center justify-center mx-auto mb-4">
            <span class="text-2xl">🔍</span>
          </div>
          <h3 class="font-bold text-lg mb-3 text-foreground">The Safari Metaphor</h3>
          <p class="text-muted-foreground text-sm leading-relaxed">
            Like explorers on a safari, we observe strategy formation in its natural habitat, 
            recognizing multiple species (schools) of strategic thinking.
          </p>
        </div>
        
        <div class="text-center">
          <div class="w-16 h-16 bg-secondary/10 rounded-full flex items-center justify-center mx-auto mb-4">
            <span class="text-2xl">🏫</span>
          </div>
          <h3 class="font-bold text-lg mb-3 text-foreground">Ten Schools</h3>
          <p class="text-muted-foreground text-sm leading-relaxed">
            From the prescriptive schools (Design, Planning, Positioning) to the descriptive schools 
            (Entrepreneurial, Cognitive, Learning, and others).
          </p>
        </div>
        
        <div class="text-center">
          <div class="w-16 h-16 bg-primary/10 rounded-full flex items-center justify-center mx-auto mb-4">
            <span class="text-2xl">📝</span>
          </div>
          <h3 class="font-bold text-lg mb-3 text-foreground">Five P's</h3>
          <p class="text-muted-foreground text-sm leading-relaxed">
            Strategy as Plan, Pattern, Position, Perspective, and Ploy - each offering 
            a unique lens for understanding strategic behavior.
          </p>
        </div>
      </div>
      
      <div class="mt-8 p-6 bg-background/50 rounded-xl border border-border/50">
        <blockquote class="text-lg italic text-muted-foreground text-center leading-relaxed">
          "Strategy formation is judgmental designing, intuitive visioning, and emergent learning; 
          it is about transformation as well as perpetuation; it must involve individual cognition 
          and social interaction, cooperation as well as conflict."
        </blockquote>
        <p class="text-center mt-4 text-sm text-muted-foreground/80">— Henry Mintzberg</p>
      </div>
    </div>
  </div>

  <!-- Technology & Approach -->
  <div class="mb-20 transition-all duration-700 transform"
       class:translate-y-0={sectionsVisible}
       class:opacity-100={sectionsVisible}
       class:translate-y-12={!sectionsVisible}
       class:opacity-0={!sectionsVisible}
       style="transition-delay: 400ms;">
    
    <h2 class="text-3xl font-bold mb-8 text-foreground text-center flex items-center justify-center gap-3">
      <span class="text-3xl">⚙️</span>
      Technology & Approach
    </h2>
    
    <div class="grid md:grid-cols-2 gap-8">
      <div class="bg-card border border-border rounded-xl p-6 hover:shadow-lg transition-all duration-300">
        <h3 class="text-xl font-bold mb-4 text-card-foreground flex items-center gap-3">
          <span class="text-2xl">🛠️</span>
          Built With
        </h3>
        <ul class="space-y-2 text-muted-foreground">
          <li class="flex items-center gap-3">
            <span class="w-2 h-2 bg-primary rounded-full"></span>
            <span><strong>SvelteKit</strong> - Modern, performant frontend framework</span>
          </li>
          <li class="flex items-center gap-3">
            <span class="w-2 h-2 bg-secondary rounded-full"></span>
            <span><strong>TypeScript</strong> - Type-safe development</span>
          </li>
          <li class="flex items-center gap-3">
            <span class="w-2 h-2 bg-primary rounded-full"></span>
            <span><strong>Chart.js</strong> - Interactive radar visualizations</span>
          </li>
          <li class="flex items-center gap-3">
            <span class="w-2 h-2 bg-secondary rounded-full"></span>
            <span><strong>Tailwind CSS</strong> - Responsive, accessible design</span>
          </li>
        </ul>
      </div>
      
      <div class="bg-card border border-border rounded-xl p-6 hover:shadow-lg transition-all duration-300">
        <h3 class="text-xl font-bold mb-4 text-card-foreground flex items-center gap-3">
          <span class="text-2xl">🎨</span>
          Design Philosophy
        </h3>
        <ul class="space-y-2 text-muted-foreground">
          <li class="flex items-center gap-3">
            <span class="w-2 h-2 bg-primary rounded-full"></span>
            <span><strong>Progressive Enhancement</strong> - Works without JavaScript</span>
          </li>
          <li class="flex items-center gap-3">
            <span class="w-2 h-2 bg-secondary rounded-full"></span>
            <span><strong>Accessibility First</strong> - Screen reader friendly</span>
          </li>
          <li class="flex items-center gap-3">
            <span class="w-2 h-2 bg-primary rounded-full"></span>
            <span><strong>Mobile Responsive</strong> - Optimal on all devices</span>
          </li>
          <li class="flex items-center gap-3">
            <span class="w-2 h-2 bg-secondary rounded-full"></span>
            <span><strong>Performance</strong> - Fast loading and interactions</span>
          </li>
        </ul>
      </div>
    </div>
  </div>

  <!-- Open Source & Community -->
  <div class="transition-all duration-700 transform"
       class:translate-y-0={sectionsVisible}
       class:opacity-100={sectionsVisible}
       class:translate-y-12={!sectionsVisible}
       class:opacity-0={!sectionsVisible}
       style="transition-delay: 600ms;">
    
    <div class="bg-gradient-to-r from-primary/10 via-primary/5 to-secondary/10 rounded-2xl p-8 md:p-12 border border-border text-center">
      <h2 class="text-3xl font-bold mb-6 text-foreground flex items-center justify-center gap-3">
        <span class="text-3xl">🌟</span>
        Open Learning
      </h2>
      <p class="text-lg text-muted-foreground mb-8 max-w-3xl mx-auto leading-relaxed">
        This project is inspired by Mintzberg's commitment to accessible, reflective learning. 
        We believe that strategic thinking should be democratic, visual, and engaging for learners 
        across all backgrounds and disciplines.
      </p>
      
      <div class="grid md:grid-cols-3 gap-6 mt-8">
        <div class="text-center">
          <div class="text-3xl mb-2">🎓</div>
          <h4 class="font-semibold text-foreground mb-2">For Educators</h4>
          <p class="text-sm text-muted-foreground">Use in classrooms to make strategy concepts more tangible</p>
        </div>
        <div class="text-center">
          <div class="text-3xl mb-2">💼</div>
          <h4 class="font-semibold text-foreground mb-2">For Practitioners</h4>
          <p class="text-sm text-muted-foreground">Reflect on your organization's strategic approaches</p>
        </div>
        <div class="text-center">
          <div class="text-3xl mb-2">🤝</div>
          <h4 class="font-semibold text-foreground mb-2">For Everyone</h4>
          <p class="text-sm text-muted-foreground">Explore strategy thinking in an accessible, visual way</p>
        </div>
      </div>

      <div class="mt-8 flex flex-col sm:flex-row gap-4 justify-center">
        <a href="/radar" 
           class="inline-flex items-center gap-3 bg-primary text-primary-foreground px-6 py-3 rounded-lg font-medium hover:bg-primary/90 transition-colors">
          <span>🚀</span>
          Start Exploring
        </a>
        <a href="/schools" 
           class="inline-flex items-center gap-3 text-primary border border-primary px-6 py-3 rounded-lg font-medium hover:bg-primary/10 transition-colors">
          <span>📖</span>
          Learn About Schools
        </a>
      </div>
    </div>
  </div>
</section>===== SLUTT ./src/routes/about/+page.svelte =====

===== START ./src/routes/ps/+page.svelte =====
<!-- src/routes/ps/+page.svelte -->
<script lang="ts">
  import PSOverview from '$lib/components/PSOverview.svelte';
</script>

<svelte:head>
  <title>The 5 P's of Strategy - Strategy Safari</title>
  <meta name="description" content="Explore Henry Mintzberg's Five P's of Strategy framework: Plan, Pattern, Position, Perspective, and Ploy through interactive examples and detailed explanations." />
</svelte:head>

<section class="max-w-7xl mx-auto px-4 py-8 md:py-16">
  <PSOverview />
</section>===== SLUTT ./src/routes/ps/+page.svelte =====

===== START ./src/routes/radar/+page.svelte =====
<!-- src/routes/radar/+page.svelte (Enkel og funksjonell versjon) -->
<script lang="ts">
	import { onMount } from 'svelte';
	import { fly, scale } from 'svelte/transition';
	import { quintOut } from 'svelte/easing';
	import { spring } from 'svelte/motion';
	
	// Importer din foretrukne radar-komponent
	import RadarPlot from '$lib/components/RadarPlot.svelte';
	// import StableRadarPlot from '$lib/components/StableRadarPlot.svelte';
	
	import type { RadarSchoolData } from '$lib/types';
  
	let radarData: RadarSchoolData[] = [];
	let selectedGroup = 'All';
	let selectedSchools: string[] = [];
	let showMobileFilters = false; // Kun for mobile
	let loading = true;
	let error: string | null = null;
	
	// Animation states
	let pageVisible = false;
  
	// Spring animations for counters
	const selectedCount = spring(0, { stiffness: 0.3, damping: 0.8 });
  
	$: filteredData = selectedGroup === 'All' 
	  ? radarData.filter(school => selectedSchools.length === 0 || selectedSchools.includes(school.school))
	  : radarData.filter(school => 
		  school.group === selectedGroup && 
		  (selectedSchools.length === 0 || selectedSchools.includes(school.school))
		);
  
	$: availableSchools = selectedGroup === 'All' 
	  ? radarData 
	  : radarData.filter(s => s.group === selectedGroup);
  
	// Update spring values
	$: selectedCount.set(selectedSchools.length);
  
	onMount(async () => {
	  try {
		const res = await fetch('/data/radarData.json');
		if (!res.ok) throw new Error('Failed to load radar data');
		radarData = await res.json();
		
		// Initialize with Design and Learning schools
		selectedSchools = ['Design School', 'Learning School'];
		
		// Trigger animations
		setTimeout(() => pageVisible = true, 100);
		
	  } catch (err) {
		error = err instanceof Error ? err.message : 'Unknown error';
	  } finally {
		loading = false;
	  }
	});
  
	function toggleSchool(schoolName: string) {
	  if (selectedSchools.includes(schoolName)) {
		selectedSchools = selectedSchools.filter(s => s !== schoolName);
	  } else {
		selectedSchools = [...selectedSchools, schoolName];
	  }
	}
  
	function selectAll() {
	  selectedSchools = availableSchools.map(s => s.school);
	}
  
	function clearAll() {
	  selectedSchools = [];
	}
  
	function getSchoolGroupColor(group: string) {
	  return group === 'Prescriptive' 
		? 'bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300'
		: 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300';
	}
  </script>
  
  <svelte:head>
	<title>Interactive Strategy Radar - Strategy Safari</title>
	<meta name="description" content="Explore strategy schools through an interactive radar visualization showing how each school emphasizes the five P's of strategy." />
  </svelte:head>
  
  {#if loading}
	<div class="min-h-screen flex items-center justify-center">
	  <div class="text-center">
		<div class="w-12 h-12 border-4 border-primary/30 border-t-primary rounded-full animate-spin mx-auto mb-4"></div>
		<p class="text-muted-foreground">Loading Strategy Radar...</p>
	  </div>
	</div>
  {:else if error}
	<div class="max-w-2xl mx-auto px-4 py-16">
	  <div class="bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-xl p-8 text-center">
		<div class="text-4xl mb-4">⚠️</div>
		<h2 class="text-xl font-bold text-red-800 dark:text-red-200 mb-2">Error Loading Data</h2>
		<p class="text-red-600 dark:text-red-400">{error}</p>
	  </div>
	</div>
  {:else}
	<section class="max-w-7xl mx-auto px-4 py-6 md:py-8">
	  <!-- Header -->
	  <div class="mb-6 md:mb-8 transition-all duration-700 transform"
		   class:translate-y-0={pageVisible}
		   class:opacity-100={pageVisible}
		   class:-translate-y-4={!pageVisible}
		   class:opacity-0={!pageVisible}>
		
		<h1 class="text-2xl md:text-3xl font-bold mb-3 text-foreground flex items-center gap-2">
		  <span class="text-xl">🧭</span>
		  Strategy Schools Radar
		</h1>
		<p class="text-muted-foreground text-sm md:text-base mb-4">
		  Visualize how different strategy schools emphasize the five P's framework
		</p>
		
		<!-- Quick stats -->
		<div class="flex gap-4">
		  <div class="px-3 py-1 bg-primary/10 rounded-full text-sm border border-primary/20">
			<span class="font-medium text-primary">{Math.round($selectedCount)}</span>
			<span class="text-muted-foreground">selected</span>
		  </div>
		  <div class="px-3 py-1 bg-secondary/10 rounded-full text-sm border border-secondary/20">
			<span class="font-medium text-secondary-foreground">{availableSchools.length}</span>
			<span class="text-muted-foreground">available</span>
		  </div>
		</div>
	  </div>
  
	  <!-- Mobile Filter Toggle -->
	  <div class="lg:hidden mb-4 transition-all duration-500 transform"
		   class:translate-y-0={pageVisible}
		   class:opacity-100={pageVisible}
		   class:-translate-y-4={!pageVisible}
		   class:opacity-0={!pageVisible}>
		<button
		  on:click={() => showMobileFilters = !showMobileFilters}
		  class="w-full flex items-center justify-between bg-card border border-border rounded-lg px-4 py-3 hover:bg-muted/50 transition-colors"
		>
		  <span class="font-medium text-card-foreground flex items-center gap-2">
			<span class="text-xl">🎛️</span>
			Filters & Controls
		  </span>
		  <span class="text-muted-foreground transition-transform duration-200" 
				class:rotate-180={showMobileFilters}>
			↓
		  </span>
		</button>
	  </div>
  
	  <div class="grid lg:grid-cols-4 gap-6">
		<!-- Controls Panel - Always visible on desktop, toggleable on mobile -->
		<div class="lg:col-span-1 space-y-4 transition-all duration-500"
			 class:hidden={!showMobileFilters && false} 
			 class:block={showMobileFilters || true}
			 class:lg:block={true}>
		  
		  <!-- Group Filter -->
		  <div class="bg-card border border-border rounded-xl p-4 shadow-sm hover:shadow-md transition-shadow">
			<h3 class="font-semibold mb-3 text-card-foreground flex items-center gap-2">
			  <span class="text-lg">🏷️</span>
			  Filter by Group
			</h3>
			<select
			  bind:value={selectedGroup}
			  class="w-full bg-background text-foreground border border-border rounded-lg px-3 py-2 text-sm focus:ring-2 focus:ring-primary focus:border-transparent transition-all"
			>
			  <option value="All">All Schools ({radarData.length})</option>
			  <option value="Prescriptive">Prescriptive ({radarData.filter(s => s.group === 'Prescriptive').length})</option>
			  <option value="Descriptive">Descriptive ({radarData.filter(s => s.group === 'Descriptive').length})</option>
			</select>
		  </div>
  
		  <!-- School Selection -->
		  <div class="bg-card border border-border rounded-xl p-4 shadow-sm hover:shadow-md transition-shadow">
			<div class="flex justify-between items-center mb-3">
			  <h3 class="font-semibold text-card-foreground flex items-center gap-2">
				<span class="text-lg">🏫</span>
				Select Schools
			  </h3>
			  <div class="flex gap-1">
				<button
				  on:click={selectAll}
				  class="text-xs px-2 py-1 bg-primary text-primary-foreground rounded-md hover:bg-primary/90 transition-colors"
				>
				  All
				</button>
				<button
				  on:click={clearAll}
				  class="text-xs px-2 py-1 bg-secondary text-secondary-foreground rounded-md hover:bg-secondary/90 transition-colors"
				>
				  Clear
				</button>
			  </div>
			</div>
			
			<div class="space-y-2 max-h-48 md:max-h-64 overflow-y-auto">
			  {#each availableSchools as school}
				<label class="flex items-center space-x-3 text-sm cursor-pointer p-2 rounded-lg hover:bg-muted/50 transition-colors group">
				  <input
					type="checkbox"
					checked={selectedSchools.includes(school.school)}
					on:change={() => toggleSchool(school.school)}
					class="rounded border-border focus:ring-2 focus:ring-primary"
				  />
				  <div class="flex-1 min-w-0">
					<span class="text-card-foreground font-medium block truncate group-hover:text-primary transition-colors">
					  {school.school}
					</span>
					<span class="text-xs px-2 py-0.5 rounded-full {getSchoolGroupColor(school.group)}">
					  {school.group}
					</span>
				  </div>
				</label>
			  {/each}
			</div>
		  </div>
  
		  <!-- Quick Info -->
		  <div class="bg-gradient-to-r from-primary/10 to-secondary/10 rounded-xl p-4 border border-border">
			<h4 class="font-semibold text-card-foreground mb-2 text-sm flex items-center gap-2">
			  <span class="text-lg">💡</span>
			  Quick Info
			</h4>
			<div class="text-xs text-muted-foreground space-y-1">
			  <p>• Select schools to compare their strategic emphasis</p>
			  <p>• Values show strength on each of the 5 P's (1-5 scale)</p>
			  <p>• Prescriptive schools focus on planning</p>
			  <p>• Descriptive schools focus on emergence</p>
			</div>
		  </div>
		</div>
  
		<!-- Chart Section -->
		<div class="lg:col-span-3 transition-all duration-700 transform"
			 class:translate-y-0={pageVisible}
			 class:opacity-100={pageVisible}
			 class:-translate-y-4={!pageVisible}
			 class:opacity-0={!pageVisible}>
		  
		  {#if filteredData.length > 0}
			<!-- Use your preferred radar component here -->
			<RadarPlot {filteredData} />
			
			<!-- Quick Insights -->
			{#if filteredData.length > 1}
			  <div class="mt-6 bg-muted/30 rounded-xl p-4 border border-border">
				<h3 class="text-lg font-semibold text-foreground mb-3 flex items-center gap-2">
				  <span class="text-xl">📈</span>
				  Comparison Insights
				</h3>
				<div class="grid grid-cols-2 md:grid-cols-5 gap-3 text-sm">
				  {#each ['Plan', 'Pattern', 'Position', 'Perspective', 'Ploy'] as p, index}
					{@const avgValue = filteredData.reduce((sum, school) => sum + school.values[index], 0) / filteredData.length}
					<div class="text-center p-3 bg-background/50 rounded-lg border border-border/30">
					  <div class="font-bold text-primary text-lg">{avgValue.toFixed(1)}</div>
					  <div class="text-muted-foreground text-xs">{p}</div>
					</div>
				  {/each}
				</div>
			  </div>
			{/if}
			
		  {:else}
			<div class="bg-card border border-border rounded-xl p-12 text-center">
			  <div class="text-6xl mb-4">🤔</div>
			  <h3 class="text-xl font-semibold text-card-foreground mb-2">No schools selected</h3>
			  <p class="text-muted-foreground mb-6">Choose some strategy schools to visualize their emphasis on the five P's.</p>
			  <button
				on:click={() => showMobileFilters = true}
				class="lg:hidden inline-flex items-center gap-2 bg-primary text-primary-foreground px-4 py-2 rounded-lg hover:bg-primary/90 transition-colors"
			  >
				<span>🎛️</span>
				Open Filters
			  </button>
			  <button
				on:click={selectAll}
				class="hidden lg:inline-flex items-center gap-2 bg-primary text-primary-foreground px-4 py-2 rounded-lg hover:bg-primary/90 transition-colors"
			  >
				<span>🚀</span>
				Select All Schools
			  </button>
			</div>
		  {/if}
		</div>
	  </div>
  
	  <!-- Help Text -->
	  <div class="mt-8 text-center">
		<p class="text-sm text-muted-foreground max-w-2xl mx-auto">
		  💡 <strong>Tip:</strong> Compare prescriptive vs descriptive schools to see how they approach strategy differently. 
		  Each school's values show how much they emphasize each of the five P's of strategy.
		</p>
	  </div>
	</section>
  {/if}===== SLUTT ./src/routes/radar/+page.svelte =====

===== START ./src/routes/radar/+page.ts =====
// File: src/routes/radar/+page.ts
import type { PageLoad } from './$types';

export const load: PageLoad = async ({ fetch }) => {
	const res = await fetch('/data/radarData.json');

	if (!res.ok) {
		throw new Error('Kunne ikke hente radarData.json');
	}

	const radarData = await res.json();
	return { radarData };
};
===== SLUTT ./src/routes/radar/+page.ts =====

===== START ./src/routes/schools/+page.svelte =====
<!-- src/routes/schools/+page.svelte -->
<script lang="ts">
  import { onMount } from 'svelte';
  import { goto } from '$app/navigation';
  import { page } from '$app/stores';
  import { fly } from 'svelte/transition';
  import { quintOut } from 'svelte/easing';
  import type { EnhancedSchoolData } from '$lib/types';

  let schoolsData: { schools: EnhancedSchoolData[] } | null = null;
  let selectedGroup: 'All' | 'Prescriptive' | 'Descriptive' = 'All';
  let searchQuery = '';
  let expandedSchools = new Set<string>();
  let selectedForComparison = new Set<string>();
  let loading = true;
  let error: string | null = null;
  let pageVisible = false;

  // URL state management
  $: if (typeof window !== 'undefined') {
    const params = new URLSearchParams();
    if (selectedGroup !== 'All') params.set('group', selectedGroup);
    if (searchQuery) params.set('search', searchQuery);
    if (selectedForComparison.size > 0) {
      params.set('compare', Array.from(selectedForComparison).join(','));
    }
    const newUrl = `${window.location.pathname}${params.toString() ? '?' + params.toString() : ''}`;
    if (newUrl !== window.location.href) {
      window.history.replaceState({}, '', newUrl);
    }
  }

  $: filteredSchools = schoolsData?.schools?.filter(school => {
    const matchesGroup = selectedGroup === 'All' || school.group === selectedGroup;
    const matchesSearch = !searchQuery || 
      school.name.toLowerCase().includes(searchQuery.toLowerCase()) ||
      school.description.toLowerCase().includes(searchQuery.toLowerCase()) ||
      school.keyFigures.some(figure => figure.toLowerCase().includes(searchQuery.toLowerCase()));
    return matchesGroup && matchesSearch;
  }) || [];

  $: prescriptiveCount = schoolsData?.schools?.filter(s => s.group === 'Prescriptive').length || 0;
  $: descriptiveCount = schoolsData?.schools?.filter(s => s.group === 'Descriptive').length || 0;

  onMount(async () => {
    try {
      // Load URL parameters
      const urlParams = new URLSearchParams(window.location.search);
      selectedGroup = (urlParams.get('group') as any) || 'All';
      searchQuery = urlParams.get('search') || '';
      const compareParam = urlParams.get('compare');
      if (compareParam) {
        selectedForComparison = new Set(compareParam.split(','));
      }

      // Load schools data
      const response = await fetch('/data/schools.json');
      if (!response.ok) throw new Error('Failed to load schools data');
      schoolsData = await response.json();
      
      // Trigger animations
      setTimeout(() => pageVisible = true, 100);
    } catch (err) {
      error = err instanceof Error ? err.message : 'Unknown error';
    } finally {
      loading = false;
    }
  });

  function toggleExpanded(schoolId: string) {
    if (expandedSchools.has(schoolId)) {
      expandedSchools.delete(schoolId);
    } else {
      expandedSchools.add(schoolId);
    }
    expandedSchools = expandedSchools; // Trigger reactivity
  }

  function toggleComparison(schoolId: string) {
    if (selectedForComparison.has(schoolId)) {
      selectedForComparison.delete(schoolId);
    } else {
      selectedForComparison.add(schoolId);
    }
    selectedForComparison = selectedForComparison; // Trigger reactivity
  }

  function clearComparison() {
    selectedForComparison.clear();
    selectedForComparison = selectedForComparison;
  }

  function goToRadar() {
    const schools = Array.from(selectedForComparison).join(',');
    goto(`/radar?schools=${encodeURIComponent(schools)}`);
  }

  function getGroupColor(group: string) {
    return group === 'Prescriptive' 
      ? 'bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300'
      : 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300';
  }

  function getStrengthColor(value: number): string {
    if (value >= 4) return 'text-green-600 dark:text-green-400';
    if (value >= 3) return 'text-yellow-600 dark:text-yellow-400';
    return 'text-gray-500 dark:text-gray-400';
  }
</script>

<svelte:head>
  <title>Strategy Schools - Deep Dive into Strategic Thinking</title>
  <meta name="description" content="Explore the ten schools of strategy formation in detail, from Design and Planning to Learning and Configuration schools." />
</svelte:head>

{#if loading}
  <div class="min-h-screen flex items-center justify-center">
    <div class="text-center">
      <div class="w-12 h-12 border-4 border-primary/30 border-t-primary rounded-full animate-spin mx-auto mb-4"></div>
      <p class="text-muted-foreground">Loading Strategy Schools...</p>
    </div>
  </div>
{:else if error}
  <div class="max-w-2xl mx-auto px-4 py-16">
    <div class="bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-xl p-8 text-center">
      <div class="text-4xl mb-4">⚠️</div>
      <h2 class="text-xl font-bold text-red-800 dark:text-red-200 mb-2">Error Loading Schools</h2>
      <p class="text-red-600 dark:text-red-400">{error}</p>
    </div>
  </div>
{:else}
  <section class="max-w-7xl mx-auto px-4 py-8">
    
    <!-- Header -->
    <div class="mb-8 transition-all duration-700 transform"
         class:translate-y-0={pageVisible}
         class:opacity-100={pageVisible}
         class:-translate-y-4={!pageVisible}
         class:opacity-0={!pageVisible}>
      
      <h1 class="text-3xl md:text-4xl font-bold mb-4 text-foreground flex items-center gap-3">
        <span class="text-3xl">🏫</span>
        Strategy Schools
      </h1>
      <p class="text-lg text-muted-foreground mb-6 max-w-3xl">
        Dive deep into the ten schools of strategy formation. Each school offers a unique perspective 
        on how strategy emerges, develops, and influences organizational behavior.
      </p>

      <!-- Quick Stats -->
      <div class="flex flex-wrap gap-3 mb-6">
        <div class="px-4 py-2 bg-primary/10 rounded-lg border border-primary/20">
          <span class="font-bold text-primary">{schoolsData?.schools?.length || 0}</span>
          <span class="text-muted-foreground ml-1">Total Schools</span>
        </div>
        <div class="px-4 py-2 bg-blue-100 dark:bg-blue-900/30 rounded-lg border border-blue-200 dark:border-blue-800">
          <span class="font-bold text-blue-800 dark:text-blue-300">{prescriptiveCount}</span>
          <span class="text-blue-600 dark:text-blue-400 ml-1">Prescriptive</span>
        </div>
        <div class="px-4 py-2 bg-green-100 dark:bg-green-900/30 rounded-lg border border-green-200 dark:border-green-800">
          <span class="font-bold text-green-800 dark:text-green-300">{descriptiveCount}</span>
          <span class="text-green-600 dark:text-green-400 ml-1">Descriptive</span>
        </div>
      </div>
    </div>

    <!-- Filters & Search -->
    <div class="mb-8 space-y-4 transition-all duration-700 transform"
         class:translate-y-0={pageVisible}
         class:opacity-100={pageVisible}
         class:-translate-y-4={!pageVisible}
         class:opacity-0={!pageVisible}
         style="transition-delay: 200ms;">
      
      <!-- Search -->
      <div class="relative max-w-md">
        <input
          type="text"
          placeholder="Search schools, figures, or concepts..."
          bind:value={searchQuery}
          class="w-full bg-background text-foreground border border-border rounded-lg px-4 py-3 pl-10 focus:ring-2 focus:ring-primary focus:border-transparent transition-all"
        />
        <div class="absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground">
          🔍
        </div>
      </div>

      <!-- Group Filter -->
      <div class="flex flex-wrap gap-2">
        <button 
          on:click={() => selectedGroup = 'All'}
          class="px-4 py-2 rounded-lg font-medium transition-all duration-200"
          class:bg-primary={selectedGroup === 'All'}
          class:text-primary-foreground={selectedGroup === 'All'}
          class:bg-secondary={selectedGroup !== 'All'}
          class:text-secondary-foreground={selectedGroup !== 'All'}
          class:hover:bg-primary/90={selectedGroup === 'All'}
          class:hover:bg-secondary/90={selectedGroup !== 'All'}
        >
          All Schools ({schoolsData?.schools?.length || 0})
        </button>
        <button 
          on:click={() => selectedGroup = 'Prescriptive'}
          class="px-4 py-2 rounded-lg font-medium transition-all duration-200"
          class:bg-primary={selectedGroup === 'Prescriptive'}
          class:text-primary-foreground={selectedGroup === 'Prescriptive'}
          class:bg-secondary={selectedGroup !== 'Prescriptive'}
          class:text-secondary-foreground={selectedGroup !== 'Prescriptive'}
          class:hover:bg-primary/90={selectedGroup === 'Prescriptive'}
          class:hover:bg-secondary/90={selectedGroup !== 'Prescriptive'}
        >
          Prescriptive ({prescriptiveCount})
        </button>
        <button 
          on:click={() => selectedGroup = 'Descriptive'}
          class="px-4 py-2 rounded-lg font-medium transition-all duration-200"
          class:bg-primary={selectedGroup === 'Descriptive'}
          class:text-primary-foreground={selectedGroup === 'Descriptive'}
          class:bg-secondary={selectedGroup !== 'Descriptive'}
          class:text-secondary-foreground={selectedGroup !== 'Descriptive'}
          class:hover:bg-primary/90={selectedGroup === 'Descriptive'}
          class:hover:bg-secondary/90={selectedGroup !== 'Descriptive'}
        >
          Descriptive ({descriptiveCount})
        </button>
      </div>
    </div>

    <!-- Comparison Bar -->
    {#if selectedForComparison.size > 0}
      <div class="mb-6 p-4 bg-primary/10 border border-primary/20 rounded-xl transition-all duration-300"
           in:fly={{ y: -20, duration: 300 }}>
        <div class="flex items-center justify-between flex-wrap gap-4">
          <div class="flex items-center gap-3">
            <span class="text-primary font-medium">
              📊 {selectedForComparison.size} school{selectedForComparison.size !== 1 ? 's' : ''} selected for comparison
            </span>
          </div>
          <div class="flex gap-2">
            <button
              on:click={goToRadar}
              class="px-4 py-2 bg-primary text-primary-foreground rounded-lg font-medium hover:bg-primary/90 transition-colors flex items-center gap-2"
            >
              <span>🚀</span>
              View in Radar
            </button>
            <button
              on:click={clearComparison}
              class="px-4 py-2 bg-secondary text-secondary-foreground rounded-lg font-medium hover:bg-secondary/90 transition-colors"
            >
              Clear
            </button>
          </div>
        </div>
      </div>
    {/if}

    <!-- Schools Grid -->
    <div class="space-y-6">
      {#each filteredSchools as school, index (school.id)}
        <div class="transition-all duration-500 transform"
             class:translate-y-0={pageVisible}
             class:opacity-100={pageVisible}
             class:translate-y-8={!pageVisible}
             class:opacity-0={!pageVisible}
             style="transition-delay: {300 + index * 100}ms;"
             in:fly={{ y: 50, duration: 400, delay: index * 50, easing: quintOut }}>
          
          <div class="bg-card border border-border rounded-xl shadow-sm hover:shadow-lg transition-all duration-300 overflow-hidden">
            
            <!-- School Header -->
            <div class="p-6 border-b border-border">
              <div class="flex justify-between items-start mb-4">
                <div class="flex-1">
                  <div class="flex items-center gap-3 mb-2">
                    <h3 class="text-2xl font-bold text-card-foreground">
                      {school.name}
                    </h3>
                    <span class="text-sm px-3 py-1 rounded-full font-medium {getGroupColor(school.group)}">
                      {school.group}
                    </span>
                  </div>
                  
                  <p class="text-muted-foreground leading-relaxed mb-4">
                    {school.description}
                  </p>

                  <!-- Quick info -->
                  <div class="flex flex-wrap gap-4 text-sm text-muted-foreground">
                    <span class="flex items-center gap-1">
                      📅 <span class="font-medium">{school.originPeriod}</span>
                    </span>
                    <span class="flex items-center gap-1">
                      👥 <span class="font-medium">{school.keyFigures[0]}</span>
                      {#if school.keyFigures.length > 1}
                        <span class="text-muted-foreground/60">+{school.keyFigures.length - 1} more</span>
                      {/if}
                    </span>
                  </div>
                </div>
                
                <div class="flex items-center gap-2 ml-4">
                  <button
                    on:click={() => toggleComparison(school.id)}
                    class="px-3 py-2 rounded-lg text-sm font-medium transition-all duration-200"
                    class:bg-primary={selectedForComparison.has(school.id)}
                    class:text-primary-foreground={selectedForComparison.has(school.id)}
                    class:bg-secondary={!selectedForComparison.has(school.id)}
                    class:text-secondary-foreground={!selectedForComparison.has(school.id)}
                    class:hover:bg-primary/90={selectedForComparison.has(school.id)}
                    class:hover:bg-secondary/90={!selectedForComparison.has(school.id)}
                  >
                    {selectedForComparison.has(school.id) ? '✓ Selected' : '+ Compare'}
                  </button>
                  
                  <button
                    on:click={() => toggleExpanded(school.id)}
                    class="p-2 hover:bg-muted rounded-lg transition-colors"
                  >
                    <div class="text-muted-foreground transition-transform duration-200" 
                         class:rotate-180={expandedSchools.has(school.id)}>
                      ↓
                    </div>
                  </button>
                </div>
              </div>

              <!-- Five P's Preview -->
              <div class="grid grid-cols-5 gap-2">
                {#each school.values as value, pIndex}
                  {@const pLabels = ['Plan', 'Pattern', 'Position', 'Perspective', 'Ploy']}
                  <div class="text-center===== SLUTT ./src/routes/schools/+page.svelte =====

===== START ./src/routes/+layout.svelte =====
<script lang="ts">
  import "../app.css";
  import Header from "$lib/components/Header.svelte";
</script>

<div class="min-h-screen bg-background text-foreground font-sans antialiased">
  <Header />
  <main>
    <slot />
  </main>
</div>===== SLUTT ./src/routes/+layout.svelte =====
